From: =?gb2312?B?0tHTySBJbnRlcm5ldCBFeHBsb3JlciAxMSCxo7Tm?=
Subject: =?gb2312?B?Z2l0IHB1c2jTw7eous2zo7z7zsrM4rfWzvYgLSCxsbyrueLWrs7HIC0gSVQ=?=
	=?gb2312?B?ZXllvLzK9c341b4=?=
Date: Sat, 11 Oct 2014 07:41:30 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CFE526.C5815860"
X-MimeOLE: Produced By Microsoft MimeOLE V6.3.9600.16384

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://862123204-qq-com.iteye.com/blog/1683315

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" =
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML=20
dir=3D"ltr" xml:lang=3D"zh-CN" =
xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><META=20
content=3D"IE=3D11.0000" http-equiv=3D"X-UA-Compatible">
    =20
<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3DUTF-8">    =20
<TITLE>git =
push=E7=94=A8=E6=B3=95=E5=92=8C=E5=B8=B8=E8=A7=81=E9=97=AE=E9=A2=98=E5=88=
=86=E6=9E=90 - =E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB - =
ITeye=E6=8A=80=E6=9C=AF=E7=BD=91=E7=AB=99</TITLE>    =20
<META name=3D"description" content=3D"  &nbsp;  =
=E5=9C=A8=E4=BD=BF=E7=94=A8git =
=E5=A4=84=E7=90=86=E5=AF=B9android=E7=9A=84=E4=BF=AE=E6=94=B9=E7=9A=84=E8=
=BF=87=E7=A8=8B=E4=B9=8B=E4=B8=AD=E6=80=BB=E7=BB=93=E7=9A=84.=E4=BD=86=E4=
=B8=8D=E5=AE=8C=E5=96=84  &nbsp;  Git push  $ git push origin =
test:master&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
=E6=8F=90=E4=BA=A4=E6=9C=AC=E5=9C=B0test=E5=88=86=E6=94=AF=E4=BD=9C=E4=B8=
=BA=E8=BF=9C=E7=A8=8B=E7=9A=84master=E5=88=86=E6=94=AF  $ git push =
origin =
test:test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp; // =
=E6=8F=90=E4=BA=A4=E6=9C=AC=E5=9C=B0test=E5=88=86=E6=94=AF=E4=BD=9C=E4=B8=
=BA=E8=BF=9C=E7=A8=8B=E7=9A=84test=E5=88=86=E6=94=AF  =
=E5=A6=82=E6=9E=9C=E6=83=B3=E5=88=A0=E9=99=A4=E8=BF=9C=E7=A8=8B=E7=9A=84=E5=
=88=86=E6=94=AF=E5=91=A2=EF=BC=9F=E7=B1=BB=E4=BC=BC=E4=BA=8E ...">=20
   =20
<META name=3D"keywords" content=3D"git git =
push=E7=94=A8=E6=B3=95=E5=92=8C=E5=B8=B8=E8=A7=81=E9=97=AE=E9=A2=98=E5=88=
=86=E6=9E=90">     <LINK href=3D"/images/favicon.ico"=20
rel=3D"shortcut icon" type=3D"image/x-icon">     <LINK title=3D"ITeye" =
href=3D"/open_search.xml"=20
rel=3D"search" type=3D"application/opensearchdescription+xml">     <LINK =
title=3D"=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB"=20
href=3D"/rss" rel=3D"alternate" type=3D"application/rss+xml">     <LINK =
href=3D"http://www.iteye.com/stylesheets/blog.css?1406686577"=20
rel=3D"stylesheet" type=3D"text/css" media=3D"screen"> <LINK =
href=3D"http://www.iteye.com/stylesheets/themes/blog/blue.css?1326191326"=
=20
rel=3D"stylesheet" type=3D"text/css" media=3D"screen">    =20
<SCRIPT =
src=3D"http://www.iteye.com/javascripts/application.js?1358214518" =
type=3D"text/javascript"></SCRIPT>
    =20
<SCRIPT type=3D"text/javascript">=0A=
=0A=
  var _gaq =3D _gaq || [];=0A=
  _gaq.push(['_setAccount', 'UA-535605-1']);=0A=
  _gaq.push(['_setDomainName', 'iteye.com']);=0A=
  _gaq.push(['_trackPageview']);=0A=
=0A=
  (function() {=0A=
    var ga =3D document.createElement('script'); ga.type =3D =
'text/javascript'; ga.async =3D true;=0A=
    ga.src =3D ('https:' =3D=3D document.location.protocol ? =
'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';=0A=
    var s =3D document.getElementsByTagName('script')[0]; =
s.parentNode.insertBefore(ga, s);=0A=
  })();=0A=
=0A=
</SCRIPT>
       <LINK =
href=3D"http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighligh=
ter.css?1348819953"=20
rel=3D"stylesheet" type=3D"text/css" media=3D"screen">  =20
<SCRIPT =
src=3D"http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js=
?1325907333" type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://www.iteye.com/javascripts/hotkey.js?1324994303" =
type=3D"text/javascript"></SCRIPT>
  =20
<SCRIPT =
src=3D"http://www.iteye.com/javascripts/code_favorites.js?1358214518" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT =
src=3D"http://www.iteye.com/javascripts/weiboshare.js?1324994303" =
type=3D"text/javascript"></SCRIPT>
  =20
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.16663"></HEAD>  =20
<BODY>
<DIV id=3D"header">
<DIV id=3D"blog_site_nav"><A class=3D"homepage" =
href=3D"http://www.iteye.com/">=E9=A6=96=E9=A1=B5</A> =20
 <A href=3D"http://www.iteye.com/news">=E8=B5=84=E8=AE=AF</A>   <A =
href=3D"http://www.iteye.com/magazines">=E7=B2=BE=E5=8D=8E</A>=20
  <A href=3D"http://www.iteye.com/forums">=E8=AE=BA=E5=9D=9B</A>   <A =
href=3D"http://www.iteye.com/ask">=E9=97=AE=E7=AD=94</A>=20
  <A href=3D"http://www.iteye.com/blogs">=E5=8D=9A=E5=AE=A2</A>   <A =
href=3D"http://www.iteye.com/blogs/subjects">=E4=B8=93=E6=A0=8F</A>=20
  <A href=3D"http://www.iteye.com/groups">=E7=BE=A4=E7=BB=84</A>   <A =
id=3D"msna" onclick=3D"return false;"=20
href=3D"http://862123204-qq-com.iteye.com/blog/1683315#"><U>=E6=9B=B4=E5=A4=
=9A</U>=20
<SMALL>=E2=96=BC</SMALL></A>  =20
<DIV class=3D"quick_menu" style=3D"display: none;"><A =
href=3D"http://job.iteye.com/iteye"=20
target=3D"_blank">=E6=8B=9B=E8=81=98</A><A =
href=3D"http://www.iteye.com/search">=E6=90=9C=E7=B4=A2</A></DIV></DIV>
<DIV id=3D"user_nav"><A title=3D"=E7=99=BB=E5=BD=95" class=3D"welcome" =
href=3D"http://862123204-qq-com.iteye.com/login">=E6=82=A8=E8=BF=98=E6=9C=
=AA=E7=99=BB=E5=BD=95=20
!</A>     <A =
href=3D"http://862123204-qq-com.iteye.com/login">=E7=99=BB=E5=BD=95</A>  =
   <A class=3D"nobg"=20
href=3D"http://862123204-qq-com.iteye.com/signup">=E6=B3=A8=E5=86=8C</A> =
  </DIV></DIV>
<DIV id=3D"page">
<DIV class=3D"clearfix" id=3D"branding">
<DIV id=3D"blog_name">
<H1><A =
href=3D"http://862123204-qq-com.iteye.com/">=E5=8C=97=E6=9E=81=E5=85=89=E4=
=B9=8B=E5=90=BB</A></H1></DIV>
<DIV id=3D"fd"></DIV>
<DIV id=3D"blog_navbar">
<UL>
  <LI class=3D"blog_navbar_for"><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/"><STRONG>=E5=8D=9A=E5=AE=A2</S=
TRONG></A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/weibo">=E5=BE=AE=E5=8D=9A</A></=
LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/album">=E7=9B=B8=E5=86=8C</A></=
LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/link">=E6=94=B6=E8=97=8F</A></L=
I>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/blog/guest_book">=E7=95=99=E8=A8=
=80</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/blog/profile">=E5=85=B3=E4=BA=8E=
=E6=88=91</A></LI></UL>
<DIV class=3D"search">
<FORM action=3D"/blog/search"=20
method=3D"get"><INPUT name=3D"query" class=3D"search_text" id=3D"query" =
style=3D"width: 110px; margin-left: 10px;" type=3D"text">=20
              <INPUT class=3D"submit_search" type=3D"submit">            =
=20
</FORM></DIV>
<DIV id=3D"fd"></DIV></DIV></DIV>
<DIV class=3D"clearfix" id=3D"content">
<DIV id=3D"main">
<DIV class=3D"h-entry" style=3D"display: none;"><A class=3D"p-author" =
href=3D"http://862123204-qq-com.iteye.com/"=20
target=3D"_blank">=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB</A> =
</DIV>
<DIV class=3D"blog_main">
<DIV class=3D"blog_title">
<H3><A href=3D"http://862123204-qq-com.iteye.com/blog/1683315">git=20
push=E7=94=A8=E6=B3=95=E5=92=8C=E5=B8=B8=E8=A7=81=E9=97=AE=E9=A2=98=E5=88=
=86=E6=9E=90</A>       <EM class=3D"actions"></EM>     </H3>
<UL =
class=3D"blog_categories"><STRONG>=E5=8D=9A=E5=AE=A2=E5=88=86=E7=B1=BB=EF=
=BC=9A</STRONG>=20
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/238373">Git</A></LI>=20
</UL>
<DIV class=3D"news_tag"><A=20
href=3D"http://www.iteye.com/blogs/tag/git">git</A>&nbsp;</DIV></DIV>
<DIV class=3D"blog_content" id=3D"blog_content">
<DIV class=3D"iteye-blog-content-contain" style=3D"font-size: 14px;">
<P>&nbsp;</P>
<P class=3D"MsoTitle" style=3D"text-align: =
left;">=E5=9C=A8=E4=BD=BF=E7=94=A8git=20
=E5=A4=84=E7=90=86=E5=AF=B9android=E7=9A=84=E4=BF=AE=E6=94=B9=E7=9A=84=E8=
=BF=87=E7=A8=8B=E4=B9=8B=E4=B8=AD=E6=80=BB=E7=BB=93=E7=9A=84.=E4=BD=86=E4=
=B8=8D=E5=AE=8C=E5=96=84</P>
<P class=3D"MsoTitle" style=3D"text-align: left;">&nbsp;</P>
<P class=3D"MsoTitle" style=3D"text-align: left;">Git push</P>
<P class=3D"MsoNormal" style=3D"margin-left: 21pt;">$ git push origin=20
test:master&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //=20
=E6=8F=90=E4=BA=A4=E6=9C=AC=E5=9C=B0test=E5=88=86=E6=94=AF=E4=BD=9C=E4=B8=
=BA=E8=BF=9C=E7=A8=8B=E7=9A=84master=E5=88=86=E6=94=AF</P>
<P class=3D"MsoNormal" style=3D"margin-left: 21pt;">$ git push origin=20
test:test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;=20
// =
=E6=8F=90=E4=BA=A4=E6=9C=AC=E5=9C=B0test=E5=88=86=E6=94=AF=E4=BD=9C=E4=B8=
=BA=E8=BF=9C=E7=A8=8B=E7=9A=84test=E5=88=86=E6=94=AF</P>
<P class=3D"MsoNormal"=20
style=3D"margin-left: =
21pt;">=E5=A6=82=E6=9E=9C=E6=83=B3=E5=88=A0=E9=99=A4=E8=BF=9C=E7=A8=8B=E7=
=9A=84=E5=88=86=E6=94=AF=E5=91=A2=EF=BC=9F=E7=B1=BB=E4=BC=BC=E4=BA=8E=E4=B8=
=8A=E9=9D=A2=EF=BC=8C=E5=A6=82=E6=9E=9C:=E5=B7=A6=E8=BE=B9=E7=9A=84=E5=88=
=86=E6=94=AF=E4=B8=BA=E7=A9=BA=EF=BC=8C=E9=82=A3=E4=B9=88=E5=B0=86=E5=88=A0=
=E9=99=A4:=E5=8F=B3=E8=BE=B9=E7=9A=84=E8=BF=9C=E7=A8=8B=E7=9A=84=E5=88=86=
=E6=94=AF=E3=80=82</P>
<P class=3D"MsoNormal" style=3D"margin-left: 21pt;">&nbsp;</P>
<P class=3D"MsoNormal" style=3D"margin-left: 21pt;">$ git push origin=20
:test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;=20
// =
=E5=88=9A=E6=8F=90=E4=BA=A4=E5=88=B0=E8=BF=9C=E7=A8=8B=E7=9A=84test=E5=B0=
=86=E8=A2=AB=E5=88=A0=E9=99=A4=EF=BC=8C=E4=BD=86=E6=98=AF=E6=9C=AC=E5=9C=B0=
=E8=BF=98=E4=BC=9A=E4=BF=9D=E5=AD=98=E7=9A=84=EF=BC=8C=E4=B8=8D=E7=94=A8=E6=
=8B=85=E5=BF=83=E3=80=82</P>
<P class=3D"MsoNormal" style=3D"margin-left: =
21pt;">=E4=B8=BE=E4=B8=AA=E4=BE=8B=E5=AD=90:</P>
<P class=3D"MsoNormal">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; git push =
origin=20
&nbsp;:origin/Android_HK_K501_77-W916=20
//=E7=94=B1=E4=BA=8E:=E5=89=8D=E9=9D=A2=E4=B8=BA=E7=A9=BA=E6=89=80=E4=BB=A5=
=E6=9C=AC=E6=9D=A5=E5=9C=A8=E6=9C=8D=E5=8A=A1=E5=99=A8=E4=B8=8A=E9=9D=A2=E5=
=AD=98=E5=9C=A8=E7=9A=84=E5=88=86=E6=94=AForigin/Android_HK_K501_77-W916=E5=
=92=8CAndroid_HK_K501_77-W916=E7=8E=B0=E5=9C=A8=E5=B0=B1=E5=8F=AA=E6=9C=89=
=E4=B8=80=E4=B8=AA=E4=BA=86,=E5=9B=A0=E4=B8=BA=E5=88=86=E6=94=AForigin/An=
droid_HK_K501_77-W916=E8=A2=AB=E5=88=A0=E9=99=A4=E4=BA=86,=E4=BD=86=E6=98=
=AF=E6=9C=AC=E5=9C=B0=E7=9A=84=E8=BF=98=E5=9C=A8</P>
<P class=3D"MsoNormal">&nbsp;</P>
<P =
class=3D"MsoNormal"><STRONG>=E5=B8=B8=E8=A7=81=E9=94=99=E8=AF=AF:</STRONG=
></P>
<P class=3D"MsoSubtitle" style=3D"text-align: =
left;"><STRONG>1.error:failed to push=20
some refs to ...</STRONG></P>
<P =
class=3D"MsoNormal">=E5=BD=93=E8=A6=81push=E4=BB=A3=E7=A0=81=E5=88=B0git=E6=
=97=B6=EF=BC=8C=E5=87=BA=E7=8E=B0=E6=8F=90=E7=A4=BA=EF=BC=9A</P>
<TABLE class=3D"MsoNormalTable" style=3D"border: currentColor; =
border-image: none; border-collapse: collapse;"=20
border=3D"1" cellspacing=3D"0" cellpadding=3D"0">
  <TBODY>
  <TR>
    <TD width=3D"568" style=3D"padding: 0cm 5.4pt; width: 426.1pt;">
      <P class=3D"MsoNormal">error:failed to push some refs to ...</P>
      <P class=3D"MsoNormal">Dealing with =
=E2=80=9Cnon-fast-forward=E2=80=9D errors</P>
      <P class=3D"MsoNormal">From time to time you may encounter this =
error while=20
      pushing:</P>
      <P class=3D"MsoNormal">$ git push origin master&nbsp;</P>
      <P class=3D"MsoNormal">To ../remote/&nbsp;</P>
      <P class=3D"MsoNormal">&nbsp;!=20
      [rejected]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; master -&gt; =
master=20
      (non-fast forward)&nbsp;</P>
      <P class=3D"MsoNormal">error: failed to push some refs to=20
      '../remote/'&nbsp;</P>
      <P class=3D"MsoNormal">To prevent you from losing history, =
non-fast-forward=20
      updates were rejected</P>
      <P class=3D"MsoNormal">Merge the remote changes before pushing =
again.&nbsp;=20
      See the 'non-fast forward'</P>
      <P class=3D"MsoNormal">section of 'git push --help' for=20
  details.</P></TD></TR></TBODY></TABLE>
<P class=3D"MsoNormal">&nbsp;</P>
<P=20
class=3D"MsoNormal">=E9=97=AE=E9=A2=98=EF=BC=88Non-fast-forward=EF=BC=89=E7=
=9A=84=E5=87=BA=E7=8E=B0=E5=8E=9F=E5=9B=A0=E5=9C=A8=E4=BA=8E=EF=BC=9Agit=E4=
=BB=93=E5=BA=93=E4=B8=AD=E5=B7=B2=E7=BB=8F=E6=9C=89=E4=B8=80=E9=83=A8=E5=88=
=86=E4=BB=A3=E7=A0=81=EF=BC=8C=E6=89=80=E4=BB=A5=E5=AE=83=E4=B8=8D=E5=85=81=
=E8=AE=B8=E4=BD=A0=E7=9B=B4=E6=8E=A5=E6=8A=8A=E4=BD=A0=E7=9A=84=E4=BB=A3=E7=
=A0=81=E8=A6=86=E7=9B=96=E4=B8=8A=E5=8E=BB=E3=80=82=E4=BA=8E=E6=98=AF=E4=BD=
=A0=E6=9C=892=E4=B8=AA=E9=80=89=E6=8B=A9=E6=96=B9=E5=BC=8F=EF=BC=9A</P>
<P class=3D"MsoNormal">&nbsp;</P>
<P =
class=3D"MsoNormal">=E5=BC=BA=E6=8E=A8=EF=BC=8C=E5=8D=B3=E5=88=A9=E7=94=A8=
=E5=BC=BA=E8=A6=86=E7=9B=96=E6=96=B9=E5=BC=8F=E7=94=A8=E4=BD=A0=E6=9C=AC=E5=
=9C=B0=E7=9A=84=E4=BB=A3=E7=A0=81=E6=9B=BF=E4=BB=A3git=E4=BB=93=E5=BA=93=E5=
=86=85=E7=9A=84=E5=86=85=E5=AE=B9</P>
<P class=3D"MsoNormal"><STRONG>git push -f</STRONG></P>
<P class=3D"MsoNormal">&nbsp;</P>
<P =
class=3D"MsoNormal">2.&nbsp;=E5=85=88=E6=8A=8Agit=E7=9A=84=E4=B8=9C=E8=A5=
=BFfetch=E5=88=B0=E4=BD=A0=E6=9C=AC=E5=9C=B0=E7=84=B6=E5=90=8Emerge=E5=90=
=8E=E5=86=8Dpush</P>
<P class=3D"MsoNormal">$ git fetch</P>
<P class=3D"MsoNormal">$ git merge</P>
<P =
class=3D"MsoNormal">=E8=BF=992=E5=8F=A5=E5=91=BD=E4=BB=A4=E7=AD=89=E4=BB=B7=
=E4=BA=8E</P>
<P class=3D"MsoNormal">$ git pull&nbsp;</P>
<P =
class=3D"MsoNormal">=E5=8F=AF=E6=98=AF=EF=BC=8C=E8=BF=99=E6=97=B6=E5=80=99=
=E5=8F=88=E5=87=BA=E7=8E=B0=E4=BA=86=E5=A6=82=E4=B8=8B=E7=9A=84=E9=97=AE=E9=
=A2=98=EF=BC=9A</P>
<P class=3D"MsoNormal">=E4=B8=8A=E9=9D=A2=E5=87=BA=E7=8E=B0=E7=9A=84 =
[branch =
"master"]=E6=98=AF=E9=9C=80=E8=A6=81=E6=98=8E=E7=A1=AE(.git/config)=E5=A6=
=82=E4=B8=8B=E7=9A=84=E5=86=85=E5=AE=B9</P>
<TABLE class=3D"MsoNormalTable" style=3D"border: currentColor; =
border-image: none; border-collapse: collapse;"=20
border=3D"1" cellspacing=3D"0" cellpadding=3D"0">
  <TBODY>
  <TR>
    <TD width=3D"568" style=3D"padding: 0cm 5.4pt; width: 426.1pt;">
      <P class=3D"MsoNormal">[branch "master"]</P>
      <P class=3D"MsoNormal">&nbsp;&nbsp;&nbsp; remote =3D origin</P>
      <P class=3D"MsoNormal">&nbsp;&nbsp;&nbsp; merge =3D=20
  refs/heads/master</P></TD></TR></TBODY></TABLE>
<P =
class=3D"MsoNormal">=E8=BF=99=E7=AD=89=E4=BA=8E=E5=91=8A=E8=AF=89git2=E4=BB=
=B6=E4=BA=8B:</P>
<P =
class=3D"MsoNormal">1=EF=BC=8C=E5=BD=93=E4=BD=A0=E5=A4=84=E4=BA=8Emaster =
branch, =
=E9=BB=98=E8=AE=A4=E7=9A=84remote=E5=B0=B1=E6=98=AForigin=E3=80=82</P>
<P class=3D"MsoNormal">2=EF=BC=8C=E5=BD=93=E4=BD=A0=E5=9C=A8master =
branch=E4=B8=8A=E4=BD=BF=E7=94=A8git=20
pull=E6=97=B6=EF=BC=8C=E6=B2=A1=E6=9C=89=E6=8C=87=E5=AE=9Aremote=E5=92=8C=
branch=EF=BC=8C=E9=82=A3=E4=B9=88git=E5=B0=B1=E4=BC=9A=E9=87=87=E7=94=A8=E9=
=BB=98=E8=AE=A4=E7=9A=84remote=EF=BC=88=E4=B9=9F=E5=B0=B1=E6=98=AForigin=EF=
=BC=89=E6=9D=A5merge=E5=9C=A8master=20
branch=E4=B8=8A=E6=89=80=E6=9C=89=E7=9A=84=E6=94=B9=E5=8F=98</P>
<P =
class=3D"MsoNormal">=E5=A6=82=E6=9E=9C=E4=B8=8D=E6=83=B3=E6=88=96=E8=80=85=
=E4=B8=8D=E4=BC=9A=E7=BC=96=E8=BE=91config=E6=96=87=E4=BB=B6=E7=9A=84=E8=AF=
=9D=EF=BC=8C=E5=8F=AF=E4=BB=A5=E5=9C=A8bush=E4=B8=8A=E8=BE=93=E5=85=A5=E5=
=A6=82=E4=B8=8B=E5=91=BD=E4=BB=A4=E8=A1=8C=EF=BC=9A</P>
<P class=3D"MsoNormal">$ git config branch.master.remote =
origin&nbsp;</P>
<P class=3D"MsoNormal">$ git config branch.master.merge=20
refs/heads/master&nbsp;</P>
<P class=3D"MsoNormal">=E4=B9=8B=E5=90=8E=E5=86=8D=E9=87=8D=E6=96=B0git =
pull=E4=B8=8B=E3=80=82=E6=9C=80=E5=90=8Egit =
push=E4=BD=A0=E7=9A=84=E4=BB=A3=E7=A0=81=E5=90=A7=E3=80=82</P>
<P class=3D"MsoNormal">&nbsp;</P>
<P =
class=3D"MsoNormal"><STRONG>=E9=94=99=E8=AF=AF=E4=BF=A1=E6=81=AF=EF=BC=9A=
error: object file=20
.git/objects/c6/884991eaac39417e314faa6685061eab18909d is =
empty</STRONG></P>
<P class=3D"MsoNormal"><STRONG>fatal: loose object=20
c6884991eaac39417e314faa6685061eab18909d (stored in=20
.git/objects/c6/884991eaac39417e314faa6685061eab18909d) is =
corrupt</STRONG></P>
<P class=3D"MsoNormal">=E8=A7=A3=E5=86=B3=E6=96=B9=E6=B3=95=EF=BC=9A</P>
<P class=3D"MsoNormal">1 &nbsp;rm=20
.git/objects/c6/884991eaac39417e314faa6685061eab18909d</P>
<P class=3D"MsoNormal">&nbsp;</P>
<P class=3D"MsoNormal">2 .git fsck --full</P>
<P class=3D"MsoNormal">&nbsp;</P>
<P class=3D"MsoNormal">&nbsp;</P>
<P class=3D"MsoNormal">3.git reflog</P>
<P class=3D"MsoNormal"><BR><IMG alt=3D"" =
src=3D"http://dl2.iteye.com/upload/attachment/0094/9972/185883d2-ef26-326=
5-a239-85187a3102bf.png"><BR>&nbsp;</P></DIV></DIV>
<DIV class=3D"attachments">
<UL style=3D"display: none;">
  <LI><A =
href=3D"http://dl2.iteye.com/upload/attachment/0094/9972/185883d2-ef26-32=
65-a239-85187a3102bf.png"=20
  target=3D"_blank"><IMG =
title=3D"=E7=82=B9=E5=87=BB=E6=9F=A5=E7=9C=8B=E5=8E=9F=E5=A7=8B=E5=A4=A7=E5=
=B0=8F=E5=9B=BE=E7=89=87" class=3D"magplus" =
src=3D"http://dl2.iteye.com/upload/attachment/0094/9972/185883d2-ef26-326=
5-a239-85187a3102bf-thumb.png"></A></LI>
  <LI>=E5=A4=A7=E5=B0=8F: 201.4 KB</LI></UL>
<UL>
  <LI><A onclick=3D"$$('div.attachments =
ul').invoke('show');$(this).up(1).hide();return false;"=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/1683315#">=E6=9F=A5=E7=9C=8B=
=E5=9B=BE=E7=89=87=E9=99=84=E4=BB=B6</A></LI></UL></DIV>
<DIV class=3D"clearfix" id=3D"bottoms">
<DIV id=3D"share_weibo">=E5=88=86=E4=BA=AB=E5=88=B0=EF=BC=9A       <A =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A"=
 href=3D"javascript:;"=20
data-type=3D"sina"><IMG=20
src=3D"http://862123204-qq-com.iteye.com/images/sina.jpg"></A>       <A =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A"=
=20
href=3D"javascript:;" data-type=3D"qq"><IMG =
src=3D"http://862123204-qq-com.iteye.com/images/tec.jpg"></A>=20
    </DIV></DIV>
<DIV class=3D"blog_nav">
<DIV class=3D"pre_next"><A title=3D"ImageButton =
=E8=BE=B9=E6=A1=86=E9=97=AE=E9=A2=98" class=3D"next" =
href=3D"http://862123204-qq-com.iteye.com/blog/1693847">ImageButton=20
=E8=BE=B9=E6=A1=86=E9=97=AE=E9=A2=98</A>       |       <A =
title=3D"android =
=E7=B3=BB=E7=BB=9F=E5=AE=9A=E5=88=B6=E4=B9=8B=E7=BC=96=E8=AF=91=E6=96=B9=E6=
=B3=95=E6=80=BB=E7=BB=93" class=3D"pre" =
href=3D"http://862123204-qq-com.iteye.com/blog/1683313">android=20
=E7=B3=BB=E7=BB=9F=E5=AE=9A=E5=88=B6=E4=B9=8B=E7=BC=96=E8=AF=91=E6=96=B9=E6=
=B3=95=E6=80=BB=E7=BB=93</A>     </DIV></DIV>
<DIV class=3D"blog_bottom">
<UL>
  <LI>2012-09-21 21:16</LI>      =20
  <LI>=E6=B5=8F=E8=A7=88 45543</LI>      =20
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/1683315#comments">=E8=AF=84=
=E8=AE=BA(0)</A></LI> =20
                  =20
  <LI>=E5=88=86=E7=B1=BB:<A =
href=3D"http://www.iteye.com/blogs/category/opensource">=E5=BC=80=E6=BA=90=
=E8=BD=AF=E4=BB=B6</A></LI> =20
           =20
  <LI class=3D"last"><A class=3D"more" =
href=3D"http://www.iteye.com/wiki/blog/1683315"=20
  target=3D"_blank">=E7=9B=B8=E5=85=B3=E6=8E=A8=E8=8D=90</A></LI>     =
</UL></DIV>
<DIV class=3D"blog_comment">
<H5>=E8=AF=84=E8=AE=BA</H5><A name=3D"comments" id=3D"comments"></A>     =
          </DIV>
<DIV class=3D"blog_comment">
<H5>=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA</H5>
<P style=3D"text-align: center; margin-top: 30px; margin-bottom: =
0px;"><A style=3D"background-color: white;"=20
href=3D"http://862123204-qq-com.iteye.com/login"><IMG =
style=3D"margin-right: 10px; vertical-align: middle;"=20
src=3D"http://862123204-qq-com.iteye.com/images/login_icon.png"></A><A =
href=3D"http://862123204-qq-com.iteye.com/login">=20
 =
=E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95,=E8=AF=B7=E6=82=A8=
=E7=99=BB=E5=BD=95=E5=90=8E=E5=86=8D=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA =
</A></P></DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
  dp.SyntaxHighlighter.HighlightAll('code', true, true);=0A=
=0A=
  $$('#main .blog_content pre[name=3Dcode]').each(function(pre, index){ =
// blog content=0A=
    var post_id =3D 1683315;=0A=
    var location =3D window.location;=0A=
    source_url =3D location.protocol + "//" + location.host + =
location.pathname + location.search;=0A=
    pre.writeAttribute('codeable_id', post_id);=0A=
    pre.writeAttribute('codeable_type', "Blog");=0A=
    pre.writeAttribute('source_url', source_url);=0A=
    pre.writeAttribute('pre_index', index);=0A=
    pre.writeAttribute('title', 'git =
push=E7=94=A8=E6=B3=95=E5=92=8C=E5=B8=B8=E8=A7=81=E9=97=AE=E9=A2=98=E5=88=
=86=E6=9E=90');=0A=
  });=0A=
=0A=
  fix_image_size($$('div.blog_content img'), 700);=0A=
=0A=
  function processComment() {=0A=
    $$('#main .blog_comment > div').each(function(comment){// comment=0A=
      var post_id =3D comment.id.substr(2);=0A=
      $$("#"+comment.id+" pre[name=3Dcode]").each(function(pre, index){=0A=
        var location =3D window.location;=0A=
        source_url =3D location.protocol + "//" + location.host + =
location.pathname + location.search;=0A=
        source_url +=3D "#" + comment.id;=0A=
        pre.writeAttribute('codeable_id', post_id);=0A=
        pre.writeAttribute('codeable_type', "BlogComment");=0A=
        pre.writeAttribute('source_url', source_url);=0A=
        pre.writeAttribute('pre_index', index);=0A=
        pre.writeAttribute('title', 'git =
push=E7=94=A8=E6=B3=95=E5=92=8C=E5=B8=B8=E8=A7=81=E9=97=AE=E9=A2=98=E5=88=
=86=E6=9E=90');=0A=
      });=0A=
    });=0A=
  }=0A=
=0A=
  function quote_comment(id) {=0A=
    new Ajax.Request('/editor/quote', {=0A=
      parameters: {'id':id, 'type':'BlogComment'},=0A=
      =
onSuccess:function(response){editor.bbcode_editor.textarea.insertAfterSel=
ection(response.responseText);=0A=
        Element.scrollTo(editor.bbcode_editor.textarea.element);}=0A=
    });=0A=
  }=0A=
=0A=
  code_favorites_init();=0A=
  processComment();=0A=
  new WeiboShare({share_buttons: $('share_weibo'), img_scope: =
$('blog_content')});=0A=
</SCRIPT>
         </DIV>        =20
<DIV id=3D"local">
<DIV class=3D"local_top"></DIV>
<DIV id=3D"blog_owner">
<DIV id=3D"blog_owner_logo"><A =
href=3D"http://862123204-qq-com.iteye.com/"><IMG=20
width=3D"" =
title=3D"=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB=E7=9A=84=E5=8D=9A=E5=
=AE=A2: =E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB" class=3D"logo" =
alt=3D"=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB=E7=9A=84=E5=8D=9A=E5=
=AE=A2" =
src=3D"http://www.iteye.com/upload/logo/user/696450/16f0578b-614c-3163-85=
21-9b944544a9ba.jpg?1339917569"></A></DIV>
<DIV =
id=3D"blog_owner_name">=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB</DIV=
></DIV>
<DIV id=3D"blog_actions">
<UL>
  <LI>=E6=B5=8F=E8=A7=88: 142792 =E6=AC=A1</LI>
  <LI>=E6=80=A7=E5=88=AB: <IMG title=3D"=E7=94=B7" =
alt=3D"Icon_minigender_1" =
src=3D"http://www.iteye.com/images/icon_minigender_1.gif?1324994303"></LI=
>
  <LI>=E6=9D=A5=E8=87=AA: =E6=B7=B1=E5=9C=B3</LI>
  <LI><IMG=20
  =
src=3D"http://862123204-qq-com.iteye.com/images/status/offline.gif"></LI>=
</UL></DIV>
<DIV class=3D"clearfix" id=3D"user_visits">
<H5>=E6=9C=80=E8=BF=91=E8=AE=BF=E5=AE=A2 <SPAN=20
style=3D"padding-left: 30px; font-size: 12px; font-weight: normal;"><A =
href=3D"http://862123204-qq-com.iteye.com/blog/user_visits">=E6=9B=B4=E5=A4=
=9A=E8=AE=BF=E5=AE=A2&gt;&gt;</A></SPAN></H5>
<DIV class=3D"user_visit">
<DIV class=3D"logo"><A href=3D"http://dylinshi126.iteye.com/" =
target=3D"_blank"><IMG=20
width=3D"48" title=3D"dylinshi126=E7=9A=84=E5=8D=9A=E5=AE=A2: " =
class=3D"logo" alt=3D"dylinshi126=E7=9A=84=E5=8D=9A=E5=AE=A2" =
src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303"></A></=
DIV>
<DIV class=3D"left"><A title=3D"dylinshi126" =
href=3D"http://dylinshi126.iteye.com/"=20
target=3D"_blank">dylinshi126</A></DIV></DIV>
<DIV class=3D"user_visit">
<DIV class=3D"logo"><A href=3D"http://jn19830307.iteye.com/" =
target=3D"_blank"><IMG=20
width=3D"48" title=3D"jn19830307=E7=9A=84=E5=8D=9A=E5=AE=A2: " =
class=3D"logo" alt=3D"jn19830307=E7=9A=84=E5=8D=9A=E5=AE=A2" =
src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303"></A></=
DIV>
<DIV class=3D"left"><A title=3D"jn19830307" =
href=3D"http://jn19830307.iteye.com/"=20
target=3D"_blank">jn19830307</A></DIV></DIV>
<DIV class=3D"user_visit">
<DIV class=3D"logo"><A href=3D"http://319962.iteye.com/" =
target=3D"_blank"><IMG width=3D"48"=20
title=3D"319962=E7=9A=84=E5=8D=9A=E5=AE=A2: " class=3D"logo" =
alt=3D"319962=E7=9A=84=E5=8D=9A=E5=AE=A2" =
src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303"></A></=
DIV>
<DIV class=3D"left"><A title=3D"319962" =
href=3D"http://319962.iteye.com/" =
target=3D"_blank">319962</A></DIV></DIV>
<DIV class=3D"user_visit">
<DIV class=3D"logo"><A href=3D"http://xj004.iteye.com/" =
target=3D"_blank"><IMG width=3D"48"=20
title=3D"xj004=E7=9A=84=E5=8D=9A=E5=AE=A2: " class=3D"logo" =
alt=3D"xj004=E7=9A=84=E5=8D=9A=E5=AE=A2" =
src=3D"http://www.iteye.com/images/user-logo-thumb.gif?1324994303"></A></=
DIV>
<DIV class=3D"left"><A title=3D"xj004" href=3D"http://xj004.iteye.com/" =
target=3D"_blank">xj004</A></DIV></DIV></DIV>
<DIV id=3D"blog_menu">
<H5>=E6=96=87=E7=AB=A0=E5=88=86=E7=B1=BB</H5>
<UL>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/">=E5=85=A8=E9=83=A8=E5=8D=9A=E5=
=AE=A2 (135)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/232019">Android=20
  (33)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218094">hibernate=20
  (12)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218097">java=E5=9F=BA=E7=
=A1=80=20
  (17)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218091">spring=20
  (5)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218095">struts1.x=20
  (8)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218096">struts2.x=20
  (7)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227046">web=E5=BC=80=E5=
=8F=91=20
  (11)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218134">tomact=20
  (1)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/218135">jbpm3.2=20
  (2)</A></LI>
  <LI><A href=3D"http://862123204-qq-com.iteye.com/category/222238">jpa=20
  (2)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/226111">strutstest=20
  (1)</A></LI>
  <LI><A href=3D"http://862123204-qq-com.iteye.com/category/226991">js=20
(3)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227058">WebWork=20
  (2)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227063">=E6=95=B0=E6=8D=
=AE=E5=BA=93=20
  (5)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227064">mysql=20
  (6)</A></LI>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/category/227069">myeclipse=E5=92=
=8Ceclipse=20
  (8)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227072">java=E4=B8=8E=E5=
=8A=9E=E5=85=AC=20
  (2)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227076">linux=20
  (10)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227256">=E6=80=A7=E8=83=
=BD=E8=B0=83=E4=BC=98=20
  (2)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/227501">=E6=90=9C=E7=B4=
=A2=E5=BC=95=E6=93=8E=20
  (1)</A></LI>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/category/230474">urlrewritefilt=
er=20
  (1)</A></LI>
  <LI><A href=3D"http://862123204-qq-com.iteye.com/category/238373">Git=20
  (3)</A></LI>
  <LI><A href=3D"http://862123204-qq-com.iteye.com/category/298556">Dos=20
  (1)</A></LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/category/301830">Chrome=20
  (1)</A></LI>
  <LI><A href=3D"http://862123204-qq-com.iteye.com/category/320468">PLMN =

  (1)</A></LI></UL></DIV>
<DIV id=3D"month_blogs">
<H5>=E7=A4=BE=E5=8C=BA=E7=89=88=E5=9D=97</H5>
<UL>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/blog/news">=E6=88=91=E7=9A=84=E8=
=B5=84=E8=AE=AF</A> (0)</LI>
  <LI><A =
href=3D"http://862123204-qq-com.iteye.com/blog/post">=E6=88=91=E7=9A=84=E8=
=AE=BA=E5=9D=9B</A> (0)        =20
          </LI>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/answered_problems">=E6=88=91=
=E7=9A=84=E9=97=AE=E7=AD=94</A>=20
  (0)</LI></UL></DIV>
<DIV id=3D"month_blogs">
<H5>=E5=AD=98=E6=A1=A3=E5=88=86=E7=B1=BB</H5>
<UL>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/monthblog/2014-08">2014-08=
</A>=20
  (2)</LI>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/monthblog/2014-03">2014-03=
</A>=20
  (4)</LI>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/monthblog/2014-02">2014-02=
</A>=20
  (3)</LI>
  <LI><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/monthblog_more">=E6=9B=B4=E5=
=A4=9A=E5=AD=98=E6=A1=A3...</A></LI></UL></DIV>
<DIV id=3D"comments_top">
<H5>=E8=AF=84=E8=AE=BA=E6=8E=92=E8=A1=8C=E6=A6=9C</H5>
<UL>
  <LI><A title=3D"=E4=BD=BF=E7=94=A8repo=E4=B8=8B=E8=BD=BDgoogle =
=E7=9A=84android4.4 =
=E6=BA=90=E7=A0=81,=E5=92=8C=E7=BC=96=E8=AF=91.=E8=BF=90=E8=A1=8C" =
href=3D"http://862123204-qq-com.iteye.com/blog/1992973">=E4=BD=BF=E7=94=A8=
repo=E4=B8=8B=E8=BD=BDgoogle=20
  =E7=9A=84android4.4 =E6=BA=90=E7=A0=81, ...</A></LI></UL></DIV>
<DIV id=3D"guest_books">
<H5>=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA</H5>
<UL>
  <LI><A title=3D"=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB" =
href=3D"http://862123204-qq-com.iteye.com/"=20
  =
target=3D"_blank">=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB</A>=EF=BC=
=9A                    kslinabc =
=E5=86=99=E9=81=93=E8=AF=B7=E9=97=AE=E6=A5=BC=E4=B8=BB,4.4=E4=B8=8B=E8=BD=
=BD=E4=B8=8B=E6=9D=A5=E6=9C=89=E5=A4=9A=E5=A4=A7,=E4=B8=BA=E5=95=A5=E6=88=
=91=E8=BF=99=20
  ...<BR><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/1992973#bc2351643">=E4=BD=BF=
=E7=94=A8repo=E4=B8=8B=E8=BD=BDgoogle=20
  =E7=9A=84android4.4 =
=E6=BA=90=E7=A0=81,=E5=92=8C=E7=BC=96=E8=AF=91.=E8=BF=90=E8=A1=8C</A>    =
             </LI>
  <LI><A title=3D"ilotuo" href=3D"http://ilotuo.iteye.com/"=20
  target=3D"_blank">ilotuo</A>=EF=BC=9A                   =
=E6=B1=82=E5=A4=A7=E7=A5=9E=E5=B8=AE=E4=B8=AA=E5=BF=99=E5=A5=BD=E5=90=97?=
=E6=88=91=E9=9C=80=E8=A6=81android4.3=E4=B9=8B=E5=90=8E=E7=89=88=E6=9C=AC=
=E7=BC=96=E8=AF=91=E7=94=9F=E6=88=90=E6=96=87=20
  ...<BR><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/1992973#bc2347243">=E4=BD=BF=
=E7=94=A8repo=E4=B8=8B=E8=BD=BDgoogle=20
  =E7=9A=84android4.4 =
=E6=BA=90=E7=A0=81,=E5=92=8C=E7=BC=96=E8=AF=91.=E8=BF=90=E8=A1=8C</A>    =
             </LI>
  <LI><A title=3D"kslinabc" href=3D"http://kslinabc.iteye.com/"=20
  target=3D"_blank">kslinabc</A>=EF=BC=9A                  =20
  =
=E8=AF=B7=E9=97=AE=E6=A5=BC=E4=B8=BB,4.4=E4=B8=8B=E8=BD=BD=E4=B8=8B=E6=9D=
=A5=E6=9C=89=E5=A4=9A=E5=A4=A7,=E4=B8=BA=E5=95=A5=E6=88=91=E8=BF=99=E4=B8=
=AA40=E5=A4=9A=E4=B8=AAG=E4=BA=86=E8=BF=98=E6=B2=A1=E4=B8=8B=E8=BD=BD =
...<BR><A =
href=3D"http://862123204-qq-com.iteye.com/blog/1992973#bc2346841">=E4=BD=BF=
=E7=94=A8repo=E4=B8=8B=E8=BD=BDgoogle=20
  =E7=9A=84android4.4 =
=E6=BA=90=E7=A0=81,=E5=92=8C=E7=BC=96=E8=AF=91.=E8=BF=90=E8=A1=8C</A>    =
             </LI>
  <LI><A title=3D"=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB" =
href=3D"http://862123204-qq-com.iteye.com/"=20
  =
target=3D"_blank">=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB</A>=EF=BC=
=9A                    eyeandroid =
=E5=86=99=E9=81=93=E6=88=91=E7=9A=84=EF=BC=9Arepo 1.12.13gpg=20
  ...<BR><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/1992973#bc2345987">=E4=BD=BF=
=E7=94=A8repo=E4=B8=8B=E8=BD=BDgoogle=20
  =E7=9A=84android4.4 =
=E6=BA=90=E7=A0=81,=E5=92=8C=E7=BC=96=E8=AF=91.=E8=BF=90=E8=A1=8C</A>    =
             </LI>
  <LI><A title=3D"=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB" =
href=3D"http://862123204-qq-com.iteye.com/"=20
  =
target=3D"_blank">=E5=8C=97=E6=9E=81=E5=85=89=E4=B9=8B=E5=90=BB</A>=EF=BC=
=9A                    eyeandroid =E5=86=99=E9=81=93http://bbs.csdn.ne=20
  ...<BR><A=20
  =
href=3D"http://862123204-qq-com.iteye.com/blog/1992973#bc2345986">=E4=BD=BF=
=E7=94=A8repo=E4=B8=8B=E8=BD=BDgoogle=20
  =E7=9A=84android4.4 =
=E6=BA=90=E7=A0=81,=E5=92=8C=E7=BC=96=E8=AF=91.=E8=BF=90=E8=A1=8C</A>    =
             </LI></UL></DIV>
<DIV class=3D"local_bottom"></DIV></DIV>       </DIV>
<DIV class=3D"clearfix" id=3D"footer">
<DIV id=3D"copyright">
<HR>
=E5=A3=B0=E6=98=8E=EF=BC=9AITeye=E6=96=87=E7=AB=A0=E7=89=88=E6=9D=83=E5=B1=
=9E=E4=BA=8E=E4=BD=9C=E8=80=85=EF=BC=8C=E5=8F=97=E6=B3=95=E5=BE=8B=E4=BF=9D=
=E6=8A=A4=E3=80=82=E6=B2=A1=E6=9C=89=E4=BD=9C=E8=80=85=E4=B9=A6=E9=9D=A2=E8=
=AE=B8=E5=8F=AF=E4=B8=8D=E5=BE=97=E8=BD=AC=E8=BD=BD=E3=80=82=E8=8B=A5=E4=BD=
=9C=E8=80=85=E5=90=8C=E6=84=8F=E8=BD=AC=E8=BD=BD=EF=BC=8C=E5=BF=85=E9=A1=BB=
=E4=BB=A5=E8=B6=85=E9=93=BE=E6=8E=A5=E5=BD=A2=E5=BC=8F=E6=A0=87=E6=98=8E=E6=
=96=87=E7=AB=A0=E5=8E=9F=E5=A7=8B=E5=87=BA=E5=A4=84=E5=92=8C=E4=BD=9C=E8=80=
=85=E3=80=82<BR>=C2=A9 2003-2014=20
ITeye.com.   All rights reserved.  [ =
=E4=BA=ACICP=E8=AF=81110151=E5=8F=B7  =
=E4=BA=AC=E5=85=AC=E7=BD=91=E5=AE=89=E5=A4=87110105010620 ]        =20
</DIV></DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
  document.write("<img src=3D'http://stat.iteye.com/?url=3D"+ =
encodeURIComponent(document.location.href) + "&referrer=3D" + =
encodeURIComponent(document.referrer) + "&user_id=3D' width=3D'0' =
height=3D'0' />");=0A=
</SCRIPT>
=20
<SCRIPT =
src=3D"http://csdnimg.cn/pubfooter/js/tracking.js?version=3D2013092316415=
0" type=3D"text/javascript"></SCRIPT>
           </BODY></HTML>

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0094/9972/185883d2-ef26-3265-a239-85187a3102bf.png

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
90zu3TeO4QAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0094/9972/185883d2-ef26-3265-a239-85187a3102bf-thumb.png

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
8jzPcZRSjBmLYGUwVGRRVlVNMxu7+sqsMJWRohUVpiKZhGLB0d7ZmFxaMgg1Ib/t0FB8akLXQSor
bdy8pRhfEhWdQZxSTI3OTGHAIYbzeZ3FXMEkhiKrmGFNTQvVNobc/NLKiq6bkFLAcJFYWCnmTWzp
6GrOJtKVLU1ELOjQUt9cLRXykqwHKsKGVHKGY5GgY2UlUdXW5uBIKl30Bf0MJLKsyLJEAMAAiJII
MQOIKUkyZhhVkRRVZS32+rZGbMq5kt7U3UqkYqEgu/x+mwBlhZYF3IqsVbc1R6IBQ5Wy2Zym6azV
Wd/WADSpWFK9QT8kuiyprkAQe4Gn/8CBXTuab12fOvjsY7xRlKHtmW+8Is6OBfv3PP9U7zs/ea9x
y6GXv3rw+sXRb/2vf2Apzn96dWrryaMeVk3k6ZFnj0mrS7U7Dz/z1NCF987v/fJrWzrKRqcyJ7/6
bGttKJkRX/rWc6NnLwQ7N73yrReduKTZYl/+5hM3PzpdtfXIF17e/P4PP27bsXdoqG1hfKZl+67G
chcMRp589WRpek7kAr/7h98Y/vh059FTu3b1sZjp2baptqHCYrNse+zxTRvrseAc3DEQrQ5mEpld
z724vSv0yU/PU0aQS4X23ftqfeYn525vO3GirSm0sJD5yv/ye00heG9iZd+zT5fbjNWMefzlJ51I
KhLLkaeP6tk1W7Tp1W+8SNYmr99b5DHE9sBz33hq/vol2VL+xKtP2oGyOB9HGD941QNV0Zo2bz12
Ykc2ntr7wuPq8r25NPuP/48/CAjS8I27sb6t/a2+8fnSM199Orew0PfUiY0dtTN3xiKdg08+u/3q
Rxdatu/b0Fu9MLu276nnmiqsMhf43X/x2/n5e8BbuffwUCmxupIpHHv5udzksLOu/8jRjUvza0/9
9q9XOs0rV65VdG4e6Cg37METzx6xIzPQ2r7nyC5WWlvIst/+l9/ILKd2HNsXjpaFKqsGhvqq6sqT
q/kv/f5vSjM34pLt5AsnWSUrAseRpw5m5mYcsaZ9Bwfnx6badx3YMdSyNLvUe+h4f0dM8JRv2TUQ
jrju3pr50r/8n9jcDAl2fuPXDpx956y3qvHprz6TGLsdaBvc2Fu9vLC26eTjGzrCdycyv/u//87C
p2eWctyv/z//MSa62Njaff3tnw489nxPW7nFwX3w47erOgd4afmTj4crKh0LC/TJV45BaIxdG/F4
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
b+TKtZXDu7tHlzKb9/RPXblM/dV+rnTlyky0oaymeXBDX2XJQBuHesZOf3Dh+nggUqctjb1/cWTo
yAGvQG5futW4dYe2NMLHutuC0r/9L+8ef+ZYemairDo6fXtxaHfvRz/8sHnDgMMCUmspu6eMw5rB
uPo3dSFEZm7fA1Zfe2f57fM3LIFYc4P9u//hjWBVaGG+9MXfeAVjg1DTHqzYtWugmFwNNHcNdNZE
6qvlpdH3f3qzkE26K2r8Nn3s3lJNa4PbY6tqbHaVORauX7s9Go+ELaevXWxo67/zwXuNu05u7Apj
C3f2nXe9ta1+QXznRxdidWWzM9Ljr5zieThxfViweT/58+9I9tDm3UO9rZH4WqZ729bGykBZGTsz
sVDb1xN1aLPLhYrqIIKcw8VP3rgxOV+sa6+N+oPLd4dLZYH+ptDo7fHqtuqPvvdusNq/uKR+6ddf
glAnxHCGq3Zu69HV/OTwWLhvQ/zTMzkiFFcWbMHaSLkzl4zPTK1WtdSFy73i1Px0sWgVyPJ8oaGr
uqqqNjV+T2W5excuXDp7K50pcTwjKWTH8b33Pn57bD5vFRhKATB1bPcfeOJIZdhz79Prkg7/btcV
QIVUIpVkDpzal1uchIFwV09DVUuTkowvzS1kTKa9qeLuxVuBuragBc6NLxYKBYZDkyN3k+nCyOkL
V69Ot27d3t1WPTs+Wt7T3V5fPnb9XmVrezgaqmuIzI1OL88t4rLafdsHxu9Mu8JVhZXlitYOM7Oc
LGqY6IWCiFlWF0VFB4WV6df/+MeqZs5PzrJ2x60Pzl+/Ne90W9//8w/LKps7+3vDPmb4znRiamp8
PNHUVrU0v8B6A+GQM5FKjd2ZCDT19G1orO/sCnrtYj63spZHRP/49Q/f/d6Pl5fSmgFb+nqbWxv9
OFwVdi9Mzc1NzaQz+UvvnqvtGgw4uHxeqm5pbu/rC3vod//NdxLpki7L+Wy2WBB9kYoyrzC7sBqu
rxMYM762Oj6ZLq+qXJsan4nroZA3m8yZulosioLTbnO7g3736Ni9suYWc2b6wqWp8urqzHI8VNfY
2d8fcIE7d2fj4+NTM9mG5or46momXart6IapFYlYewb7G5prsamUipKpyfFEgSH6D/7dDwoOT5XX
ee2986bFuXx75Cdvnavo7nYKWNWJYOEwhpQQhhM4jsaXMjzPEUIBpZzVtjD1adqw2c3MTDLHs3/X
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

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://862123204-qq-com.iteye.com/images/sina.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAEAAQAwERAAIRAQMRAf/EAGsAAAMBAAAAAAAAAAAAAAAA
AAMHCAkBAAIDAQAAAAAAAAAAAAAAAAUHAgMICRAAAQUBAQADAQAAAAAAAAAABQIDBAYHAQgAERIT
EQACAgICAgMBAQAAAAAAAAACAwEEEQUSBhMHACEiIxT/2gAMAwEAAhEDEQA/ANifKXk096OzU3v2
v28NSaVOjE265ZbIMqDxzQbSw1KjSCs2w2xpLDAhk8x1l6VJW49NebeQnrf4698zz17rNzfVG7ra
WIRRmSgCLhyYcZjMkf1AwUYmZzJTExGMZ+de/b3uzrnqvf0PWvR9SW07OIIKylM2PFTQUAXAU18k
TiUXMVhAioSApg+Xj+Gv1Kr/AJewxUbZ6/UxeiWYbZrfkmu5HX2is8FZooV+TUoPdJrsYcEZjLPA
uj5cLqH3GuFGp0OT9MSOJlYqx13VCvcwEXm8jS9McpEoj8R5RwOOQ8SGYnHODAvyXyjU7xnuDvjb
nrhlg+sUfFW2Ws2TIULUSzFlkUXSbucKdD1OggEprHWsJ/qqZlfHfb2TgCOM91o6Hpdq88ZI1hRf
Et0p2gP00TaaxcWpxLRKYQpON7vyHYbmDidGH4xCuCy7KuuoilWkdbdbD67tOvU+sWyIVPpVv88o
sLZK4MWZlq5WixgmDHBkEoDj7gWRGJhh9v8AR/a72s3aenKbd1XZtxG2Daam3SG2xDqnjCjaC1tN
RJJquLz0zTdsViiAJ1M5ggJA6F7JrDOBWzx7gC7BrBTfNlj3+5HR9OKVWjAp0g2Lngc0wShElyra
qA6XHRf6EZ7I2S820mOiDzi+rSEs9jSGnPq+mhlg7lyGsKFkCxnkMiquucnjMRkigZmI4wH3n4yd
H6d2Fn2FV93exyqahHXevHRqJK2qzccPhYtt7b3F8a/OFsZxQkngJFLSsZHjP//Z

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://862123204-qq-com.iteye.com/images/tec.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAEAAQAwERAAIRAQMRAf/EAG0AAAMBAAAAAAAAAAAAAAAA
AAUHCAkBAAIDAQAAAAAAAAAAAAAAAAQHBQYICRAAAQUBAAIBBQAAAAAAAAAABQIDBAYHAQARCCES
IhMVEQACAwACAgMBAQAAAAAAAAACAwEEBREGABIhEwcUIv/aAAwDAQACEQMRAD8A32zNAErT6Hdr
hU06retjs8+rZ1T1rGDlWEiESLZslkt9pkQ1k1p4TMMtNI5IYUtXHHHXkoT9NXaapXZfnUWBRzc+
qDbL5GTkIZBStal8+vMiElMyJcfAiMzPnMzrrxfn097ZQ7Z3t3SdVz6cMFUNJJALn2bHHvxBtABG
DCZmDM2QMeH9GFCRQ/U2hGfsYpsuJAoVxNVwXOHmxk6rzJA2Kix1ewoakFhJcRIPwXvXJz7bkdf4
qS6lSPA86RYNRjXjpde0iNS2kuVmDhEy+tgfAkJQs459BmCj5iRmJ8k95RIZporUWdf7z18E2X1g
dD0tqmxQS5Dp9mLYuXqLj7jEll/mRYMj5BuP/IMnk2HHJWnf3ID9E1IhnGbR4AQZy/5nZLgHjydY
soNZnsGTCPC6/X2Iw5LjzbUElOXK6lT7TH2Hdqv0tr9eqfm/U/5m7drrE7Fz7WmNZ1VFmKtFTZWJ
8g2yxks4AiNKfSOBI5lKdL7jpdP/ADW7udwG4tOf2JmdnwpATdo2Lavt0rCZb6SLl10gCOTEUvcT
piWAv1X9t+WQU4CtWd40O1i63jbZgUNfdP1YhHO6VbB8QhDeEUmthgjxRAuCRKQ4q5K1Tp0uX+lt
j2lpPE+MHF6VurYvX7uzGp5+cthVqef7/wAyiICg3tc4EyZCJFADCVgHMn8lPlO1v1qhar2et9Ar
79/e33oXd0dMoZesLBgEuqhSpbCgNgLlky5zG+gr5gIiPP/Z

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://862123204-qq-com.iteye.com/images/login_icon.png

iVBORw0KGgoAAAANSUhEUgAAABoAAAAgCAYAAAAMq2gFAAAACXBIWXMAAAsTAAALEwEAmpwYAAAK
TWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQ
WaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec
5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28A
AgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0
ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaO
WJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHi
wmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryM
AgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0l
YqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHi
NLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYA
QH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6c
wR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBie
whi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1c
QPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqO
Y4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hM
WEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgoh
JZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSU
Eko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/p
dLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Y
b1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7O
UndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsb
di97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W
7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83
MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxr
PGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW
2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1
U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd
8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H0
8PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+H
vqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsG
Lww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjg
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
Ts5Uo85DgAAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/user/696450/16f0578b-614c-3163-8521-9b944544a9ba.jpg?1339917569

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
oVUiTgA9gORycdtdoz02tHqouZ//2Q==

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/icon_minigender_1.gif?1324994303

R0lGODlhCwALALMAADFjdCt4kTKOrjikyGWarFexz2vQ8YGXnoKcpZKxu7S5u4m0wqC9xp/O3sDA
wAAAACH5BAEAAA4ALAAAAAALAAsAAAQ80EnZamWTml1WdgyzCcTnNItAno1RLcQSEFVRbGUiIE0B
EIOBIGMIKE6FAHHg6SknjMGNADh8FsKANRMBADs=

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://862123204-qq-com.iteye.com/images/status/offline.gif

R0lGODlhWQAaAMQAAGZmZu/v76WlpZmZmcXFxXx8fP///7W1td3d3ff394yMjK2trb29vczMzIWF
hZmZmeXl5dbW1v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEH
ABIALAAAAABZABoAAAX/oCSOZGmeaKqubOu+cCzPdG3fIyIMRID/wFFjNygeIAFdcclsOp/QqFQq
aKgEhQLzEOgmENOweEzOLkwIhQJhaAd4iIa8MRAk2vi8fs/v+/9+DWo+Iw52eWACB4sLAg4DAYCS
k5SUbwpCDnsBRAI7DoZ3laOkowkOCCILA3wEq00NfgAGs7N8ALi4e7Z/vHq8tXoNDiJFfAkMDAQE
DAcMu7ltttPRwNK52NXZ2XjWtHnDIp57CXQCyTsCPbfSu93fvu19wcHv09d44RKeCf39EAc8EQFV
ZwEEf9uy9QOAMAFDhv4cLozYUKJFiw9zUdTHzx+EZgtCehqgRkDIgxEh/0JEqPHhxYsrU0p0uRBX
RZv9ONrxR+BAyJ+eFDhQ4PMAxYwTk858uTImS4U3sW0ktm9nuSILfAoUINTQDgJPl1Zc2jSjVIov
J+JUGVGnP5IDgI7sWkeNQ5ppY+LdizbhWr1p3faD+xMoyQIKFtiNmlQj2bFOMapN2VSp4KtbCx8e
wEBABMpskTaGObahQpVlxZaj6qlLlwhbnS0LaPIAAte5XHfBpZv3bt8B/ALYrft3ceDBh3fRt6o4
AgZZCURAEIGZstvFs2vfzr279+36hmlH4ErggQZIvqtfz947A1QjFHhGQL++/fv48+vfz7+//+dF
kBCAGgskY+CBCCao4CeCDDbo4IOKKUAICQdkoQAZGGao4RMKZHGACgg0suGIJIaxQColhAAAOw==

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/user-logo-thumb.gif?1324994303

R0lGODlhMAAwAMQAAOXl5eTk5Pv7++np6efn5/Pz8+bm5vz8/PHx8evr6+jo6PLy8vj4+O/v7/r6
+vn5+e3t7f39/fT09P7+/vf39/X19fb29uzs7PDw8O7u7urq6v///+Pj4wAAAAAAAAAAACH/C1hN
UCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtj
OWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUg
WE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAi
PiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5
bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6
Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29t
L3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NU
eXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdp
bmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MkIzMkFGRUQ1QUFEMTFFMDk2MEJERjMw
QTkyQzUyNDYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MkIzMkFGRUU1QUFEMTFFMDk2MEJE
RjMwQTkyQzUyNDYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDoyQjMyQUZFQjVBQUQxMUUwOTYwQkRGMzBBOTJDNTI0NiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1w
LmRpZDoyQjMyQUZFQzVBQUQxMUUwOTYwQkRGMzBBOTJDNTI0NiIvPiA8L3JkZjpEZXNjcmlwdGlv
bj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf2
9fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769
vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWE
g4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxL
SklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMS
ERAPDg0MCwoJCAcGBQQDAgEAACH5BAAAAAAALAAAAAAwADAAAAX/ICeOZGmeaKqubOu+cCzPdG3f
eK7vfO//wKBwSCwafQSL4lgiPBgZJknCYBQCUtEFUZAkEgTCd5xYigAEgygwGJg5gIFGDQ+vAobD
BoHY+P8FHAQSBxERDAkcDBsRZhR+CgAFhREPECoAAhsYGH9/CAaanhsQCn4UHBB+CwEPo3spmXtx
qhsLCgaPGwIFuhMGC34NDhsHAQV+BwUWE34aKLILIqYbUdQPBg0LFX4IAXp/EAERxQQQBcgbFdCa
0hwDwql+EATdDhESHBl/DO/dAX4KMIiA6kQ0EfA2NOBwQVgrBwMAGAAgYtGEAf42BLIgIAEeigbb
IYxHoNkBjHSmZ2xwcEZPhEQpY4nMuJADtw0THgi4UELCSiwc+vh54ADDCgB63CWsCWDRnwMgRXAT
ADSABU8TCGCy4KCmAqI81zRgIOBBgahBHVQAKgICBQFqtWaZS7eu3bt48+rdy7ev37+AAwuWEQIA
Ow==

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/stylesheets/blog.css?1406686577

.stretch {
	margin: 0px; padding: 0px; height: 1px; line-height: 1px; clear: both; =
font-size: 15px;
}
.clear {
	margin: 0px; padding: 0px; height: 1px; line-height: 1px; clear: both; =
font-size: 15px;
}
.clearfix::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.clearfix {
	display: inline-table;
}
* html .clearfix {
	height: 1%;
}
* + html .clearfix {
	height: 1%;
}
.clearfix {
	display: block;
}
.replace {
	background-position: left top; display: block; background-repeat: =
no-repeat; background-color: transparent;
}
.replace * {
	background-position: left top; text-indent: -10000px; display: block; =
background-repeat: no-repeat; background-color: transparent;
}
.replace a {
	text-indent: 0px;
}
.replace a span {
	text-indent: -10000px;
}
span.accesskey {
	text-decoration: none;
}
.accessibility {
	left: -999em; top: -999em; position: absolute;
}
body {
	text-align: left; color: black; line-height: 1.5; font-family: =
Helvetica, Tahoma, Arial, sans-serif; font-size: 12px;
}
img {
	border: 0px currentColor; border-image: none;
}
h1 {
	margin: 0px 0px 0.5em; padding: 0px; color: black; line-height: 1.5em; =
font-size: 2em;
}
h2 {
	margin: 0px 0px 0.5em; padding: 0px; color: black; line-height: 1.5em; =
font-size: 1.5em;
}
h3 {
	margin: 0px 0px 0.5em; padding: 0px; color: black; line-height: 1.5em; =
font-size: 1.2em;
}
h4 {
	margin: 0px 0px 0.25em; padding: 0px; color: black; line-height: 1.3em; =
font-size: 1.15em;
}
h5 {
	margin: 0px 0px 0.25em; padding: 0px; color: black; line-height: 1.3em; =
font-size: 1.1em;
}
h6 {
	margin: 0px 0px 0.25em; padding: 0px; color: black; line-height: 1.3em; =
font-size: 1em;
}
p {
	margin: 0px; padding: 0px;
}
blockquote {
	margin-left: 10px; border-left-color: rgb(221, 221, 221); =
border-left-width: 10px; border-left-style: solid;
}
pre {
	font-family: monospace; font-size: 1em;
}
strong {
	font-weight: bold;
}
b {
	font-weight: bold;
}
em {
	font-style: italic;
}
i {
	font-style: italic;
}
code {
	font-family: "Courier New", Courier, monospace; font-size: 1em; =
white-space: pre;
}
ul {
	margin: 0px 0px 1.5em; padding: 0px;
}
ul li {
	margin: 0px 0px 0.25em 30px; padding: 0px;
}
ol {
	margin: 0px 0px 1.5em; padding: 0px; line-height: 1.4em; font-size: =
1em;
}
ol li {
	margin: 0px 0px 0.25em 30px; padding: 0px; font-size: 1em;
}
dl {
	margin: 0px 0px 1.5em; padding: 0px; line-height: 1.4em;
}
dl dt {
	margin: 0.25em 0px; padding: 0px;
}
dl dd {
	margin: 0px 0px 0px 30px; padding: 0px;
}
th {
	text-align: left; font-weight: bold;
}
td {
	font-size: 1em;
}
hr {
	margin: 1.5em 10px; height: 1px; border-bottom-color: black; =
border-bottom-width: thin; border-bottom-style: none;
}
div.topic_page {
	color: rgb(0, 102, 153);
}
form {
	margin: 0px; padding: 0px; clear: both;
}
form div {
	margin: 0px 0px 1em; padding: 0px; font-size: 1em;
}
form p {
	margin: 0px 0px 1em; padding: 0px; font-size: 1em;
}
label {
	width: 25%; font-weight: bold; float: left;
}
fieldset {
	margin: 0px; padding: 5px 10px; border: 1px solid rgb(238, 238, 238); =
border-image: none;
}
fieldset legend {
	margin: 0px; padding: 0px; color: rgb(102, 102, 102); font-size: 1.1em; =
font-weight: bold;
}
* html fieldset legend {
	margin: 0px 0px 10px -10px;
}
fieldset ul {
	list-style: none; margin: 0px 0px 1.5em; padding: 0px;
}
fieldset ul li {
	list-style: none; margin: 0px 0px 0.5em; padding: 0px;
}
input.text {
	margin: 0px; padding: 1px 3px; border: 1px solid rgb(0, 102, 153); =
border-image: none; vertical-align: middle;
}
select {
	margin: 0px; padding: 1px 3px; border: 1px solid rgb(0, 102, 153); =
border-image: none; vertical-align: middle;
}
textarea {
	margin: 0px; padding: 1px 3px; border: 1px solid rgb(0, 102, 153); =
border-image: none; vertical-align: middle;
}
input.text {
	height: 18px; font-family: Arial, sans-serif, Verdana, Tahoma, =
Helvetica;
}
input.check {
	margin: 0px; border: currentColor; border-image: none; width: auto; =
height: auto;
}
input.radio {
	margin: 0px; border: currentColor; border-image: none; width: auto; =
height: auto;
}
input.file {
	width: 250px; height: auto;
}
input.readonly {
	border: currentColor; border-image: none; background-color: =
transparent;
}
input.button {
	background: rgb(0, 102, 153); padding: 2px 5px; border: 1px solid =
rgb(210, 243, 253); border-image: none; height: 23px; color: white; =
font-size: 1em; vertical-align: middle; cursor: pointer;
}
input.submit {
	background: rgb(0, 102, 153); padding: 2px 5px; border: 1px solid =
rgb(210, 243, 253); border-image: none; height: 23px; color: white; =
font-size: 1em; vertical-align: middle; cursor: pointer;
}
input.image {
	border: currentColor; border-image: none; width: auto; height: auto;
}
textarea {
	font-size: 1em;
}
form div.submit {
	margin: 1em 0px;
}
form div.submit input {
	width: 15em; height: 2em;
}
div#nav div.wrapper {
	background: url("/images/shadow.png") repeat-x left bottom rgb(98, 147, =
187); left: 0px; width: 100%; bottom: 0px; padding-bottom: 6px; =
font-size: 13px; position: absolute;
}
div#nav ul {
	margin: 0px; padding: 0px; width: 100%;
}
div#nav li {
	background-position: right; list-style: none; margin: 0px; padding: 0px =
10px; line-height: 1em; float: left; display: inline; background-image: =
url("/images/line_white.gif"); background-repeat: no-repeat;
}
div#nav li.last {
	background: none;
}
div#nav a {
	margin: 0px; padding: 7px 13px; color: white; font-weight: bold; =
text-decoration: none; display: block;
}
div#nav a:link {
	margin: 0px; padding: 7px 13px; color: white; font-weight: bold; =
text-decoration: none; display: block;
}
div#nav a:active {
	margin: 0px; padding: 7px 13px; color: white; font-weight: bold; =
text-decoration: none; display: block;
}
div#nav a:visited {
	margin: 0px; padding: 7px 13px; color: white; font-weight: bold; =
text-decoration: none; display: block;
}
div#nav .subnav a {
	padding: 7px 6px; display: inline-block;
}
div#nav .subnav a:link {
	padding: 7px 6px; display: inline-block;
}
div#nav .subnav a:active {
	padding: 7px 6px; display: inline-block;
}
div#nav .subnav a:visited {
	padding: 7px 6px; display: inline-block;
}
div#nav a:hover {
	background-color: rgb(54, 113, 165);
}
div#nav a.selected {
	background-color: rgb(54, 113, 165);
}
div#content {
	margin: 0px auto 20px; padding: 0px; width: 701px; text-align: left; =
position: relative;
}
div#main {
	width: 500px; float: right; display: inline;
}
div#local {
	width: 200px; float: left; display: inline;
}
div#sub {
	display: none;
}
div#nav {
	left: 0px; top: -15px; width: 100%; text-align: left; position: =
absolute;
}
body {
	background: white; margin: 0px; padding: 0px; text-align: center;
}
div#page {
	background: white; margin: 0px auto; padding: 0px; width: 950px; =
text-align: center;
}
div#header {
	margin: 0px; padding: 0px; color: white; background-color: white;
}
div#branding {
	margin: 1px 0px; width: 200px; text-align: left; float: left;
}
div#search {
	margin: 0px; padding: 16px 20px 0px 0px; width: 49%; text-align: right; =
float: right;
}
div#content {
	width: 100%; margin-top: 35px;
}
div#footer {
	color: black; background-color: white;
}
div#footer p {
	margin: 0px; padding: 15px; font-size: 0.8em;
}
ul.subnav {
	list-style: none; margin: 0px; padding: 0px; font-size: 0.8em;
}
ul.subnav li {
	list-style: none; margin: 0px 0px 1em; padding: 0px;
}
ul.subnav li a {
	color: black; font-weight: bold; text-decoration: none;
}
ul.subnav li a:link {
	color: black; font-weight: bold; text-decoration: none;
}
ul.subnav li a:visited {
	color: black; font-weight: bold; text-decoration: none;
}
ul.subnav li a:active {
	color: black; font-weight: bold; text-decoration: none;
}
ul.subnav li a:hover {
	text-decoration: underline;
}
ul.subnav li strong {
	background: url("/i/subnav-highlight.gif") no-repeat left top; padding: =
0px 0px 0px 12px;
}
ul.subnav li strong a {
	color: white; background-color: black;
}
ul.subnav li strong a:link {
	color: white; background-color: black;
}
ul.subnav li strong a:visited {
	color: white; background-color: black;
}
ul.subnav li strong a:active {
	color: white; background-color: black;
}
.nav_side {
	background: rgb(244, 246, 243); margin: 0px 0px 10px; border: 1px solid =
rgb(202, 204, 201); border-image: none;
}
.nav_side ul {
	margin: 0px;
}
.nav_side li {
	margin: 0px 5px; padding: 0px; height: 37px; color: rgb(0, 102, 153); =
line-height: 37px; text-indent: 38px; overflow: hidden; font-size: 14px; =
border-bottom-color: rgb(227, 234, 240); border-bottom-width: 1px; =
border-bottom-style: solid;
}
.nav_side li a {
	height: 37px; color: rgb(0, 102, 153); text-decoration: none; display: =
block;
}
.nav_side li a:hover {
	color: rgb(255, 88, 10); text-decoration: none;
}
.nav_side li.last {
	height: 38px; border-bottom-color: currentColor; border-bottom-width: =
medium; border-bottom-style: none;
}
.nav_side li.select {
	background: url("/images/sidenav_select_bg.gif") no-repeat 0px 0px; =
margin: 0px; height: 38px; border-bottom-color: currentColor; =
border-bottom-width: medium; border-bottom-style: none;
}
.nav_side li.select a {
	height: 38px; color: rgb(255, 255, 255); font-weight: bold;
}
.nav_side #mobile {
	background: url("/images/icon_sidenav.png") no-repeat 5px 3px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px 3px;
}
.nav_side #web {
	background: url("/images/icon_sidenav.png") no-repeat 5px -49px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -49px;
}
.nav_side #architecture {
	background: url("/images/icon_sidenav.png") no-repeat 5px -102px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -102px;
}
.nav_side #language {
	background: url("/images/icon_sidenav.png") no-repeat 5px -155px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -155px;
}
.nav_side #internet {
	background: url("/images/icon_sidenav.png") no-repeat 5px -206px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -206px;
}
.nav_side #opensource {
	background: url("/images/icon_sidenav.png") no-repeat 5px -260px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -260px;
}
.nav_side #os {
	background: url("/images/icon_sidenav.png") no-repeat 5px -310px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -310px;
}
.nav_side #database {
	background: url("/images/icon_sidenav.png") no-repeat 5px -361px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -361px;
}
.nav_side #develop {
	background: url("/images/icon_sidenav.png") no-repeat 5px -412px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -412px;
}
.nav_side #industry {
	background: url("/images/icon_sidenav.png") no-repeat 5px -466px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -466px;
}
.nav_side #other {
	background: url("/images/icon_sidenav.png") no-repeat 5px -568px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -568px;
}
.nav_side #all {
	background: url("/images/elite_sidenav.png") no-repeat 5px -260px; =
_background: url(/images/elite_sidenav.gif) no-repeat 5px -260px;
}
.nav_side li.select #mobile {
	background: url("/images/icon_sidenav.png") no-repeat 10px 3px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px 3px;
}
.nav_side li.select #web {
	background: url("/images/icon_sidenav.png") no-repeat 10px -49px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -49px;
}
.nav_side li.select #architecture {
	background: url("/images/icon_sidenav.png") no-repeat 10px -102px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -102px;
}
.nav_side li.select #language {
	background: url("/images/icon_sidenav.png") no-repeat 10px -155px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -155px;
}
.nav_side li.select #internet {
	background: url("/images/icon_sidenav.png") no-repeat 10px -206px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -206px;
}
.nav_side li.select #opensource {
	background: url("/images/icon_sidenav.png") no-repeat 10px -260px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -260px;
}
.nav_side li.select #os {
	background: url("/images/icon_sidenav.png") no-repeat 10px -310px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -310px;
}
.nav_side li.select #database {
	background: url("/images/icon_sidenav.png") no-repeat 10px -361px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -361px;
}
.nav_side li.select #develop {
	background: url("/images/icon_sidenav.png") no-repeat 10px -412px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -412px;
}
.nav_side li.select #industry {
	background: url("/images/icon_sidenav.png") no-repeat 10px -466px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -466px;
}
.nav_side li.select #other {
	background: url("/images/icon_sidenav.png") no-repeat 10px -568px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -568px;
}
.nav_side li.select #all {
	background: url("/images/elite_sidenav.png") no-repeat 10px -259px; =
_background: url(/images/elite_sidenav.gif) no-repeat 10px -259px;
}
a {
	color: rgb(0, 102, 153); text-decoration: none;
}
a:hover {
	color: rgb(188, 42, 77); text-decoration: underline;
}
a:active {
	color: rgb(188, 42, 77); text-decoration: underline;
}
blockquote {
	border: 1px solid rgb(204, 204, 204); border-image: none; =
background-color: rgb(250, 250, 250);
}
cite {
	font-weight: bold; margin-left: 3px;
}
div#user_nav {
	margin: 3px 0px 0px; padding: 2px; text-align: right; float: right;
}
div#user_nav a.nobg {
	background: none;
}
div#user_nav a.welcome {
	color: rgb(226, 136, 34); padding-right: 10px; font-weight: bold;
}
div#user_nav a.welcome:hover {
	color: rgb(226, 136, 34); text-decoration: none; background-color: =
transparent;
}
div#user_nav a.new_reply {
	color: red; padding-left: 0px;
}
div#user_nav a.new_reply:hover {
	color: red; text-decoration: none; background-color: transparent;
}
div#user_nav a {
	background-position: right; padding: 2px 6px 1px; color: gray; =
line-height: 1em; text-decoration: none; background-image: =
url("/images/line_gray.gif"); background-repeat: no-repeat;
}
div#user_nav a:hover {
	color: white; text-decoration: underline; background-color: gray;
}
div.quick_menu {
	border: 1px solid rgb(221, 221, 221); border-image: none; top: 30px; =
width: 70px; text-align: left; position: absolute; z-index: 9999; =
background-color: white;
}
div.quick_menu a {
	padding: 3px 6px 3px 10px !important; line-height: 20px !important; =
text-decoration: none !important; display: block !important; =
background-image: none !important;
}
div#location_ad {
	background-position: left; padding-left: 12px; margin-top: 5px; float: =
left; background-image: url("/images/yellow_east_arrow.gif"); =
background-repeat: no-repeat;
}
div#site_nav ul {
	list-style: none; margin: 0px; padding: 0px; width: 100%; line-height: =
1em;
}
div#site_nav li {
	list-style: none; margin: 0px; padding: 3px 10px; line-height: 1em; =
border-right-color: rgb(170, 170, 170); border-right-width: 1px; =
border-right-style: solid; display: inline;
}
div#site_nav li.last {
	border-right-color: currentColor; border-right-width: medium; =
border-right-style: none;
}
div#channel_nav {
	left: 0px; top: 0px; position: absolute;
}
div#channel_nav ul {
	list-style: none; margin: 0px; padding: 0px; width: 100%; line-height: =
1em;
}
div#channel_nav li {
	border-width: 1px 0px 1px 1px; border-style: solid none solid solid; =
border-color: rgb(254, 221, 202) currentColor rgb(254, 221, 202) =
rgb(254, 221, 202); list-style: none; margin: 0px; border-image: none; =
line-height: 1em; float: left; display: inline;
}
div#channel_nav li.last {
	border-right-color: rgb(254, 221, 202); border-right-width: 1px; =
border-right-style: solid;
}
div#channel_nav a {
	margin: 0px; padding: 4px 25px; color: green; text-decoration: none; =
display: block;
}
div#channel_nav a:hover {
	background-color: rgb(254, 221, 202);
}
div#channel_nav a.selected {
	background-color: rgb(254, 221, 202);
}
div#gg {
	margin: 2px 0px; width: 728px; float: right;
}
div#copyright {
	padding: 10px;
}
.pagination {
	padding: 5px; float: right;
}
.pagination a {
	margin: 2px; padding: 2px 5px; border: 1px solid rgb(170, 170, 221); =
border-image: none; color: rgb(0, 102, 153); text-decoration: none;
}
.pagination a:link {
	margin: 2px; padding: 2px 5px; border: 1px solid rgb(170, 170, 221); =
border-image: none; color: rgb(0, 102, 153); text-decoration: none;
}
.pagination a:visited {
	margin: 2px; padding: 2px 5px; border: 1px solid rgb(170, 170, 221); =
border-image: none; color: rgb(0, 102, 153); text-decoration: none;
}
.pagination a:hover {
	border: 1px solid rgb(0, 102, 153); border-image: none; color: rgb(0, =
0, 0); text-decoration: none;
}
.pagination a:active {
	border: 1px solid rgb(0, 102, 153); border-image: none; color: rgb(0, =
0, 0); text-decoration: none;
}
.pagination span.current {
	margin: 2px; padding: 2px 5px; border: 1px solid rgb(0, 102, 153); =
border-image: none; color: rgb(255, 255, 255); font-weight: bold; =
background-color: rgb(0, 102, 153);
}
.pagination span.disabled {
	margin: 2px; padding: 2px 5px; border: 1px solid rgb(238, 238, 238); =
border-image: none; color: rgb(221, 221, 221);
}
a.underline {
	text-decoration: underline;
}
.underline a {
	text-decoration: underline;
}
.hilite1 {
	background-color: rgb(255, 255, 0);
}
.hilite2 {
	background-color: rgb(85, 255, 85);
}
.hilite3 {
	background-color: rgb(170, 255, 170);
}
.hilite4 {
	background-color: rgb(0, 255, 255);
}
span.arrow {
	color: rgb(153, 153, 153); font-size: 0.9em; font-weight: normal;
}
.validation-advice {
	margin: 0px; padding: 0px 0px 0px 3px; color: rgb(255, 51, 0); =
font-weight: bold;
}
.odd {
	background-color: rgb(239, 250, 255);
}
.highlight {
	color: rgb(226, 136, 34); font-weight: bold; text-decoration: none;
}
.highlight a {
	color: rgb(226, 136, 34); font-weight: bold; text-decoration: none;
}
.highlight a:link {
	color: rgb(226, 136, 34); font-weight: bold; text-decoration: none;
}
.highlight a:active {
	color: rgb(226, 136, 34); font-weight: bold; text-decoration: none;
}
.highlight a:visited {
	color: rgb(226, 136, 34); font-weight: bold; text-decoration: none;
}
.highlight a:hover {
	color: rgb(255, 255, 255); text-decoration: none; background-color: =
rgb(226, 136, 34);
}
.rss {
	background-position: right; padding-right: 50px; margin-right: 5px; =
background-image: url("/images/rss.png"); background-repeat: no-repeat;
}
.row1 {
	width: 155px; font-weight: bold; background-color: rgb(239, 239, 239);
}
.row2 {
	background-color: rgb(222, 227, 231);
}
.row3 {
	background-color: rgb(238, 238, 238);
}
.crumbs a {
	text-decoration: underline;
}
.flash_error {
	margin: 0px 10px; padding: 10px 40px; font-weight: bold; =
background-repeat: no-repeat;
}
.flash_notice {
	margin: 0px 10px; padding: 10px 40px; font-weight: bold; =
background-repeat: no-repeat;
}
.flash_error {
	color: rgb(255, 51, 0); background-image: =
url("/images/icon_error_lrg.gif");
}
.flash_notice {
	background-image: url("/images/icon_success_lrg.gif");
}
select.validation-failed {
	border: 3px solid rgb(255, 0, 0); border-image: none;
}
input.validation-failed {
	border: 3px solid rgb(255, 0, 0); border-image: none;
}
textarea.validation-failed {
	border: 3px solid rgb(255, 0, 0); border-image: none;
}
* html select.validation-failed {
	background-color: rgb(255, 0, 0);
}
span.field_error {
	display: none;
}
div.quote_title {
	margin: 5px 0px 0px 15px; padding: 5px; font-weight: bold;
}
div.quote_div {
	background: rgb(250, 250, 250); margin: 0px 5px 5px 15px; padding: 3px; =
border: 1px solid rgb(204, 204, 204); border-image: none;
}
div.attachments {
	margin-top: 10px; border-top-color: rgb(153, 153, 153); =
border-top-width: 1px; border-top-style: solid;
}
div.attachments ul {
	list-style: none;
}
div.postauthor ul {
	list-style: none;
}
div.attachments ul {
	margin: 5px; padding: 5px; border: 1px solid rgb(204, 204, 204); =
border-image: none;
}
img.magplus {
	cursor: url(/images/magplus.gif), pointer;
}
div.logo {
	padding: 2px 6px 6px 2px; float: left; background-image: =
url("/images/logo_bg.gif"); background-repeat: no-repeat;
}
span.thumb_box {
	border: 1px solid rgb(204, 204, 204); border-image: none; width: 130px; =
height: 95px; text-align: center; vertical-align: middle; display: =
table-cell;
}
span.thumb_box img {
	vertical-align: middle;
}
.right {
	float: right;
}
.left {
	float: left;
}
table.bbcode {
	border: 1px solid rgb(204, 204, 204); border-image: none;
}
table.bbcode td {
	padding: 3px; border: 1px solid rgb(204, 204, 204); border-image: none;
}
div#search_engine_box {
	border: 1px solid rgb(204, 204, 204); border-image: none; width: 240px; =
text-align: left; right: 0px; bottom: 0px; position: fixed; =
background-color: white;
}
#search_engine_box h2 {
	padding: 5px; color: white; font-size: 12px; font-weight: normal; =
background-color: rgb(82, 110, 166);
}
#search_engine_box h2 span {
	color: black;
}
#search_engine_box h2 a {
	right: 5px; color: white; position: absolute;
}
#search_engine_box div {
	padding: 0px 5px;
}
#search_engine_box li {
	list-style: square; margin-left: 15px;
}
* html div#search_engine_box {
	right: auto; bottom: auto; position: absolute;
}
div#chat_button {
	padding: 2px; border: 1px solid rgb(204, 204, 204); border-image: none; =
width: 80px; text-align: right; right: 10px; bottom: 0px; =
vertical-align: middle; position: fixed; background-color: rgb(238, 238, =
238);
}
div#chat_input {
	text-align: left; right: 10px; bottom: 25px; position: fixed;
}
#chat_iframe {
	width: 360px; background-color: transparent;
}
div#chat_button img {
	vertical-align: middle;
}
* html div#chat_button {
	right: auto; bottom: auto; position: absolute;
}
* html div#chat_input {
	right: auto; bottom: auto; position: absolute;
}
.tooltip {
	overflow: hidden; font-size: 12px; position: absolute !important; =
z-index: 10000 !important;
}
.tooltip .xtop {
	background: none; font-size: 1px; display: block;
}
.tooltip .xbottom {
	background: none; font-size: 1px; display: block;
}
.tooltip .xb1 {
	overflow: hidden; display: block;
}
.tooltip .xb2 {
	overflow: hidden; display: block;
}
.tooltip .xb3 {
	overflow: hidden; display: block;
}
.tooltip .xb4 {
	overflow: hidden; display: block;
}
.tooltip .xb1 {
	height: 1px;
}
.tooltip .xb2 {
	height: 1px;
}
.tooltip .xb3 {
	height: 1px;
}
.tooltip .xb2 {
	background: rgb(102, 102, 102); border-right-color: rgb(51, 51, 51); =
border-left-color: rgb(51, 51, 51); border-right-width: 1px; =
border-left-width: 1px; border-right-style: solid; border-left-style: =
solid;
}
.tooltip .xb3 {
	background: rgb(102, 102, 102); border-right-color: rgb(51, 51, 51); =
border-left-color: rgb(51, 51, 51); border-right-width: 1px; =
border-left-width: 1px; border-right-style: solid; border-left-style: =
solid;
}
.tooltip .xb4 {
	background: rgb(102, 102, 102); border-right-color: rgb(51, 51, 51); =
border-left-color: rgb(51, 51, 51); border-right-width: 1px; =
border-left-width: 1px; border-right-style: solid; border-left-style: =
solid;
}
.tooltip .xbottom .xb2 {
	background: rgb(102, 102, 102);
}
.tooltip .xbottom .xb3 {
	background: rgb(102, 102, 102);
}
.tooltip .xbottom .xb4 {
	background: rgb(102, 102, 102);
}
.tooltip .xb1 {
	background: rgb(51, 51, 51); margin: 0px 5px;
}
.tooltip .xb2 {
	border-width: 0px 2px; margin: 0px 3px;
}
.tooltip .xb3 {
	margin: 0px 2px;
}
.tooltip .xb4 {
	margin: 0px 1px; height: 2px;
}
.tooltip .xboxcontent {
	border-width: 0px 1px; border-style: solid; border-color: rgb(51, 51, =
51); margin: 0px; padding: 0px 20px; border-image: none; text-align: =
center; color: rgb(0, 0, 0); font-size: 125%; -ms-word-wrap: break-word; =
text-shadow: 2px 2px 0px #ccc; background-color: rgb(102, 102, 102);
}
div#site_nav {
	z-index: 1;
}
div#channel_nav {
	z-index: 1;
}
div#header {
	position: relative; z-index: 2;
}
.logo a:hover {
	background-color: inherit;
}
input#login_button {
	background: url("/images/login_button.jpg") no-repeat; border: 0px =
currentColor; border-image: none; width: 147px; height: 34px; color: =
rgb(0, 86, 173); font-size: 0px; cursor: pointer;
}
#favorite_form_container {
	background: url("/images/app/bg_new.png") no-repeat; padding: 10px; =
width: 580px; height: 250px; text-align: left; font-size: 12px; =
position: absolute; z-index: 777;
}
#favorite_form_container .cont {
	background: rgb(255, 255, 255); width: 580px; height: 250px;
}
#favorite_form_wrapper {
	padding-left: 15px; position: relative;
}
#close_list {
	background: rgb(238, 238, 238); padding: 5px 10px; width: 560px; =
text-align: right; overflow: hidden; margin-bottom: 20px; =
border-bottom-color: rgb(204, 204, 204); border-bottom-width: 1px; =
border-bottom-style: dashed;
}
#favorite_form_close {
	cursor: pointer;
}
#favorite_form_success {
	text-align: center; font-size: 18px; margin-top: 70px;
}
#favorite_form_success img {
	margin-right: 10px; vertical-align: bottom;
}
#current_tags_panel {
	margin: 10px 0px 0px;
}
#current_tags_panel span {
	margin: 0px 5px 5px 0px; padding: 0px 10px; border-radius: 30px; color: =
rgb(255, 255, 255); display: inline-block; background-color: rgb(93, =
122, 155); -webkit-border-radius: 30px; -moz-border-radius: 30px; =
-o-border-radius: 30px;
}
#suggested_tags_panel {
	margin: 10px 0px 0px;
}
#suggested_tags_panel a {
	margin: 0px 5px 5px 0px; padding: 0px 10px; border-radius: 30px; =
display: inline-block; background-color: rgb(170, 181, 195); =
-webkit-border-radius: 30px; -moz-border-radius: 30px; -o-border-radius: =
30px;
}
#suggested_tags_panel a {
	color: rgb(255, 255, 255); text-decoration: none;
}
#suggested_tags_panel a:hover {
	background-color: rgb(248, 123, 0);
}
#suggested_tags_panel a.added {
	background-color: rgb(248, 123, 0);
}
.news_tag {
	margin: 10px 0px 5px; line-height: 20px; clear: both; display: block;
}
.news_tag::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.news_tag a {
	margin: 0px 5px 5px 0px; padding: 0px 10px; border-radius: 10px; color: =
rgb(255, 255, 255); text-decoration: none; display: inline-block; =
background-color: rgb(170, 181, 195); -webkit-border-radius: 10px; =
-moz-border-radius: 10px; -o-border-radius: 10px;
}
.news_tag a:hover {
	background-color: rgb(248, 123, 0);
}
#suggested_tags_panel a.added {
	background-color: rgb(248, 123, 0);
}
.news_tag span.hilite1 {
	background-color: transparent;
}
.news_tag span.view_all {
	float: right;
}
.news_tag span.view_all a {
	background: none; padding: 0px 6px; color: rgb(0, 102, 153); =
text-decoration: underline;
}
.title .news_tag {
	text-align: center;
}
.category_tags {
	padding: 5px 0px; margin-top: 10px;
}
.category_tags a {
	background: url("/images/tag_bg.gif") no-repeat left top; margin: 0px =
6px 0px 0px; padding: 0px 0px 0px 12px; height: 20px; color: rgb(255, =
255, 255); line-height: 20px; text-decoration: none; display: =
inline-block;
}
.category_tags a span {
	background: url("/images/tag_bg.gif") no-repeat right top; padding: 0px =
12px 0px 0px; height: 20px; display: inline-block;
}
.category_tags a:hover {
	background: url("/images/tag_bg_3.gif") no-repeat left top;
}
.category_tags a.pick_on {
	background: url("/images/tag_bg_3.gif") no-repeat left top;
}
.category_tags a:hover span {
	background: url("/images/tag_bg_3.gif") no-repeat right top;
}
.category_tags a.pick_on span {
	background: url("/images/tag_bg_3.gif") no-repeat right top;
}
#user_nav #notifications_count {
	background: rgb(255, 255, 255); margin: 0px 0px 0px -5px; =
border-radius: 3px; border: 1px solid rgb(204, 204, 204); border-image: =
none; line-height: 24px; font-weight: bold; text-decoration: none; =
-webkit-border-radius: 3px; -moz-border-radius: 3px; =
-khtml-border-radius: 3px;
}
#user_nav a#notifications_count:hover {
	background: rgb(0, 110, 181); border-radius: 3px; border: 1px solid =
transparent; border-image: none; color: rgb(255, 255, 255); =
-webkit-border-radius: 3px; -moz-border-radius: 3px; =
-khtml-border-radius: 3px;
}
#user_nav .new_notice#notifications_count {
	background: rgb(0, 110, 181); border-radius: 3px; border: 1px solid =
transparent; border-image: none; color: rgb(255, 255, 255); =
-webkit-border-radius: 3px; -moz-border-radius: 3px; =
-khtml-border-radius: 3px;
}
#user_nav .clicked {
	background: url("/images/sms_click_bg.gif") no-repeat top !important; =
color: rgb(255, 255, 255);
}
#notifications_menu {
	border: 1px solid rgb(221, 221, 221); border-image: none; top: 26px; =
width: 380px; text-align: left; right: 10px; color: black; overflow: =
hidden; position: absolute; z-index: 999; box-shadow: 0px 1px 5px #888; =
background-color: white; _top: 23px; -moz-box-shadow: 0 1px 5px #888; =
-webkit-box-shadow: 0 1px 5px #888;
}
#notifications_loading {
	padding: 0px 5px; left: 150px; width: 60px; position: absolute; =
background-color: yellow;
}
#notifications_menu .menu_title {
	padding: 0px 10px; height: 36px; line-height: 34px; overflow: hidden; =
border-bottom-color: rgb(221, 221, 221); border-bottom-width: 1px; =
border-bottom-style: solid;
}
#notifications_menu .menu_title a {
	color: rgb(51, 51, 51); text-decoration: underline;
}
#notifications_menu .menu_title a:hover {
	background: none;
}
#notifications_menu .menu_title .title {
	float: left;
}
#notifications_menu .menu_title .all {
	float: right;
}
#notifications_menu .notification_summary {
	padding: 10px; color: rgb(51, 51, 51); overflow: hidden; =
border-bottom-color: rgb(221, 221, 221); border-bottom-width: 1px; =
border-bottom-style: solid; cursor: pointer; background-color: rgb(246, =
250, 252);
}
#notifications_menu .notification_summary .time {
	color: rgb(153, 153, 153);
}
#notifications_menu .unread.notification_summary {
	font-weight: bold; background-color: rgb(255, 255, 255);
}
#notifications_menu .unread.notification_summary .time {
	color: rgb(51, 51, 51); font-weight: normal;
}
#notifications_menu .current.notification_summary {
	background-color: rgb(219, 235, 244);
}
#notifications_menu .notification_summary:hover {
	background-color: rgb(219, 235, 244);
}
#notifications_menu .show_all {
	cursor: pointer;
}
#notifications_menu .return {
	cursor: pointer;
}
#notifications_menu .notification_detail {
=09
}
#notifications_menu .notification_detail_title {
	background: rgb(250, 250, 250); margin: 0px 0px 5px; padding: 4px 10px; =
line-height: 26px; overflow: hidden; border-bottom-color: rgb(238, 238, =
238); border-bottom-width: 1px; border-bottom-style: solid; position: =
relative;
}
#notifications_menu .notification_detail_title .subject_link {
	display: block;
}
#notifications_menu .notification_detail_title .time {
	top: 4px; right: 10px; position: absolute;
}
#notifications_menu .notification_detail_notice {
	background: url("/images/line_1.gif") repeat-x top; margin: 5px 0px =
0px; padding: 5px 10px 10px; color: rgb(153, 153, 153);
}
#notifications_menu .notification_detail_content {
	padding: 0px;
}
#notifications_menu .system_message {
	padding: 0px 10px 10px;
}
#notifications_menu .notification_detail_item {
	padding: 7px 10px; overflow: hidden; border-bottom-color: rgb(230, 230, =
230); border-bottom-width: 1px; border-bottom-style: solid;
}
#notifications_menu span.time {
	color: gray; float: right;
}
#notifications_menu span.paginate {
	float: right;
}
#notifications_menu span.paginate .separated {
	padding: 0px 10px; width: 10px; color: rgb(102, 102, 102);
}
#notifications_menu span.paginate #prev_button {
	text-decoration: none;
}
#notifications_menu span.paginate #next_button {
	text-decoration: none;
}
#notifications_menu span.paginate a {
	padding-left: 3px; cursor: pointer;
}
#notifications_menu span.paginate a.disable {
	color: rgb(153, 153, 153); text-decoration: none; cursor: default;
}
div#page {
	width: 100%;
}
div#header {
	height: 30px;
}
div#header {
	margin: 0px auto; width: 950px; position: relative;
}
div#content {
	margin: 0px auto; width: 950px; position: relative;
}
div#branding {
	margin: 0px auto; width: 950px; position: relative;
}
div#blog_site_nav {
	margin-top: 3px; float: left;
}
div#blog_site_nav a.homepage {
	background-position: left; padding-left: 77px; background-image: =
url("/images/logo-small.gif"); background-repeat: no-repeat;
}
div#blog_site_nav a {
	padding: 3px 5px; line-height: 2.2em;
}
a#msna {
	text-decoration: none;
}
div#branding {
	padding: 10px 0px 0px; color: white; float: none;
}
div#branding h1 {
	margin: 0px; padding-top: 8px; font-size: 30px;
}
div#branding a {
	color: white; text-decoration: underline;
}
div#branding a:link {
	color: white; text-decoration: underline;
}
div#branding a:active {
	color: white; text-decoration: underline;
}
div#branding a:visited {
	color: white; text-decoration: underline;
}
div#branding a:hover {
	color: white; text-decoration: none;
}
div#branding h1 a {
	text-decoration: none;
}
div#branding h1 a:link {
	text-decoration: none;
}
div#branding h1 a:active {
	text-decoration: none;
}
div#branding h1 a:visited {
	text-decoration: none;
}
div#local {
	overflow: hidden;
}
div#local h5 {
	margin-left: 10px;
}
div#local li {
	list-style: square; line-height: 2.1em; margin-left: 25px;
}
#blog_name {
	padding-left: 38px; float: left;
}
#blog_preview {
	width: 200px; height: 18px; text-align: right; float: right;
}
#blog_preview img {
	vertical-align: middle;
}
#blog_domain {
	padding: 35px 20px 0px 0px; float: right;
}
div#content {
	margin-top: 5px;
}
div#local {
	margin: 3px 3px 0px 0px; padding: 10px 3px 0px; border: 1px solid =
black; border-image: none; width: 188px;
}
div#main {
	margin: 3px 0px 0px 5px; padding: 5px 12px; border: 1px solid =
currentColor; border-image: none; width: 714px; overflow: hidden;
}
#blog_owner {
	padding: 0px 13px; text-align: center;
}
div#blog_owner_logo {
	padding: 10px; border: 1px solid rgb(204, 204, 204); border-image: =
none;
}
div#blog_owner_logo img {
	width: 120px !important;
}
#blog_owner_name {
	padding-top: 5px; font-weight: bolder;
}
#user_visits {
	margin-bottom: 20px;
}
#user_visits div.left {
	width: 75px; overflow: hidden;
}
div.user_visit {
	margin: 10px 0px 0px 5px; width: 75px; height: 90px; overflow: hidden; =
float: left;
}
#blog_actions {
	margin-bottom: 20px;
}
#blog_actions ul li {
	list-style: none; margin-left: 10px;
}
#blog_actions a.profile {
	background-position: left; padding: 0px 10px 0px 20px; =
background-repeat: no-repeat;
}
#blog_actions a.message {
	background-position: left; padding: 0px 10px 0px 20px; =
background-repeat: no-repeat;
}
#blog_actions a.guest_book {
	background-position: left; padding: 0px 10px 0px 20px; =
background-repeat: no-repeat;
}
#blog_actions a.subscription {
	background-position: left; padding: 0px 10px 0px 20px; =
background-repeat: no-repeat;
}
#blog_actions a.profile {
	background-image: url("/images/blog/profile.png");
}
#blog_actions a.message {
	background-image: url("/images/blog/message.png");
}
#blog_actions a.guest_book {
	background-image: url("/images/blog/guest_book.png");
}
#blog_actions a.subscription {
	background-image: url("/images/blog/subscription.png");
}
div#rss li {
	list-style: none;
}
div.blog_nav {
	right: 20px; margin-bottom: 15px;
}
div.pre_next {
	text-align: right; padding-top: 5px; float: right;
}
div.pre_next a {
	padding: 0px 15px; background-repeat: no-repeat;
}
div.pre_next a.next {
	background-position: left; background-image: =
url("/images/gray_west_arrow.gif");
}
div.pre_next a.pre {
	background-position: right; background-image: =
url("/images/gray_east_arrow.gif");
}
.blog_main {
	margin: auto auto 10px; padding: 10px 11px 15px; width: 700px; =
border-bottom-color: currentColor; border-bottom-width: 1px; =
border-bottom-style: dotted;
}
.blog_title {
	margin-bottom: 15px;
}
.blog_title h3 .actions a {
	margin-left: 8px; background-color: transparent;
}
.blog_bottom {
	padding: 15px 0px 5px;
}
.blog_bottom li {
	list-style: none; margin: 0px 10px 0px 0px; padding-right: 10px; =
border-right-color: currentColor; border-right-width: 1px; =
border-right-style: solid; float: left; display: inline;
}
.blog_bottom li.last {
	border-right-color: currentColor; border-right-width: medium; =
border-right-style: none;
}
.blog_bottom a.more {
	background-position: right; padding-right: 50px; background-image: =
url("/images/icon_more.gif"); background-repeat: no-repeat;
}
.blog_comment {
	padding: 15px; width: 685px; margin-top: 15px; border-top-color: gray; =
border-top-width: 1px; border-top-style: solid;
}
.comment_title {
	padding: 3px;
}
.comment_content {
	padding: 3px;
}
.comment_title .delete {
	right: 30px; position: absolute;
}
.comment_content {
	margin-bottom: 10px;
}
div.picture_thumb {
	margin: 0px 12px; width: 142px; height: 170px; overflow: hidden; float: =
left;
}
div.picture_thumb li {
	list-style: none; margin: 0px;
}
div.picture_full {
	width: 100%; text-align: center; overflow: auto; padding-top: 15px; =
border-top-color: gray; border-top-width: 1px; border-top-style: solid;
}
div.picture_full ul {
	margin: 10px 0px; width: 100%; text-align: left; padding-bottom: 20px;
}
div.picture_full li {
	list-style: none; margin: 0px; padding: 15px 0px 5px 10px;
}
.show_full_flag {
	margin-top: 10px; float: right;
}
div.digg {
	padding: 0px 5px; width: 52px; text-align: center; float: right;
}
.digg h3 {
	padding: 7px 0px; background-image: url("/images/digg.jpg"); =
background-repeat: no-repeat;
}
.digg div {
	padding: 7px 0px; background-image: url("/images/digg.jpg"); =
background-repeat: no-repeat;
}
.digg h3.digged {
	background-image: url("/images/digged.jpg");
}
.digg div.digged {
	background-image: url("/images/digged.jpg");
}
.digg h3 a {
	background-position: left; padding-left: 15px; font-size: 14px; =
font-weight: normal; text-decoration: none; background-repeat: =
no-repeat;
}
.digg h3 span {
	background-position: left; padding-left: 15px; font-size: 14px; =
font-weight: normal; text-decoration: none; background-repeat: =
no-repeat;
}
.digg div a {
	background-position: left; padding-left: 15px; font-size: 14px; =
font-weight: normal; text-decoration: none; background-repeat: =
no-repeat;
}
.digg div span {
	background-position: left; padding-left: 15px; font-size: 14px; =
font-weight: normal; text-decoration: none; background-repeat: =
no-repeat;
}
div.digg div.digg_admin {
	background: none; width: 100px; text-align: left;
}
div.digg div.digg_admin a {
	padding-left: 2px;
}
.digg h3 a.digg {
	color: rgb(21, 47, 147); background-image: =
url("/images/icon_digg.gif");
}
.digg h3 span.digg {
	color: rgb(21, 47, 147); background-image: =
url("/images/icon_digg.gif");
}
.digg div a.digg {
	color: rgb(21, 47, 147); background-image: =
url("/images/icon_digg.gif");
}
.digg div span.digg {
	color: rgb(21, 47, 147); background-image: =
url("/images/icon_digg.gif");
}
.digg h3 a.bury {
	color: rgb(160, 58, 50); background-image: =
url("/images/icon_bury.gif");
}
.digg h3 span.bury {
	color: rgb(160, 58, 50); background-image: =
url("/images/icon_bury.gif");
}
.digg div a.bury {
	color: rgb(160, 58, 50); background-image: =
url("/images/icon_bury.gif");
}
.digg div span.bury {
	color: rgb(160, 58, 50); background-image: =
url("/images/icon_bury.gif");
}
div#digg_bottom {
	margin: 5px 0px; padding-left: 270px; display: inline-block;
}
div#digg_bottom div {
	width: 72px; height: 50px; text-align: center; line-height: 25px; =
padding-top: 9px; font-size: 14px; margin-right: 10px; float: left; =
cursor: pointer; background-image: url("/images/digg_bottom.gif");
}
div#digg_bottom strong {
	color: white;
}
#share_weibo {
	background: none; font: 12px/32px Arial, Helvetica, sans-serif =
!important; margin: 0px; padding: 27px 5px 0px 0px; width: 160px; =
height: 32px; text-align: right; color: rgb(51, 51, 51); float: right; =
display: inline-block; cursor: auto; font-size-adjust: none !important; =
font-stretch: normal !important;
}
#share_weibo img {
	margin: 0px 5px;
}
#share_weibo a {
	background: none;
}
div#digg_bottom a {
	background: none; color: rgb(22, 7, 209); text-decoration: none;
}
div#digg_bottom div.digged {
	color: rgb(241, 78, 16); cursor: auto; background-image: =
url("/images/digged_bottom.gif");
}
h3.type_good {
	background-position: 0px 13px; padding-left: 25px; background-repeat: =
no-repeat;
}
h3.type_mid {
	background-position: 0px 13px; padding-left: 25px; background-repeat: =
no-repeat;
}
h3.type_original {
	background-position: 0px 13px; padding-left: 25px; background-repeat: =
no-repeat;
}
h3.type_translate {
	background-position: 0px 13px; padding-left: 25px; background-repeat: =
no-repeat;
}
h3.type_reprint {
	background-position: 0px 13px; padding-left: 25px; background-repeat: =
no-repeat;
}
h3.type_good {
	background-image: url("/images/blog/type_good.png");
}
h3.type_mid {
	background-image: url("/images/blog/type_mid.png");
}
h3.type_original {
	background-image: url("/images/blog/type_original.png");
}
h3.type_translate {
	background-image: url("/images/blog/type_translate.png");
}
h3.type_reprint {
	background-image: url("/images/blog/type_reprint.png");
}
#guest_book_emotes a {
	width: 125px; color: black; text-decoration: none; float: left; =
display: block; background-color: transparent;
}
#resume {
	width: 100%;
}
#resume label.title {
	width: 200px; font-weight: normal;
}
#resume label {
	width: 50px; font-weight: normal;
}
div.group {
	height: 160px;
}
div.group div.content {
	width: 630px; float: right;
}
#blog_options li {
	list-style: none; margin-left: 0px;
}
#blog_options label {
	width: 150px;
}
td.row1 {
	width: 160px; vertical-align: top; background-color: transparent;
}
h3 span {
	padding-left: 30px; font-size: 12px; font-weight: normal;
}
div.blog_title h3 {
	padding-top: 10px; font-size: 16px;
}
div.blog_title h3 span {
	font-size: 12px; font-weight: normal; margin-left: 5px;
}
div.blog_title h3 span a {
	margin-left: 8px;
}
table.admin {
	width: 100%; margin-bottom: 20px;
}
table.admin thead {
	font-size: 13px; font-weight: bold;
}
table.admin tbody td {
	padding: 5px 0px; border-top-color: rgb(221, 221, 221); =
border-top-width: 1px; border-top-style: dashed;
}
div#favorite_tag_list {
	padding-bottom: 20px; margin-bottom: 20px; border-bottom-color: =
rgb(204, 204, 204); border-bottom-width: 1px; border-bottom-style: =
solid;
}
div#favorite_tag_list li {
	list-style: none; margin: 5px; width: 120px; overflow: hidden; float: =
left;
}
div#favorite_tag_list input.text {
	width: 100px;
}
#main_nav {
	margin: 10px 0px 12px; height: 25px; border-bottom-color: rgb(51, 102, =
170); border-bottom-width: 1px; border-bottom-style: solid;
}
#main_nav li {
	list-style: none; margin: 0px 12px; float: left;
}
#main_nav a {
	background: rgb(221, 221, 221); border-width: 1px 1px medium; =
border-style: solid solid none; border-color: rgb(51, 102, 170) rgb(51, =
102, 170) currentColor; padding: 0.25em 1em; border-image: none; color: =
black; text-decoration: none; display: block;
}
#main_nav li.activetab a {
	background: rgb(255, 255, 255); border-bottom-color: white; =
border-bottom-width: 1px; border-bottom-style: solid;
}
ul#main_nav a:hover {
	background: rgb(255, 255, 255); border-bottom-color: white; =
border-bottom-width: 1px; border-bottom-style: solid;
}
#main_nav li.nonetab {
	padding-left: 30px;
}
#main_nav li.nonetab a {
	background: none; padding: 0px; border: currentColor; border-image: =
none; width: 200px; display: inline;
}
div.activity {
	padding: 7px 10px; margin-bottom: 10px; border-bottom-color: rgb(216, =
223, 234); border-bottom-width: 1px; border-bottom-style: solid;
}
div.new_reply {
	background-color: rgb(238, 238, 238);
}
.activity_content {
	width: 500px; padding-left: 22px; float: left; background-repeat: =
no-repeat;
}
.Topic .activity_content {
	background-image: url("/images/subscription/topic.gif");
}
.Blog .activity_content {
	background-image: url("/images/subscription/blog.gif");
}
.BlogComment .activity_content {
	background-image: url("/images/subscription/blog_comment.gif");
}
.Post .activity_content {
	background-image: url("/images/subscription/post.gif");
}
.News .activity_content {
	background-image: url("/images/subscription/news.gif");
}
.NewsComment .activity_content {
	background-image: url("/images/subscription/news_comment.gif");
}
.Essence .activity_content {
	background-image: url("/images/subscription/essence.gif");
}
.EssenceComment .activity_content {
	background-image: url("/images/subscription/essence_comment.gif");
}
.ArticleComment .activity_content {
	background-image: url("/images/subscription/post.gif");
}
.Picture .activity_content {
	background-image: url("/images/subscription/picture.gif");
}
.PictureComment .activity_content {
	background-image: url("/images/subscription/picture_comment.gif");
}
.Problem .activity_content {
	background-image: url("/images/subscription/problem.gif");
}
.Solution .activity_content {
	background-image: url("/images/subscription/solution.gif");
}
.GroupTopic .activity_content {
	background-image: url("/images/subscription/group_topic.gif");
}
.GroupPost .activity_content {
	background-image: url("/images/subscription/group_post.gif");
}
.Page .activity_content {
	background-image: url("/images/subscription/page.gif");
}
.Card .activity_content {
	background-image: url("/images/subscription/page.gif");
}
.PageComment .activity_content {
	background-image: url("/images/subscription/page_comment.gif");
}
.GuestBook .activity_content {
	background-image: url("/images/subscription/guest_book.gif");
}
.UserFavorite .activity_content {
	background-image: url("/images/subscription/user_favorite.gif");
}
.Twitter .activity_content {
	background-image: url("/images/subscription/twitter.gif");
}
.Subscription .activity_content {
	background-image: url("/images/subscription/subscription.gif");
}
div.activity_summary {
	padding: 5px 5px 5px 0px;
}
div.activity_summary img.thumb {
	padding: 2px; border: 1px solid rgb(238, 238, 238); border-image: none;
}
div.activity_time {
	float: right;
}
div#twitter_decorate {
	background-position: bottom; margin: 5px 13px 0px; background-image: =
url("/images/blog/twitter_decorate.gif"); background-repeat: no-repeat;
}
div#twitter {
	border-width: medium 1px 1px; border-style: none solid solid; =
border-color: currentColor rgb(204, 204, 204) rgb(204, 204, 204); =
margin: 0px 13px 5px; padding: 5px; border-image: none;
}
div.twitter {
	padding-bottom: 10px;
}
div.twitter em {
	color: rgb(153, 153, 153); font-size: 11px;
}
div.twitter em a {
	color: rgb(153, 153, 153); text-decoration: none;
}
div.twitter em a:hover {
	text-decoration: underline; background-color: transparent;
}
div.single_twitter {
	font-size: 18px;
}
div.twitter div.content {
	padding: 10px 10px 0px 20px; width: 667px; height: 80px; margin-left: =
2px; float: left; position: relative; background-image: =
url("/images/app/twitter_sbg.png"); background-repeat: no-repeat;
}
div.twitter div.action {
	right: 10px; bottom: 5px; position: absolute;
}
div.twitter div.action a:hover {
	background-color: transparent;
}
ul.blog_categories {
	margin: 0px; list-style-type: none;
}
ul.blog_categories li {
	margin: 0px 5px 0px 0px; padding: 0px; display: inline; =
list-style-type: none;
}
div#blog_content {
	line-height: 1.8em; font-size: 14px;
}
#blog_navbar {
	margin: 0px auto; width: 950px;
}
#blog_navbar li {
	margin: 0px; padding: 0px;
}
#blog_navbar ul {
	margin-left: 210px;
}
.blog_navbar_for {
	border-radius: 10px 10px 0px 0px; border: 0px currentColor; =
border-image: none; font-weight: bold; margin-top: 10px; =
-webkit-border-radius: 10px 10px 0 0; -moz-border-radius: 10px 10px 0 0; =
-khtml-border-radius: 10px 10px 0 0;
}
#blog_navbar li {
	list-style: none; padding: 0px 27px; height: 30px; color: rgb(255, 255, =
255); line-height: 30px; font-size: 15px; margin-top: 5px; float: left;
}
#blog_navbar li a:visited {
	color: rgb(255, 255, 255); text-decoration: none;
}
#blog_navbar .search {
	background: rgb(255, 255, 255); margin: 5px; border-radius: 2px; width: =
200px; float: left;
}
#blog_navbar input.button {
	border: 0px currentColor !important; border-image: none !important;
}
input.submit_search {
	border: 0px currentColor !important; border-image: none !important;
}
.submit_search {
	background: url("/images/blog/search.gif") no-repeat !important; =
border: 0px currentColor; border-image: none; width: 22px; height: 22px;
}
input.search_text {
	border: 0px currentColor; border-image: none; width: 150px !important; =
height: 22px !important;
}
#fd {
	clear: both;
}
.blog_main_title {
	padding: 10px 11px 5px; margin-bottom: 10px; border-bottom-color: =
currentColor; border-bottom-width: 1px; border-bottom-style: dotted;
}
.blog_main_title span {
	font-size: 14px;
}
#guest_books li {
	list-style: none !important; padding: 12px 0px 5px; margin-left: 10px =
!important; border-bottom-color: rgb(204, 204, 204); =
border-bottom-width: 1px; border-bottom-style: dotted;
}
#local a:hover a:active a:link a:visited {
	text-decoration: none !important;
}
iframe #tweetList {
	height: auto !important;
}
.notes {
	margin: 0px auto 10px; padding: 5px 10px; border: 1px solid rgb(204, =
204, 204); border-image: none; width: 85%; color: rgb(153, 153, 153);
}
.picture_upload {
	padding: 10px 20px; min-height: 400px;
}
.picture_upload_notes {
	background: rgb(247, 247, 247); margin: 15px auto; padding: 3px; =
border: 1px solid rgb(204, 204, 204); border-image: none;
}
.picture_photo {
	background: rgb(255, 255, 255); padding: 3px; border: 1px solid =
rgb(204, 204, 204); border-image: none; width: 150px; height: 100px;
}
.picture_photo img {
	width: 150px; height: 94px;
}
.picture_photo_input1 {
	background: rgb(255, 255, 255); padding: 3px; border: 1px solid =
rgb(204, 204, 204); border-image: none; width: 100%; height: 50px;
}
.picture_photo_input2 {
	background: rgb(255, 255, 255); padding: 3px; border: 1px solid =
rgb(204, 204, 204); border-image: none; width: 100px;
}
.picture_info {
=09
}
.picture_info_img {
	text-align: center;
}
.picture_info_notes {
	padding: 20px;
}
.picture_info_notes span {
	color: rgb(153, 153, 153);
}
.picture_info_text {
	margin-top: 10px;
}
.picture_info_notes p span {
	color: black; line-height: 24px;
}
.default {
	padding: 20px 20px 10px; text-align: center; color: rgb(153, 153, 153); =
font-size: 14px; min-height: 400px;
}
.about_bar {
	margin: 10px 0px; padding: 5px 15px; font-weight: bold;
}
.about_bar span {
	margin-left: 20px;
}
.weight {
	font-weight: 100;
}
.series {
	margin: 0px; padding: 5px 0px 10px; display: block;
}
.series dt {
	margin: 0px 10px; float: left; display: inline-block;
}
.series dt img {
	padding: 1px; border: 1px solid rgb(204, 204, 204); border-image: none; =
width: 48px; height: 48px;
}
.series dd {
	margin: 0px; width: 90px; float: left;
}
.series dd a {
	height: 36px; line-height: 18px;
}
.series::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.ico_img {
=09
}
.ico_img img {
	margin-right: 3px; vertical-align: middle;
}
span.gold {
	background-position: left; padding-left: 12px; background-image: =
url("/images/ask/medal-gold.gif"); background-repeat: no-repeat;
}
span.bronze {
	background-position: left; padding-left: 12px; background-image: =
url("/images/ask/medal-bronze.gif"); background-repeat: no-repeat;
}
span.silver {
	background-position: left; padding-left: 12px; background-image: =
url("/images/ask/medal-silver.gif"); background-repeat: no-repeat;
}
.material_classify_bottom {
	padding-bottom: 10px; border-bottom-color: rgb(221, 221, 221); =
border-bottom-width: 1px; border-bottom-style: dashed;
}
.material_classify_top {
	padding-top: 10px;
}
.medal_bg {
	background: url("/images/ask/medal_bg.gif") no-repeat right 3px; =
margin-right: 10px; vertical-align: top; display: block;
}
.medal_bg::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.medal_bg img {
	margin: 0px !important; float: left;
}
.medal_s_list {
	margin: 0px; display: block;
}
.medal_s_list::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.medal_s_list li {
	list-style: none; margin: 0px 10px 0px 0px; float: left;
}
.medal_number {
	padding: 1px 1px 1px 0px; color: rgb(255, 255, 255); float: left;
}
.my_medal {
	margin: 20px 0px; display: block;
}
.my_medal::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.my_medal dt {
	margin-right: 20px; float: left;
}
.my_medal dd {
	padding: 5px; line-height: 24px;
}
.my_medal dd span {
	font-size: 16px; font-weight: bold;
}
.medal_user_list {
	padding: 10px 0px; display: block;
}
.medal_user_list::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
span.open {
	background: url("/images/ask/ask.gif") no-repeat left; padding-left: =
20px; display: block;
}
span.close {
	background: url("/images/ask/greenright.gif") no-repeat left; =
padding-left: 20px; display: block;
}
span.score {
	background-position: left; color: rgb(23, 163, 0); padding-left: 12px; =
margin-left: 10px; background-image: url("/images/ask/score.gif"); =
background-repeat: no-repeat;
}
.user_info {
	width: 160px; color: rgb(153, 153, 153); line-height: 17px; =
padding-top: 4px;
}
.user_info img {
	float: left;
}
.user_info span {
	margin-left: 10px;
}
.user_info_border {
	margin: 0px 30px 20px 0px; padding: 10px; border: 1px solid rgb(204, =
204, 204); border-image: none; float: left;
}
#medal_top_list {
	padding-top: 10px; display: block;
}
#medal_top_list::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
#medal_top_material {
	background: rgb(250, 250, 250); margin: 10px 0px 15px; padding: 15px =
0px 10px 12px; border: 1px solid rgb(194, 213, 227); border-image: none; =
display: block; _padding: 15px 0 10px 6px;
}
#medal_top_material::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.medal_top_son {
	background: white; margin: 5px 8px 9px 6px; padding: 14px 0px 0px 5px; =
border: 1px solid rgb(216, 230, 240); border-image: none; width: 165px; =
height: 65px; color: rgb(153, 153, 153); line-height: 17px; overflow: =
hidden; float: left;
}
.medal_top_son::after {
=09
}
.medal_top_son:hover {
	background: url("../images/medal_list_bg.png") no-repeat 0px 0px; =
margin: 0px 9px 7px 1px; padding: 20px 0px 0px 11px; border: =
currentColor; border-image: none; width: 165px; height: 68px; overflow: =
hidden; cursor: pointer;
}
.medal_top_son:hover a {
	color: rgb(188, 42, 77);
}
.medal_top_son p {
	margin: 0px 10px; width: 20px; text-align: center; color: rgb(54, 113, =
165); line-height: 50px; font-family: Arial; font-size: 18px; float: =
left;
}
.medal_top_son h6 {
=09
}
.medal_top_son img {
	float: left;
}
.medal_top_son span {
	margin-left: 10px;
}
.medal_tag {
	margin: 10px; font-size: 14px;
}
.medal_name {
	font-size: 12px; margin-bottom: 10px;
}
.medal {
	margin: 0px 8px 3px 0px; padding: 0px 10px; border-radius: 6px; border: =
1px solid rgb(51, 51, 51); border-image: none; line-height: 24px; =
font-size: 14px; text-decoration: none; display: inline-block; =
white-space: nowrap; background-color: rgb(51, 51, 51); =
-webkit-border-radius: 6px; -moz-border-radius: 6px;
}
.medal:hover {
	border: 1px solid rgb(68, 68, 68); border-image: none; =
background-color: rgb(68, 68, 68);
}
.medal_gold {
	color: rgb(255, 204, 51);
}
.medal_silver {
	color: rgb(255, 255, 255);
}
.medal_bronze {
	color: rgb(255, 153, 102);
}
.medal_multiplier {
	color: rgb(68, 68, 68); font-size: 14px; font-weight: bold; =
margin-right: 4px;
}
.medal_list {
	padding: 10px 40px; font-size: 14px;
}
.medal_list dl {
	display: block;
}
.medal_list dl::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.medal_list dt {
	margin: 0.25em 0px; width: 150px; height: 30px; float: left;
}
.medal_list dd {
	margin: 0.25em 0px; width: 650px; height: 30px; float: left;
}
.medal_list_title {
	padding: 5px 0px; font-size: 16px; margin-bottom: 10px; =
border-bottom-color: rgb(194, 213, 227); border-bottom-width: 1px; =
border-bottom-style: solid;
}
p.medal_tag a:hover {
	background-color: rgb(255, 255, 255);
}

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: 7bit
Content-Location: http://www.iteye.com/stylesheets/themes/blog/blue.css?1326191326

div.topic_page {
	color: rgb(16, 138, 198); text-decoration: underline;
}
a {
	color: rgb(16, 138, 198); text-decoration: underline;
}
a:hover {
	color: white;
}
div.app_nav {
	background-color: rgb(239, 250, 255);
}
div#page {
	background-color: rgb(239, 250, 255);
}
.comment_title {
	background-color: rgb(239, 250, 255);
}
tr.mouse_over {
	background-color: rgb(239, 250, 255);
}
div#local {
	border-color: rgb(16, 138, 198); background-color: white;
}
div#main {
	border-color: rgb(16, 138, 198); background-color: white;
}
.blog_main {
	border-color: rgb(16, 138, 198); background-color: white;
}
.pagination a:hover {
	border-color: rgb(16, 138, 198); background-color: white;
}
.pagination a:active {
	border-color: rgb(16, 138, 198); background-color: white;
}
div.nav {
	background-color: rgb(16, 138, 198);
}
div#app_list div.decorate {
	background-color: rgb(16, 138, 198);
}
a:hover {
	background-color: rgb(16, 138, 198);
}
div#branding {
	background-color: rgb(16, 138, 198);
}
input.button {
	background-color: rgb(16, 138, 198);
}
input.submit {
	background-color: rgb(16, 138, 198);
}
td.buttons a {
	background-color: rgb(16, 138, 198);
}
.pagination span.current {
	background-color: rgb(16, 138, 198);
}
.blog_bottom li {
	color: rgb(16, 138, 198); border-right-color: rgb(16, 138, 198);
}
table.admin thead {
	color: rgb(16, 138, 198);
}
.pagination a {
	color: rgb(16, 138, 198);
}
.pagination a:visited {
	color: rgb(16, 138, 198);
}
div.app_nav {
	border-color: rgb(16, 138, 198);
}
.pagination span.current {
	border-color: rgb(16, 138, 198);
}
.blog_comment {
	border-top-color: rgb(16, 138, 198);
}
div.picture_full {
	border-top-color: rgb(16, 138, 198);
}
.white {
	color: rgb(255, 255, 255) !important;
}
#blog_navbar {
	background-color: rgb(16, 138, 198);
}
.blog_navbar_for {
	color: rgb(16, 138, 198); background-color: rgb(239, 250, 255);
}
#blog_navbar .blog_navbar_for a:visited {
	color: rgb(16, 138, 198); background-color: rgb(239, 250, 255);
}
#blog_navbar .blog_navbar_for a:link {
	color: rgb(16, 138, 198); background-color: rgb(239, 250, 255);
}
.blog_main_title {
	color: rgb(0, 0, 0);
}
.about_bar {
	background: rgb(204, 204, 204); color: rgb(16, 138, 198);
}
.view a:hover {
	color: rgb(16, 138, 198);
}
.list_current {
	
}
.list_current a {
	color: rgb(255, 102, 0); font-weight: bold;
}
.list_current a:hover {
	background: rgb(255, 102, 0); color: rgb(255, 255, 255);
}
#my_resume .editing a.del:hover {
	color: rgb(16, 138, 198);
}
#my_resume .editing a.add:hover {
	color: rgb(16, 138, 198);
}

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1348819953

.dp-highlighter {
	padding: 1px; width: 97%; overflow: auto; font-family: Monaco, DejaVu =
Sans Mono, Bitstream Vera Sans Mono, Consolas, Courier New, monospace; =
font-size: 12px; margin-left: 9px; -ms-word-break: break-all; =
-ms-word-wrap: break-word; background-color: transparent;
}
.dp-highlighter ol {
	list-style: decimal; margin: 0px 0px 1px; padding: 2px 0px; border: 1px =
solid rgb(209, 215, 220); border-image: none; color: rgb(43, 145, 175); =
background-color: rgb(255, 255, 255);
}
.dp-highlighter ol li {
	margin: 0px 0px 0px 38px; line-height: 18px; padding-left: 10px; =
border-left-color: rgb(209, 215, 220); border-left-width: 1px; =
border-left-style: solid; background-color: rgb(250, 250, 250);
}
.dp-highlighter .columns div {
	margin: 0px 0px 0px 38px; line-height: 18px; padding-left: 10px; =
border-left-color: rgb(209, 215, 220); border-left-width: 1px; =
border-left-style: solid; background-color: rgb(250, 250, 250);
}
.dp-highlighter .columns {
	width: 100%; color: gray; overflow: hidden;
}
.dp-highlighter .columns div {
	padding-bottom: 5px;
}
.dp-highlighter ol li span {
	color: black;
}
.dp-highlighter .tools {
	margin: 0px; padding: 3px; text-align: left; color: black; font-weight: =
bold;
}
.dp-about {
	margin: 0px; padding: 0px; background-color: rgb(255, 255, 255);
}
.dp-about table {
	width: 100%; height: 100%; font-family: Tahoma, Verdana, Arial, =
sans-serif !important; font-size: 11px;
}
.dp-about td {
	padding: 10px; vertical-align: top;
}
.dp-about .copy {
	height: 95%; border-bottom-color: rgb(172, 168, 153); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.dp-about .title {
	color: red; font-weight: bold;
}
.dp-about .para {
	margin: 0px 0px 4px;
}
.dp-about .footer {
	text-align: right; border-top-color: rgb(255, 255, 255); =
border-top-width: 1px; border-top-style: solid; background-color: =
rgb(236, 234, 219);
}
.dp-about .close {
	width: 60px; height: 22px; font-family: Tahoma, Verdana, Arial, =
sans-serif !important; font-size: 11px; background-color: rgb(236, 234, =
219);
}
.dp-highlighter .comment {
	margin: 0px; padding: 0px; border: 0px currentColor; border-image: =
none; width: auto; color: rgb(0, 130, 0);
}
.dp-highlighter .comments {
	margin: 0px; padding: 0px; border: 0px currentColor; border-image: =
none; width: auto; color: rgb(0, 130, 0);
}
.dp-highlighter .string {
	color: blue;
}
.dp-highlighter .keyword {
	color: rgb(127, 0, 85); font-weight: bold;
}
.dp-highlighter .preprocessor {
	color: gray;
}

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/application.js?1358214518

/*  Prototype JavaScript framework, version 1.6.1=0A=
 *  (c) 2005-2009 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.1',=0A=
=0A=
  Browser: (function(){=0A=
    var ua =3D navigator.userAgent;=0A=
    var isOpera =3D Object.prototype.toString.call(window.opera) =3D=3D =
'[object Opera]';=0A=
    return {=0A=
      IE:             !!window.attachEvent && !isOpera,=0A=
      Opera:          isOpera,=0A=
      WebKit:         ua.indexOf('AppleWebKit/') > -1,=0A=
      Gecko:          ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') =
=3D=3D=3D -1,=0A=
      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)=0A=
    }=0A=
  })(),=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    SelectorsAPI: !!document.querySelector,=0A=
    ElementExtensions: (function() {=0A=
      var constructor =3D window.Element || window.HTMLElement;=0A=
      return !!(constructor && constructor.prototype);=0A=
    })(),=0A=
    SpecificElementExtensions: (function() {=0A=
      if (typeof window.HTMLDivElement !=3D=3D 'undefined')=0A=
        return true;=0A=
=0A=
      var div =3D document.createElement('div');=0A=
      var form =3D document.createElement('form');=0A=
      var isSupported =3D false;=0A=
=0A=
      if (div['__proto__'] && (div['__proto__'] !=3D=3D =
form['__proto__'])) {=0A=
        isSupported =3D true;=0A=
      }=0A=
=0A=
      div =3D form =3D null;=0A=
=0A=
      return isSupported;=0A=
    })()=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) {return x}=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
=0A=
var Class =3D (function() {=0A=
  function subclass() {};=0A=
  function create() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
    return klass;=0A=
  }=0A=
=0A=
  function addMethods(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({toString: true}).length) {=0A=
      if (source.toString !=3D Object.prototype.toString)=0A=
        properties.push("toString");=0A=
      if (source.valueOf !=3D Object.prototype.valueOf)=0A=
        properties.push("valueOf");=0A=
    }=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value;=0A=
        value =3D (function(m) {=0A=
          return function() {return ancestor[m].apply(this, arguments);};=0A=
        })(property).wrap(method);=0A=
=0A=
        value.valueOf =3D method.valueOf.bind(method);=0A=
        value.toString =3D method.toString.bind(method);=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
=0A=
  return {=0A=
    create: create,=0A=
    Methods: {=0A=
      addMethods: addMethods=0A=
    }=0A=
  };=0A=
})();=0A=
(function() {=0A=
=0A=
  var _toString =3D Object.prototype.toString;=0A=
=0A=
  function extend(destination, source) {=0A=
    for (var property in source)=0A=
      destination[property] =3D source[property];=0A=
    return destination;=0A=
  }=0A=
=0A=
  function inspect(object) {=0A=
    try {=0A=
      if (isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  }=0A=
=0A=
  function toJSON(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown':return;=0A=
      case 'boolean':return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D toJSON(object[property]);=0A=
      if (!isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  }=0A=
=0A=
  function toQueryString(object) {=0A=
    return $H(object).toQueryString();=0A=
  }=0A=
=0A=
  function toHTML(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  }=0A=
=0A=
  function keys(object) {=0A=
    var results =3D [];=0A=
    for (var property in object)=0A=
      results.push(property);=0A=
    return results;=0A=
  }=0A=
=0A=
  function values(object) {=0A=
    var results =3D [];=0A=
    for (var property in object)=0A=
      results.push(object[property]);=0A=
    return results;=0A=
  }=0A=
=0A=
  function clone(object) {=0A=
    return extend({ }, object);=0A=
  }=0A=
=0A=
  function isElement(object) {=0A=
    return !!(object && object.nodeType =3D=3D 1);=0A=
  }=0A=
=0A=
  function isArray(object) {=0A=
    return _toString.call(object) =3D=3D "[object Array]";=0A=
  }=0A=
=0A=
=0A=
  function isHash(object) {=0A=
    return object instanceof Hash;=0A=
  }=0A=
=0A=
  function isFunction(object) {=0A=
    return typeof object =3D=3D=3D "function";=0A=
  }=0A=
=0A=
  function isString(object) {=0A=
    return _toString.call(object) =3D=3D "[object String]";=0A=
  }=0A=
=0A=
  function isNumber(object) {=0A=
    return _toString.call(object) =3D=3D "[object Number]";=0A=
  }=0A=
=0A=
  function isUndefined(object) {=0A=
    return typeof object =3D=3D=3D "undefined";=0A=
  }=0A=
=0A=
  extend(Object, {=0A=
    extend:        extend,=0A=
    inspect:       inspect,=0A=
    toJSON:        toJSON,=0A=
    toQueryString: toQueryString,=0A=
    toHTML:        toHTML,=0A=
    keys:          keys,=0A=
    values:        values,=0A=
    clone:         clone,=0A=
    isElement:     isElement,=0A=
    isArray:       isArray,=0A=
    isHash:        isHash,=0A=
    isFunction:    isFunction,=0A=
    isString:      isString,=0A=
    isNumber:      isNumber,=0A=
    isUndefined:   isUndefined=0A=
  });=0A=
})();=0A=
Object.extend(Function.prototype, (function() {=0A=
  var slice =3D Array.prototype.slice;=0A=
=0A=
  function update(array, args) {=0A=
    var arrayLength =3D array.length, length =3D args.length;=0A=
    while (length--) array[arrayLength + length] =3D args[length];=0A=
    return array;=0A=
  }=0A=
=0A=
  function merge(array, args) {=0A=
    array =3D slice.call(array, 0);=0A=
    return update(array, args);=0A=
  }=0A=
=0A=
  function argumentNames() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1]=0A=
      .replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g, '')=0A=
      .replace(/\s+/g, '').split(',');=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  }=0A=
=0A=
  function bind(context) {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    return function() {=0A=
      var a =3D merge(args, arguments);=0A=
      return __method.apply(context, a);=0A=
    }=0A=
  }=0A=
=0A=
  function bindAsEventListener(context) {=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    return function(event) {=0A=
      var a =3D update([event || window.event], args);=0A=
      return __method.apply(context, a);=0A=
    }=0A=
  }=0A=
=0A=
  function curry() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D slice.call(arguments, 0);=0A=
    return function() {=0A=
      var a =3D merge(args, arguments);=0A=
      return __method.apply(this, a);=0A=
    }=0A=
  }=0A=
=0A=
  function delay(timeout) {=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    timeout =3D timeout * 1000=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  }=0A=
=0A=
  function defer() {=0A=
    var args =3D update([0.01], arguments);=0A=
    return this.delay.apply(this, args);=0A=
  }=0A=
=0A=
  function wrap(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      var a =3D update([__method.bind(this)], arguments);=0A=
      return wrapper.apply(this, a);=0A=
    }=0A=
  }=0A=
=0A=
  function methodize() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      var a =3D update([this], arguments);=0A=
      return __method.apply(null, a);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    argumentNames:       argumentNames,=0A=
    bind:                bind,=0A=
    bindAsEventListener: bindAsEventListener,=0A=
    curry:               curry,=0A=
    delay:               delay,=0A=
    defer:               defer,=0A=
    wrap:                wrap,=0A=
    methodize:           methodize=0A=
  }=0A=
})());=0A=
=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
        this.currentlyExecuting =3D false;=0A=
      } catch(e) {=0A=
        this.currentlyExecuting =3D false;=0A=
        throw e;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, (function() {=0A=
=0A=
  function prepareReplacement(replacement) {=0A=
    if (Object.isFunction(replacement)) return replacement;=0A=
    var template =3D new Template(replacement);=0A=
    return function(match) {return template.evaluate(match)};=0A=
  }=0A=
=0A=
  function gsub(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D prepareReplacement(replacement);=0A=
=0A=
    if (Object.isString(pattern))=0A=
      pattern =3D RegExp.escape(pattern);=0A=
=0A=
    if (!(pattern.length || pattern.source)) {=0A=
      replacement =3D replacement('');=0A=
      return replacement + source.split('').join(replacement) + =
replacement;=0A=
    }=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  }=0A=
=0A=
  function sub(pattern, replacement, count) {=0A=
    replacement =3D prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  }=0A=
=0A=
  function scan(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  }=0A=
=0A=
  function truncate(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  }=0A=
=0A=
  function strip() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  }=0A=
=0A=
  function stripTags() {=0A=
    return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi, =
'');=0A=
  }=0A=
=0A=
  function stripScripts() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  }=0A=
=0A=
  function extractScripts() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  }=0A=
=0A=
  function evalScripts() {=0A=
    return this.extractScripts().map(function(script) {return =
eval(script)});=0A=
  }=0A=
=0A=
  function escapeHTML() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  }=0A=
=0A=
  function unescapeHTML() {=0A=
    return =
this.stripTags().replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;=
/g,'&');=0A=
  }=0A=
=0A=
=0A=
  function toQueryParams(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  }=0A=
=0A=
  function toArray() {=0A=
    return this.split('');=0A=
  }=0A=
=0A=
  function succ() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  }=0A=
=0A=
  function times(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  }=0A=
=0A=
  function camelize() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  }=0A=
=0A=
  function capitalize() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  }=0A=
=0A=
  function underscore() {=0A=
    return this.replace(/::/g, '/')=0A=
               .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')=0A=
               .replace(/([a-z\d])([A-Z])/g, '$1_$2')=0A=
               .replace(/-/g, '_')=0A=
               .toLowerCase();=0A=
  }=0A=
=0A=
  function dasherize() {=0A=
    return this.replace(/_/g, '-');=0A=
  }=0A=
=0A=
  function inspect(useDoubleQuotes) {=0A=
    var escapedString =3D this.replace(/[\x00-\x1f\\]/g, =
function(character) {=0A=
      if (character in String.specialChar) {=0A=
        return String.specialChar[character];=0A=
      }=0A=
      return '\\u00' + character.charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return this.inspect(true);=0A=
  }=0A=
=0A=
  function unfilterJSON(filter) {=0A=
    return this.replace(filter || Prototype.JSONFilter, '$1');=0A=
  }=0A=
=0A=
  function isJSON() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  }=0A=
=0A=
  function evalJSON(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  }=0A=
=0A=
  function include(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  }=0A=
=0A=
  function startsWith(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  }=0A=
=0A=
  function endsWith(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  }=0A=
=0A=
  function empty() {=0A=
    return this =3D=3D '';=0A=
  }=0A=
=0A=
  function blank() {=0A=
    return /^\s*$/.test(this);=0A=
  }=0A=
=0A=
  function interpolate(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
=0A=
  return {=0A=
    gsub:           gsub,=0A=
    sub:            sub,=0A=
    scan:           scan,=0A=
    truncate:       truncate,=0A=
    strip:          String.prototype.trim ? String.prototype.trim : =
strip,=0A=
    stripTags:      stripTags,=0A=
    stripScripts:   stripScripts,=0A=
    extractScripts: extractScripts,=0A=
    evalScripts:    evalScripts,=0A=
    escapeHTML:     escapeHTML,=0A=
    unescapeHTML:   unescapeHTML,=0A=
    toQueryParams:  toQueryParams,=0A=
    parseQuery:     toQueryParams,=0A=
    toArray:        toArray,=0A=
    succ:           succ,=0A=
    times:          times,=0A=
    camelize:       camelize,=0A=
    capitalize:     capitalize,=0A=
    underscore:     underscore,=0A=
    dasherize:      dasherize,=0A=
    inspect:        inspect,=0A=
    toJSON:         toJSON,=0A=
    unfilterJSON:   unfilterJSON,=0A=
    isJSON:         isJSON,=0A=
    evalJSON:       evalJSON,=0A=
    include:        include,=0A=
    startsWith:     startsWith,=0A=
    endsWith:       endsWith,=0A=
    empty:          empty,=0A=
    blank:          blank,=0A=
    interpolate:    interpolate=0A=
  };=0A=
})());=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (object && Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return (match[1] + '');=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? =
match[2].replace(/\\\\]/g, ']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D (function() {=0A=
  function each(iterator, context) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator.call(context, value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  }=0A=
=0A=
  function eachSlice(number, iterator, context) {=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    if (number < 1) return array;=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  }=0A=
=0A=
  function all(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator.call(context, value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function any(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator.call(context, value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function collect(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function detect(iterator, context) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function findAll(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function grep(filter, iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(RegExp.escape(filter));=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function include(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  }=0A=
=0A=
  function inGroupsOf(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  }=0A=
=0A=
  function inject(memo, iterator, context) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator.call(context, memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  }=0A=
=0A=
  function invoke(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  }=0A=
=0A=
  function max(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function min(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function partition(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator.call(context, value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  }=0A=
=0A=
  function pluck(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function reject(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function sortBy(iterator, context) {=0A=
    return this.map(function(value, index) {=0A=
      return {=0A=
        value: value,=0A=
        criteria: iterator.call(context, value, index)=0A=
      };=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  }=0A=
=0A=
  function toArray() {=0A=
    return this.map();=0A=
  }=0A=
=0A=
  function zip() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  }=0A=
=0A=
  function size() {=0A=
    return this.toArray().length;=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
  return {=0A=
    each:       each,=0A=
    eachSlice:  eachSlice,=0A=
    all:        all,=0A=
    every:      all,=0A=
    any:        any,=0A=
    some:       any,=0A=
    collect:    collect,=0A=
    map:        collect,=0A=
    detect:     detect,=0A=
    findAll:    findAll,=0A=
    select:     findAll,=0A=
    filter:     findAll,=0A=
    grep:       grep,=0A=
    include:    include,=0A=
    member:     include,=0A=
    inGroupsOf: inGroupsOf,=0A=
    inject:     inject,=0A=
    invoke:     invoke,=0A=
    max:        max,=0A=
    min:        min,=0A=
    partition:  partition,=0A=
    pluck:      pluck,=0A=
    reject:     reject,=0A=
    sortBy:     sortBy,=0A=
    toArray:    toArray,=0A=
    entries:    toArray,=0A=
    zip:        zip,=0A=
    size:       size,=0A=
    inspect:    inspect,=0A=
    find:       detect=0A=
  };=0A=
})();=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if ('toArray' in Object(iterable)) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
=0A=
(function() {=0A=
  var arrayProto =3D Array.prototype,=0A=
      slice =3D arrayProto.slice,=0A=
      _each =3D arrayProto.forEach; // use native browser JS 1.6 =
implementation if available=0A=
=0A=
  function each(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  }=0A=
  if (!_each) _each =3D each;=0A=
=0A=
  function clear() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  }=0A=
=0A=
  function first() {=0A=
    return this[0];=0A=
  }=0A=
=0A=
  function last() {=0A=
    return this[this.length - 1];=0A=
  }=0A=
=0A=
  function compact() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  }=0A=
=0A=
  function flatten() {=0A=
    return this.inject([], function(array, value) {=0A=
      if (Object.isArray(value))=0A=
        return array.concat(value.flatten());=0A=
      array.push(value);=0A=
      return array;=0A=
    });=0A=
  }=0A=
=0A=
  function without() {=0A=
    var values =3D slice.call(arguments, 0);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  }=0A=
=0A=
  function reverse(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  }=0A=
=0A=
  function uniq(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  }=0A=
=0A=
  function intersect(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) {return item =3D=3D=3D value});=0A=
    });=0A=
  }=0A=
=0A=
=0A=
  function clone() {=0A=
    return slice.call(this, 0);=0A=
  }=0A=
=0A=
  function size() {=0A=
    return this.length;=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
=0A=
  function indexOf(item, i) {=0A=
    i || (i =3D 0);=0A=
    var length =3D this.length;=0A=
    if (i < 0) i =3D length + i;=0A=
    for (; i < length; i++)=0A=
      if (this[i] =3D=3D=3D item) return i;=0A=
    return -1;=0A=
  }=0A=
=0A=
  function lastIndexOf(item, i) {=0A=
    i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
    var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
    return (n < 0) ? n : i - n - 1;=0A=
  }=0A=
=0A=
  function concat() {=0A=
    var array =3D slice.call(this, 0), item;=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      item =3D arguments[i];=0A=
      if (Object.isArray(item) && !('callee' in item)) {=0A=
        for (var j =3D 0, arrayLength =3D item.length; j < arrayLength; =
j++)=0A=
          array.push(item[j]);=0A=
      } else {=0A=
        array.push(item);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  }=0A=
=0A=
  Object.extend(arrayProto, Enumerable);=0A=
=0A=
  if (!arrayProto._reverse)=0A=
    arrayProto._reverse =3D arrayProto.reverse;=0A=
=0A=
  Object.extend(arrayProto, {=0A=
    _each:     _each,=0A=
    clear:     clear,=0A=
    first:     first,=0A=
    last:      last,=0A=
    compact:   compact,=0A=
    flatten:   flatten,=0A=
    without:   without,=0A=
    reverse:   reverse,=0A=
    uniq:      uniq,=0A=
    intersect: intersect,=0A=
    clone:     clone,=0A=
    toArray:   clone,=0A=
    size:      size,=0A=
    inspect:   inspect,=0A=
    toJSON:    toJSON=0A=
  });=0A=
=0A=
  var CONCAT_ARGUMENTS_BUGGY =3D (function() {=0A=
    return [].concat(arguments)[0][0] !=3D=3D 1;=0A=
  })(1,2)=0A=
=0A=
  if (CONCAT_ARGUMENTS_BUGGY) arrayProto.concat =3D concat;=0A=
=0A=
  if (!arrayProto.indexOf) arrayProto.indexOf =3D indexOf;=0A=
  if (!arrayProto.lastIndexOf) arrayProto.lastIndexOf =3D lastIndexOf;=0A=
})();=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
  function initialize(object) {=0A=
    this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
  }=0A=
=0A=
  function _each(iterator) {=0A=
    for (var key in this._object) {=0A=
      var value =3D this._object[key], pair =3D [key, value];=0A=
      pair.key =3D key;=0A=
      pair.value =3D value;=0A=
      iterator(pair);=0A=
    }=0A=
  }=0A=
=0A=
  function set(key, value) {=0A=
    return this._object[key] =3D value;=0A=
  }=0A=
=0A=
  function get(key) {=0A=
    if (this._object[key] !=3D=3D Object.prototype[key])=0A=
      return this._object[key];=0A=
  }=0A=
=0A=
  function unset(key) {=0A=
    var value =3D this._object[key];=0A=
    delete this._object[key];=0A=
    return value;=0A=
  }=0A=
=0A=
  function toObject() {=0A=
    return Object.clone(this._object);=0A=
  }=0A=
=0A=
  function keys() {=0A=
    return this.pluck('key');=0A=
  }=0A=
=0A=
  function values() {=0A=
    return this.pluck('value');=0A=
  }=0A=
=0A=
  function index(value) {=0A=
    var match =3D this.detect(function(pair) {=0A=
      return pair.value =3D=3D=3D value;=0A=
    });=0A=
    return match && match.key;=0A=
  }=0A=
=0A=
  function merge(object) {=0A=
    return this.clone().update(object);=0A=
  }=0A=
=0A=
  function update(object) {=0A=
    return new Hash(object).inject(this, function(result, pair) {=0A=
      result.set(pair.key, pair.value);=0A=
      return result;=0A=
    });=0A=
  }=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  function toQueryString() {=0A=
    return this.inject([], function(results, pair) {=0A=
      var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
      if (values && typeof values =3D=3D 'object') {=0A=
        if (Object.isArray(values))=0A=
          return results.concat(values.map(toQueryPair.curry(key)));=0A=
      } else results.push(toQueryPair(key, values));=0A=
      return results;=0A=
    }).join('&');=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '#<Hash:{' + this.map(function(pair) {=0A=
      return pair.map(Object.inspect).join(': ');=0A=
    }).join(', ') + '}>';=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return Object.toJSON(this.toObject());=0A=
  }=0A=
=0A=
  function clone() {=0A=
    return new Hash(this);=0A=
  }=0A=
=0A=
  return {=0A=
    initialize:             initialize,=0A=
    _each:                  _each,=0A=
    set:                    set,=0A=
    get:                    get,=0A=
    unset:                  unset,=0A=
    toObject:               toObject,=0A=
    toTemplateReplacements: toObject,=0A=
    keys:                   keys,=0A=
    values:                 values,=0A=
    index:                  index,=0A=
    merge:                  merge,=0A=
    update:                 update,=0A=
    toQueryString:          toQueryString,=0A=
    inspect:                inspect,=0A=
    toJSON:                 toJSON,=0A=
    clone:                  clone=0A=
  };=0A=
})());=0A=
=0A=
Hash.from =3D $H;=0A=
Object.extend(Number.prototype, (function() {=0A=
  function toColorPart() {=0A=
    return this.toPaddedString(2, 16);=0A=
  }=0A=
=0A=
  function succ() {=0A=
    return this + 1;=0A=
  }=0A=
=0A=
  function times(iterator, context) {=0A=
    $R(0, this, true).each(iterator, context);=0A=
    return this;=0A=
  }=0A=
=0A=
  function toPaddedString(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
=0A=
  function abs() {=0A=
    return Math.abs(this);=0A=
  }=0A=
=0A=
  function round() {=0A=
    return Math.round(this);=0A=
  }=0A=
=0A=
  function ceil() {=0A=
    return Math.ceil(this);=0A=
  }=0A=
=0A=
  function floor() {=0A=
    return Math.floor(this);=0A=
  }=0A=
=0A=
  return {=0A=
    toColorPart:    toColorPart,=0A=
    succ:           succ,=0A=
    times:          times,=0A=
    toPaddedString: toPaddedString,=0A=
    toJSON:         toJSON,=0A=
    abs:            abs,=0A=
    round:          round,=0A=
    ceil:           ceil,=0A=
    floor:          floor=0A=
  };=0A=
})());=0A=
=0A=
function $R(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
}=0A=
=0A=
var ObjectRange =3D Class.create(Enumerable, (function() {=0A=
  function initialize(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  }=0A=
=0A=
  function _each(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  }=0A=
=0A=
  function include(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: initialize,=0A=
    _each:      _each,=0A=
    include:    include=0A=
  };=0A=
})());=0A=
=0A=
=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() {Ajax.activeRequestCount++},=0A=
  onComplete: function() {Ajax.activeRequestCount--}=0A=
});=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) {headers[pair.key] =3D =
pair.value});=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) {return 0}=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) {return null;}=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) {return ''}=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) {return null}=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { };nsertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
=0A=
=0A=
=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
=0A=
(function(global) {=0A=
=0A=
  var SETATTRIBUTE_IGNORES_NAME =3D (function(){=0A=
    var elForm =3D document.createElement("form");=0A=
    var elInput =3D document.createElement("input");=0A=
    var root =3D document.documentElement;=0A=
    elInput.setAttribute("name", "test");=0A=
    elForm.appendChild(elInput);=0A=
    root.appendChild(elForm);=0A=
    var isBuggy =3D elForm.elements=0A=
      ? (typeof elForm.elements.test =3D=3D "undefined")=0A=
      : null;=0A=
    root.removeChild(elForm);=0A=
    elForm =3D elInput =3D null;=0A=
    return isBuggy;=0A=
  })();=0A=
=0A=
  var element =3D global.Element;=0A=
  global.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (SETATTRIBUTE_IGNORES_NAME && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(global.Element, element || { });=0A=
  if (element) global.Element.prototype =3D element.prototype;=0A=
})(this);=0A=
=0A=
Element.cache =3D { };=0A=
Element.idCounter =3D 1;=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
=0A=
  hide: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: (function(){=0A=
=0A=
    var SELECT_ELEMENT_INNERHTML_BUGGY =3D (function(){=0A=
      var el =3D document.createElement("select"),=0A=
          isBuggy =3D true;=0A=
      el.innerHTML =3D "<option value=3D\"test\">test</option>";=0A=
      if (el.options && el.options[0]) {=0A=
        isBuggy =3D el.options[0].nodeName.toUpperCase() !=3D=3D =
"OPTION";=0A=
      }=0A=
      el =3D null;=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    var TABLE_ELEMENT_INNERHTML_BUGGY =3D (function(){=0A=
      try {=0A=
        var el =3D document.createElement("table");=0A=
        if (el && el.tBodies) {=0A=
          el.innerHTML =3D "<tbody><tr><td>test</td></tr></tbody>";=0A=
          var isBuggy =3D typeof el.tBodies[0] =3D=3D "undefined";=0A=
          el =3D null;=0A=
          return isBuggy;=0A=
        }=0A=
      } catch (e) {=0A=
        return true;=0A=
      }=0A=
    })();=0A=
=0A=
    var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING =3D (function () {=0A=
      var s =3D document.createElement("script"),=0A=
          isBuggy =3D false;=0A=
      try {=0A=
        s.appendChild(document.createTextNode(""));=0A=
        isBuggy =3D !s.firstChild ||=0A=
          s.firstChild && s.firstChild.nodeType !=3D=3D 3;=0A=
      } catch (e) {=0A=
        isBuggy =3D true;=0A=
      }=0A=
      s =3D null;=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    function update(element, content) {=0A=
      element =3D $(element);=0A=
=0A=
      if (content && content.toElement)=0A=
        content =3D content.toElement();=0A=
=0A=
      if (Object.isElement(content))=0A=
        return element.update().insert(content);=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
      if (tagName =3D=3D=3D 'SCRIPT' && =
SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING) {=0A=
        element.text =3D content;=0A=
        return element;=0A=
      }=0A=
=0A=
      if (SELECT_ELEMENT_INNERHTML_BUGGY || =
TABLE_ELEMENT_INNERHTML_BUGGY) {=0A=
        if (tagName in Element._insertionTranslations.tags) {=0A=
          while (element.firstChild) {=0A=
            element.removeChild(element.firstChild);=0A=
          }=0A=
          Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
            .each(function(node) {=0A=
              element.appendChild(node)=0A=
            });=0A=
        }=0A=
        else {=0A=
          element.innerHTML =3D content.stripScripts();=0A=
        }=0A=
      }=0A=
      else {=0A=
        element.innerHTML =3D content.stripScripts();=0A=
      }=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
      return element;=0A=
    }=0A=
=0A=
    return update;=0A=
  })(),=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return Element.recursivelyCollect(element, 'parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return Element.select(element, "*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return Element.recursivelyCollect(element, 'previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return Element.recursivelyCollect(element, 'nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return Element.previousSiblings(element).reverse()=0A=
      .concat(Element.nextSiblings(element));=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D Element.ancestors(element);=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
Element.firstDescendant(element);=0A=
    return Object.isNumber(expression) ? =
Element.descendants(element)[expression] :=0A=
      Element.select(element, expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D Element.previousSiblings(element);=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D Element.nextSiblings(element);=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
=0A=
  select: function(element) {=0A=
    var args =3D Array.prototype.slice.call(arguments, 1);=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function(element) {=0A=
    var args =3D Array.prototype.slice.call(arguments, 1);=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D Element.readAttribute(element, 'id');=0A=
    if (id) return id;=0A=
    do {id =3D 'anonymous_element_' + Element.idCounter++} while ($(id));=0A=
    Element.writeAttribute(element, 'id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return Element.getDimensions(element).height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return Element.getDimensions(element).width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!Element.hasClassName(element, className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return Element[Element.hasClassName(element, className) ?=0A=
      'removeClassName' : 'addClassName'](element, className);=0A=
  },=0A=
=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (ancestor.contains)=0A=
      return ancestor.contains(element) && ancestor !=3D=3D element;=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D ancestor) return true;=0A=
=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.cumulativeOffset(element);=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value || value =3D=3D 'auto') {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D Element.getStyle(element, 'display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    if (originalPosition !=3D 'fixed') // Switching fixed to absolute =
causes issues in Safari=0A=
      els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      if (Prototype.Browser.Opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') return =
element;=0A=
=0A=
    var offsets =3D Element.positionedOffset(element);=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'relative') return =
element;=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || (element.tagName && =
(element.tagName.toUpperCase() =3D=3D 'BODY'))) {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    source =3D $(source);=0A=
    var p =3D Element.viewportOffset(source);=0A=
=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D Element.getOffsetParent(element);=0A=
      delta =3D Element.viewportOffset(parent);=0A=
    }=0A=
=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default:return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      try {element.offsetParent}=0A=
      catch(e) {return $(document.body)}=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({position: 'relative'});=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({position: position});=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        try {element.offsetParent}=0A=
        catch(e) {return Element._returnOffset(0,0)}=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({zoom: 1});=0A=
        element.setStyle({position: 'relative'});=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({position: position});=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.cumulativeOffset =3D =
Element.Methods.cumulativeOffset.wrap(=0A=
    function(proceed, element) {=0A=
      try {element.offsetParent}=0A=
      catch(e) {return Element._returnOffset(0,0)}=0A=
      return proceed(element);=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D (function(){=0A=
=0A=
    var classProp =3D 'className';=0A=
    var forProp =3D 'for';=0A=
=0A=
    var el =3D document.createElement('div');=0A=
=0A=
    el.setAttribute(classProp, 'x');=0A=
=0A=
    if (el.className !=3D=3D 'x') {=0A=
      el.setAttribute('class', 'x');=0A=
      if (el.className =3D=3D=3D 'x') {=0A=
        classProp =3D 'class';=0A=
      }=0A=
    }=0A=
    el =3D null;=0A=
=0A=
    el =3D document.createElement('label');=0A=
    el.setAttribute(forProp, 'x');=0A=
    if (el.htmlFor !=3D=3D 'x') {=0A=
      el.setAttribute('htmlFor', 'x');=0A=
      if (el.htmlFor =3D=3D=3D 'x') {=0A=
        forProp =3D 'htmlFor';=0A=
      }=0A=
    }=0A=
    el =3D null;=0A=
=0A=
    return {=0A=
      read: {=0A=
        names: {=0A=
          'class':      classProp,=0A=
          'className':  classProp,=0A=
          'for':        forProp,=0A=
          'htmlFor':    forProp=0A=
        },=0A=
        values: {=0A=
          _getAttr: function(element, attribute) {=0A=
            return element.getAttribute(attribute);=0A=
          },=0A=
          _getAttr2: function(element, attribute) {=0A=
            return element.getAttribute(attribute, 2);=0A=
          },=0A=
          _getAttrNode: function(element, attribute) {=0A=
            var node =3D element.getAttributeNode(attribute);=0A=
            return node ? node.value : "";=0A=
          },=0A=
          _getEv: (function(){=0A=
=0A=
            var el =3D document.createElement('div');=0A=
            el.onclick =3D Prototype.emptyFunction;=0A=
            var value =3D el.getAttribute('onclick');=0A=
            var f;=0A=
=0A=
            if (String(value).indexOf('{') > -1) {=0A=
              f =3D function(element, attribute) {=0A=
                attribute =3D element.getAttribute(attribute);=0A=
                if (!attribute) return null;=0A=
                attribute =3D attribute.toString();=0A=
                attribute =3D attribute.split('{')[1];=0A=
                attribute =3D attribute.split('}')[0];=0A=
                return attribute.strip();=0A=
              };=0A=
            }=0A=
            else if (value =3D=3D=3D '') {=0A=
              f =3D function(element, attribute) {=0A=
                attribute =3D element.getAttribute(attribute);=0A=
                if (!attribute) return null;=0A=
                return attribute.strip();=0A=
              };=0A=
            }=0A=
            el =3D null;=0A=
            return f;=0A=
          })(),=0A=
          _flag: function(element, attribute) {=0A=
            return $(element).hasAttribute(attribute) ? attribute : null;=0A=
          },=0A=
          style: function(element) {=0A=
            return element.style.cssText.toLowerCase();=0A=
          },=0A=
          title: function(element) {=0A=
            return element.title;=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
  })();=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc =
frameBorder').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr2,=0A=
      src:         v._getAttr2,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
=0A=
  if (Prototype.BrowserFeatures.ElementExtensions) {=0A=
    (function() {=0A=
      function _descendants(element) {=0A=
        var nodes =3D element.getElementsByTagName('*'), results =3D [];=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName !=3D=3D "!") // Filter out comment nodes.=0A=
            results.push(node);=0A=
        return results;=0A=
      }=0A=
=0A=
      Element.Methods.down =3D function(element, expression, index) {=0A=
        element =3D $(element);=0A=
        if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
        return Object.isNumber(expression) ? =
_descendants(element)[expression] :=0A=
          Element.select(element, expression)[index || 0];=0A=
      }=0A=
    })();=0A=
  }=0A=
=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {=0A=
        element.width++;element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.documentElement) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) {parent.insertBefore(node, =
nextSibling)});=0A=
      else=0A=
        fragments.each(function(node) {parent.appendChild(node)});=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() {div =3D div.firstChild});=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  var tags =3D Element._insertionTranslations.tags;=0A=
  Object.extend(tags, {=0A=
    THEAD: tags.TBODY,=0A=
    TFOOT: tags.TBODY,=0A=
    TH:    tags.TD=0A=
  });=0A=
})();=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return !!(node && node.specified);=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
(function(div) {=0A=
=0A=
  if (!Prototype.BrowserFeatures.ElementExtensions && div['__proto__']) {=0A=
    window.HTMLElement =3D { };=0A=
    window.HTMLElement.prototype =3D div['__proto__'];=0A=
    Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
  }=0A=
=0A=
  div =3D null;=0A=
=0A=
})(document.createElement('div'))=0A=
=0A=
Element.extend =3D (function() {=0A=
=0A=
  function checkDeficiency(tagName) {=0A=
    if (typeof window.Element !=3D 'undefined') {=0A=
      var proto =3D window.Element.prototype;=0A=
      if (proto) {=0A=
        var id =3D '_' + (Math.random()+'').slice(2);=0A=
        var el =3D document.createElement(tagName);=0A=
        proto[id] =3D 'x';=0A=
        var isBuggy =3D (el[id] !=3D=3D 'x');=0A=
        delete proto[id];=0A=
        el =3D null;=0A=
        return isBuggy;=0A=
      }=0A=
    }=0A=
    return false;=0A=
  }=0A=
=0A=
  function extendElementWith(element, methods) {=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY =3D checkDeficiency('object');=0A=
=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions) {=0A=
    if (HTMLOBJECTELEMENT_PROTOTYPE_BUGGY) {=0A=
      return function(element) {=0A=
        if (element && typeof element._extendedByPrototype =3D=3D =
'undefined') {=0A=
          var t =3D element.tagName;=0A=
          if (t && (/^(?:object|applet|embed)$/i.test(t))) {=0A=
            extendElementWith(element, Element.Methods);=0A=
            extendElementWith(element, Element.Methods.Simulated);=0A=
            extendElementWith(element, =
Element.Methods.ByTag[t.toUpperCase()]);=0A=
          }=0A=
        }=0A=
        return element;=0A=
      }=0A=
    }=0A=
    return Prototype.K;=0A=
  }=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || typeof element._extendedByPrototype !=3D 'undefined' =
||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
        tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    extendElementWith(element, methods);=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    var element =3D document.createElement(tagName);=0A=
    var proto =3D element['__proto__'] || element.constructor.prototype;=0A=
    element =3D null;=0A=
    return proto;=0A=
  }=0A=
=0A=
  var elementPrototype =3D window.HTMLElement ? HTMLElement.prototype :=0A=
   Element.prototype;=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, elementPrototype);=0A=
    copy(Element.Methods.Simulated, elementPrototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
=0A=
document.viewport =3D {=0A=
=0A=
  getDimensions: function() {=0A=
    return {width: this.getWidth(), height: this.getHeight()};=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop  || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
=0A=
(function(viewport) {=0A=
  var B =3D Prototype.Browser, doc =3D document, element, property =3D =
{};=0A=
=0A=
  function getRootElement() {=0A=
    if (B.WebKit && !doc.evaluate)=0A=
      return document;=0A=
=0A=
    if (B.Opera && window.parseFloat(window.opera.version()) < 9.5)=0A=
      return document.body;=0A=
=0A=
    return document.documentElement;=0A=
  }=0A=
=0A=
  function define(D) {=0A=
    if (!element) element =3D getRootElement();=0A=
=0A=
    property[D] =3D 'client' + D;=0A=
=0A=
    viewport['get' + D] =3D function() {return element[property[D]]};=0A=
    return viewport['get' + D]();=0A=
  }=0A=
=0A=
  viewport.getWidth  =3D define.curry('Width');=0A=
=0A=
  viewport.getHeight =3D define.curry('Height');=0A=
})(document.viewport);=0A=
=0A=
=0A=
Element.Storage =3D {=0A=
  UID: 1=0A=
};=0A=
=0A=
Element.addMethods({=0A=
  getStorage: function(element) {=0A=
    if (!(element =3D $(element))) return;=0A=
=0A=
    var uid;=0A=
    if (element =3D=3D=3D window) {=0A=
      uid =3D 0;=0A=
    } else {=0A=
      if (typeof element._prototypeUID =3D=3D=3D "undefined")=0A=
        element._prototypeUID =3D [Element.Storage.UID++];=0A=
      uid =3D element._prototypeUID[0];=0A=
    }=0A=
=0A=
    if (!Element.Storage[uid])=0A=
      Element.Storage[uid] =3D $H();=0A=
=0A=
    return Element.Storage[uid];=0A=
  },=0A=
=0A=
  store: function(element, key, value) {=0A=
    if (!(element =3D $(element))) return;=0A=
=0A=
    if (arguments.length =3D=3D=3D 2) {=0A=
      Element.getStorage(element).update(key);=0A=
    } else {=0A=
      Element.getStorage(element).set(key, value);=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  retrieve: function(element, key, defaultValue) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var hash =3D Element.getStorage(element), value =3D hash.get(key);=0A=
=0A=
    if (Object.isUndefined(value)) {=0A=
      hash.set(key, defaultValue);=0A=
      value =3D defaultValue;=0A=
    }=0A=
=0A=
    return value;=0A=
  },=0A=
=0A=
  clone: function(element, deep) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var clone =3D element.cloneNode(deep);=0A=
    clone._prototypeUID =3D void 0;=0A=
    if (deep) {=0A=
      var descendants =3D Element.select(clone, '*'),=0A=
          i =3D descendants.length;=0A=
      while (i--) {=0A=
        descendants[i]._prototypeUID =3D void 0;=0A=
      }=0A=
    }=0A=
    return Element.extend(clone);=0A=
  }=0A=
});=0A=
/* Portions of the Selector class are derived from Jack Slocum's =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
=0A=
    if (this.shouldUseSelectorsAPI()) {=0A=
      this.mode =3D 'selectorsAPI';=0A=
    } else if (this.shouldUseXPath()) {=0A=
      this.mode =3D 'xpath';=0A=
      this.compileXPathMatcher();=0A=
    } else {=0A=
      this.mode =3D "normal";=0A=
      this.compileMatcher();=0A=
    }=0A=
=0A=
  },=0A=
=0A=
  shouldUseXPath: (function() {=0A=
=0A=
    var IS_DESCENDANT_SELECTOR_BUGGY =3D (function(){=0A=
      var isBuggy =3D false;=0A=
      if (document.evaluate && window.XPathResult) {=0A=
        var el =3D document.createElement('div');=0A=
        el.innerHTML =3D =
'<ul><li></li></ul><div><ul><li></li></ul></div>';=0A=
=0A=
        var xpath =3D ".//*[local-name()=3D'ul' or local-name()=3D'UL']" =
+=0A=
          "//*[local-name()=3D'li' or local-name()=3D'LI']";=0A=
=0A=
        var result =3D document.evaluate(xpath, el, null,=0A=
          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
=0A=
        isBuggy =3D (result.snapshotLength !=3D=3D 2);=0A=
        el =3D null;=0A=
      }=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    return function() {=0A=
      if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
      var e =3D this.expression;=0A=
=0A=
      if (Prototype.Browser.WebKit &&=0A=
       (e.include("-of-type") || e.include(":empty")))=0A=
        return false;=0A=
=0A=
      if ((/(\[[\w-]*?:|:checked)/).test(e))=0A=
        return false;=0A=
=0A=
      if (IS_DESCENDANT_SELECTOR_BUGGY) return false;=0A=
=0A=
      return true;=0A=
    }=0A=
=0A=
  })(),=0A=
=0A=
  shouldUseSelectorsAPI: function() {=0A=
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;=0A=
=0A=
    if (Selector.CASE_INSENSITIVE_CLASS_NAMES) return false;=0A=
=0A=
    if (!Selector._div) Selector._div =3D new Element('div');=0A=
=0A=
    try {=0A=
      Selector._div.querySelector(this.expression);=0A=
    } catch(e) {=0A=
      return false;=0A=
    }=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m, len =3D ps.length, name;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        p =3D ps[i].re;=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[name]) ? c[name](m) :=0A=
            new Template(c[name]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m, len =3D ps.length, name;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e];return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(ps[i].re)) {=0A=
          this.matcher.push(Object.isFunction(x[name]) ? x[name](m) :=0A=
            new Template(x[name]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    var e =3D this.expression, results;=0A=
=0A=
    switch (this.mode) {=0A=
      case 'selectorsAPI':=0A=
        if (root !=3D=3D document) {=0A=
          var oldId =3D root.id, id =3D $(root).identify();=0A=
          id =3D id.replace(/([\.:])/g, "\\$1");=0A=
          e =3D "#" + id + " " + e;=0A=
        }=0A=
=0A=
        results =3D $A(root.querySelectorAll(e)).map(Element.extend);=0A=
        root.id =3D oldId;=0A=
=0A=
        return results;=0A=
      case 'xpath':=0A=
        return document._getElementsByXPath(this.xpath, root);=0A=
      default:=0A=
       return this.matcher(root);=0A=
    }=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m, len =3D ps.length, name;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        p =3D ps[i].re;=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(p)) {=0A=
          if (as[name]) {=0A=
            this.tokens.push([name, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false;break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.BrowserFeatures.SelectorsAPI &&=0A=
 document.compatMode =3D=3D=3D 'BackCompat') {=0A=
  Selector.CASE_INSENSITIVE_CLASS_NAMES =3D (function(){=0A=
    var div =3D document.createElement('div'),=0A=
     span =3D document.createElement('span');=0A=
=0A=
    div.id =3D "prototype_test_id";=0A=
    span.className =3D 'Test';=0A=
    div.appendChild(span);=0A=
    var isIgnored =3D (div.querySelector('#prototype_test_id .test') =
!=3D=3D null);=0A=
    div =3D span =3D null;=0A=
    return isIgnored;=0A=
  })();=0A=
}=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",=0A=
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v, len =3D p.length, name;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i =3D 0; i<len; i++) {=0A=
            name =3D p[i].name=0A=
            if (m =3D e.match(p[i].re)) {=0A=
              v =3D Object.isFunction(x[name]) ? x[name](m) : new =
Template(x[name]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1";return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1";return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos;return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b});=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: [=0A=
    {name: 'laterSibling', re: /^\s*~\s*/},=0A=
    {name: 'child',        re: /^\s*>\s*/},=0A=
    {name: 'adjacent',     re: /^\s*\+\s*/},=0A=
    {name: 'descendant',   re: /^\s/},=0A=
=0A=
    {name: 'tagName',      re: /^\s*(\*|[\w\-]+)(\b|$)?/},=0A=
    {name: 'id',           re: /^#([\w\-\*]+)(\b|$)/},=0A=
    {name: 'className',    re: /^\.([\w\-\*]+)(\b|$)/},=0A=
    {name: 'pseudo',       re: =
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/},=0A=
    {name: 'attrPresence', re: /^\[((?:[\w-]+:)?[\w-]+)\]/},=0A=
    {name: 'attr',         re: =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/}=0A=
  ],=0A=
=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: (function(){=0A=
=0A=
      var PROPERTIES_ATTRIBUTES_MAP =3D (function(){=0A=
        var el =3D document.createElement('div'),=0A=
            isBuggy =3D false,=0A=
            propName =3D '_countedByPrototype',=0A=
            value =3D 'x'=0A=
        el[propName] =3D value;=0A=
        isBuggy =3D (el.getAttribute(propName) =3D=3D=3D value);=0A=
        el =3D null;=0A=
        return isBuggy;=0A=
      })();=0A=
=0A=
      return PROPERTIES_ATTRIBUTES_MAP ?=0A=
        function(nodes) {=0A=
          for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
            node.removeAttribute('_countedByPrototype');=0A=
          return nodes;=0A=
        } :=0A=
        function(nodes) {=0A=
          for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
            node._countedByPrototype =3D void 0;=0A=
          return nodes;=0A=
        }=0A=
    })(),=0A=
=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (typeof (n =3D nodes[i])._countedByPrototype =3D=3D =
'undefined') {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
=0A=
      if (root =3D=3D document) {=0A=
        if (!targetNode) return [];=0A=
        if (!nodes) return [targetNode];=0A=
      } else {=0A=
        if (!root.sourceIndex || root.sourceIndex < 1) {=0A=
          var nodes =3D root.getElementsByTagName('*');=0A=
          for (var j =3D 0, node; node =3D nodes[j]; j++) {=0A=
            if (node.id =3D=3D=3D id) return [node];=0A=
          }=0A=
        }=0A=
      }=0A=
=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (node.tagName =3D=3D '!' || node.firstChild) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) {return nv =3D=3D v;},=0A=
    '!=3D': function(nv, v) {return nv !=3D v;},=0A=
    '^=3D': function(nv, v) {return nv =3D=3D v || nv && =
nv.startsWith(v);},=0A=
    '$=3D': function(nv, v) {return nv =3D=3D v || nv && =
nv.endsWith(v);},=0A=
    '*=3D': function(nv, v) {return nv =3D=3D v || nv && nv.include(v);},=0A=
    '~=3D': function(nv, v) {return (' ' + nv + ' ').include(' ' + v + ' =
');},=0A=
    '|=3D': function(nv, v) {return ('-' + (nv || "").toUpperCase() +=0A=
     '-').include('-' + (v || "").toUpperCase() + '-');}=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression;expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    form =3D $(form);=0A=
    form.reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D {hash: !!options};=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name;value =3D $(element).getValue();=0A=
        if (value !=3D null && element.type !=3D 'file' && (element.type =
!=3D 'submit' || (!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    var elements =3D $(form).getElementsByTagName('*'),=0A=
        element,=0A=
        arr =3D [ ],=0A=
        serializers =3D Form.Element.Serializers;=0A=
    for (var i =3D 0; element =3D elements[i]; i++) {=0A=
      arr.push(element);=0A=
    }=0A=
    return arr.inject([], function(elements, child) {=0A=
      if (serializers[child.tagName.toLowerCase()])=0A=
        elements.push(Element.extend(child));=0A=
      return elements;=0A=
    })=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) {return element.tabIndex}).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return /^(?:input|select|textarea)$/i.test(element.tagName);=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !(/^(?:button|reset|submit)$/i.test(element.type))))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, value) {=0A=
    if (Object.isUndefined(value))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, currentValue, single =3D !Object.isArray(value);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        currentValue =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (currentValue =3D=3D value) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D value.include(currentValue);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
(function() {=0A=
=0A=
  var Event =3D {=0A=
    KEY_BACKSPACE: 8,=0A=
    KEY_TAB:       9,=0A=
    KEY_RETURN:   13,=0A=
    KEY_ESC:      27,=0A=
    KEY_LEFT:     37,=0A=
    KEY_UP:       38,=0A=
    KEY_RIGHT:    39,=0A=
    KEY_DOWN:     40,=0A=
    KEY_DELETE:   46,=0A=
    KEY_HOME:     36,=0A=
    KEY_END:      35,=0A=
    KEY_PAGEUP:   33,=0A=
    KEY_PAGEDOWN: 34,=0A=
    KEY_INSERT:   45,=0A=
=0A=
    cache: {}=0A=
  };=0A=
=0A=
  var docEl =3D document.documentElement;=0A=
  var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED =3D 'onmouseenter' in docEl=0A=
    && 'onmouseleave' in docEl;=0A=
=0A=
  var _isButton;=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D {0: 1, 1: 4, 2: 2};=0A=
    _isButton =3D function(event, code) {=0A=
      return event.button =3D=3D=3D buttonMap[code];=0A=
    };=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    _isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0:return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1:return event.which =3D=3D 1 && event.metaKey;=0A=
        default:return false;=0A=
      }=0A=
    };=0A=
  } else {=0A=
    _isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  function isLeftClick(event)   {return _isButton(event, 0)}=0A=
=0A=
  function isMiddleClick(event) {return _isButton(event, 1)}=0A=
=0A=
  function isRightClick(event)  {return _isButton(event, 2)}=0A=
=0A=
  function element(event) {=0A=
    event =3D Event.extend(event);=0A=
=0A=
    var node =3D event.target, type =3D event.type,=0A=
     currentTarget =3D event.currentTarget;=0A=
=0A=
    if (currentTarget && currentTarget.tagName) {=0A=
      if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||=0A=
        (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'=0A=
          && currentTarget.type =3D=3D=3D 'radio'))=0A=
            node =3D currentTarget;=0A=
    }=0A=
=0A=
    if (node.nodeType =3D=3D Node.TEXT_NODE)=0A=
      node =3D node.parentNode;=0A=
=0A=
    return Element.extend(node);=0A=
  }=0A=
=0A=
  function findElement(event, expression) {=0A=
    var element =3D Event.element(event);=0A=
    if (!expression) return element;=0A=
    var elements =3D [element].concat(element.ancestors());=0A=
    return Selector.findElement(elements, expression, 0);=0A=
  }=0A=
=0A=
  function pointer(event) {=0A=
    return {x: pointerX(event), y: pointerY(event)};=0A=
  }=0A=
=0A=
  function pointerX(event) {=0A=
    var docElement =3D document.documentElement,=0A=
     body =3D document.body || {scrollLeft: 0};=0A=
=0A=
    return event.pageX || (event.clientX +=0A=
      (docElement.scrollLeft || body.scrollLeft) -=0A=
      (docElement.clientLeft || 0));=0A=
  }=0A=
=0A=
  function pointerY(event) {=0A=
    var docElement =3D document.documentElement,=0A=
     body =3D document.body || {scrollTop: 0};=0A=
=0A=
    return  event.pageY || (event.clientY +=0A=
       (docElement.scrollTop || body.scrollTop) -=0A=
       (docElement.clientTop || 0));=0A=
  }=0A=
=0A=
=0A=
  function stop(event) {=0A=
    Event.extend(event);=0A=
    event.preventDefault();=0A=
    event.stopPropagation();=0A=
=0A=
    event.stopped =3D true;=0A=
  }=0A=
=0A=
  Event.Methods =3D {=0A=
    isLeftClick: isLeftClick,=0A=
    isMiddleClick: isMiddleClick,=0A=
    isRightClick: isRightClick,=0A=
=0A=
    element: element,=0A=
    findElement: findElement,=0A=
=0A=
    pointer: pointer,=0A=
    pointerX: pointerX,=0A=
    pointerY: pointerY,=0A=
=0A=
    stop: stop=0A=
  };=0A=
=0A=
=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    function _relatedTarget(event) {=0A=
      var element;=0A=
      switch (event.type) {=0A=
        case 'mouseover':element =3D event.fromElement;break;=0A=
        case 'mouseout':element =3D event.toElement;break;=0A=
        default:return null;=0A=
      }=0A=
      return Element.extend(element);=0A=
    }=0A=
=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() {this.cancelBubble =3D true},=0A=
      preventDefault:  function() {this.returnValue =3D false},=0A=
      inspect: function() {return '[object Event]'}=0A=
    });=0A=
=0A=
    Event.extend =3D function(event, element) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
=0A=
      Object.extend(event, {=0A=
        target: event.srcElement || element,=0A=
        relatedTarget: _relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
  } else {=0A=
    Event.prototype =3D window.Event.prototype || =
document.createEvent('HTMLEvents').__proto__;=0A=
    Object.extend(Event.prototype, methods);=0A=
    Event.extend =3D Prototype.K;=0A=
  }=0A=
=0A=
  function _createResponder(element, eventName, handler) {=0A=
    var registry =3D Element.retrieve(element, =
'prototype_event_registry');=0A=
=0A=
    if (Object.isUndefined(registry)) {=0A=
      CACHE.push(element);=0A=
      registry =3D Element.retrieve(element, 'prototype_event_registry', =
$H());=0A=
    }=0A=
=0A=
    var respondersForEvent =3D registry.get(eventName);=0A=
    if (Object.isUndefined(respondersForEvent)) {=0A=
      respondersForEvent =3D [];=0A=
      registry.set(eventName, respondersForEvent);=0A=
    }=0A=
=0A=
    if (respondersForEvent.pluck('handler').include(handler)) return =
false;=0A=
=0A=
    var responder;=0A=
    if (eventName.include(":")) {=0A=
      responder =3D function(event) {=0A=
        if (Object.isUndefined(event.eventName))=0A=
          return false;=0A=
=0A=
        if (event.eventName !=3D=3D eventName)=0A=
          return false;=0A=
=0A=
        Event.extend(event, element);=0A=
        handler.call(element, event);=0A=
      };=0A=
    } else {=0A=
      if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED &&=0A=
       (eventName =3D=3D=3D "mouseenter" || eventName =3D=3D=3D =
"mouseleave")) {=0A=
        if (eventName =3D=3D=3D "mouseenter" || eventName =3D=3D=3D =
"mouseleave") {=0A=
          responder =3D function(event) {=0A=
            Event.extend(event, element);=0A=
=0A=
            var parent =3D event.relatedTarget;=0A=
            while (parent && parent !=3D=3D element) {=0A=
              try {parent =3D parent.parentNode;}=0A=
              catch(e) {parent =3D element;}=0A=
            }=0A=
=0A=
            if (parent =3D=3D=3D element) return;=0A=
=0A=
            handler.call(element, event);=0A=
          };=0A=
        }=0A=
      } else {=0A=
        responder =3D function(event) {=0A=
          Event.extend(event, element);=0A=
          handler.call(element, event);=0A=
        };=0A=
      }=0A=
    }=0A=
=0A=
    responder.handler =3D handler;=0A=
    respondersForEvent.push(responder);=0A=
    return responder;=0A=
  }=0A=
=0A=
  function _destroyCache() {=0A=
    for (var i =3D 0, length =3D CACHE.length; i < length; i++) {=0A=
      Event.stopObserving(CACHE[i]);=0A=
      CACHE[i] =3D null;=0A=
    }=0A=
  }=0A=
=0A=
  var CACHE =3D [];=0A=
=0A=
  if (Prototype.Browser.IE)=0A=
    window.attachEvent('onunload', _destroyCache);=0A=
=0A=
  if (Prototype.Browser.WebKit)=0A=
    window.addEventListener('unload', Prototype.emptyFunction, false);=0A=
=0A=
=0A=
  var _getDOMEventName =3D Prototype.K;=0A=
=0A=
  if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED) {=0A=
    _getDOMEventName =3D function(eventName) {=0A=
      var translations =3D {mouseenter: "mouseover", mouseleave: =
"mouseout"};=0A=
      return eventName in translations ? translations[eventName] : =
eventName;=0A=
    };=0A=
  }=0A=
=0A=
  function observe(element, eventName, handler) {=0A=
    element =3D $(element);=0A=
=0A=
    var responder =3D _createResponder(element, eventName, handler);=0A=
=0A=
    if (!responder) return element;=0A=
=0A=
    if (eventName.include(':')) {=0A=
      if (element.addEventListener)=0A=
        element.addEventListener("dataavailable", responder, false);=0A=
      else {=0A=
        element.attachEvent("ondataavailable", responder);=0A=
        element.attachEvent("onfilterchange", responder);=0A=
      }=0A=
    } else {=0A=
      var actualEventName =3D _getDOMEventName(eventName);=0A=
=0A=
      if (element.addEventListener)=0A=
        element.addEventListener(actualEventName, responder, false);=0A=
      else=0A=
        element.attachEvent("on" + actualEventName, responder);=0A=
    }=0A=
=0A=
    return element;=0A=
  }=0A=
=0A=
  function stopObserving(element, eventName, handler) {=0A=
    element =3D $(element);=0A=
=0A=
    var registry =3D Element.retrieve(element, =
'prototype_event_registry');=0A=
=0A=
    if (Object.isUndefined(registry)) return element;=0A=
=0A=
    if (eventName && !handler) {=0A=
      var responders =3D registry.get(eventName);=0A=
=0A=
      if (Object.isUndefined(responders)) return element;=0A=
=0A=
      responders.each( function(r) {=0A=
        Element.stopObserving(element, eventName, r.handler);=0A=
      });=0A=
      return element;=0A=
    } else if (!eventName) {=0A=
      registry.each( function(pair) {=0A=
        var eventName =3D pair.key, responders =3D pair.value;=0A=
=0A=
        responders.each( function(r) {=0A=
          Element.stopObserving(element, eventName, r.handler);=0A=
        });=0A=
      });=0A=
      return element;=0A=
    }=0A=
=0A=
    var responders =3D registry.get(eventName);=0A=
=0A=
    if (!responders) return;=0A=
=0A=
    var responder =3D responders.find( function(r) {return r.handler =
=3D=3D=3D handler;});=0A=
    if (!responder) return element;=0A=
=0A=
    var actualEventName =3D _getDOMEventName(eventName);=0A=
=0A=
    if (eventName.include(':')) {=0A=
      if (element.removeEventListener)=0A=
        element.removeEventListener("dataavailable", responder, false);=0A=
      else {=0A=
        element.detachEvent("ondataavailable", responder);=0A=
        element.detachEvent("onfilterchange",  responder);=0A=
      }=0A=
    } else {=0A=
      if (element.removeEventListener)=0A=
        element.removeEventListener(actualEventName, responder, false);=0A=
      else=0A=
        element.detachEvent('on' + actualEventName, responder);=0A=
    }=0A=
=0A=
    registry.set(eventName, responders.without(responder));=0A=
=0A=
    return element;=0A=
  }=0A=
=0A=
  function fire(element, eventName, memo, bubble) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isUndefined(bubble))=0A=
      bubble =3D true;=0A=
=0A=
    if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
      element =3D document.documentElement;=0A=
=0A=
    var event;=0A=
    if (document.createEvent) {=0A=
      event =3D document.createEvent('HTMLEvents');=0A=
      event.initEvent('dataavailable', true, true);=0A=
    } else {=0A=
      event =3D document.createEventObject();=0A=
      event.eventType =3D bubble ? 'ondataavailable' : 'onfilterchange';=0A=
    }=0A=
=0A=
    event.eventName =3D eventName;=0A=
    event.memo =3D memo || { };=0A=
=0A=
    if (document.createEvent)=0A=
      element.dispatchEvent(event);=0A=
    else=0A=
      element.fireEvent(event.eventType, event);=0A=
=0A=
    return Event.extend(event);=0A=
  }=0A=
=0A=
=0A=
  Object.extend(Event, Event.Methods);=0A=
=0A=
  Object.extend(Event, {=0A=
    fire:          fire,=0A=
    observe:       observe,=0A=
    stopObserving: stopObserving=0A=
  });=0A=
=0A=
  Element.addMethods({=0A=
    fire:          fire,=0A=
=0A=
    observe:       observe,=0A=
=0A=
    stopObserving: stopObserving=0A=
  });=0A=
=0A=
  Object.extend(document, {=0A=
    fire:          fire.methodize(),=0A=
=0A=
    observe:       observe.methodize(),=0A=
=0A=
    stopObserving: stopObserving.methodize(),=0A=
=0A=
    loaded:        false=0A=
  });=0A=
=0A=
  if (window.Event) Object.extend(window.Event, Event);=0A=
  else window.Event =3D Event;=0A=
})();=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards, John Resig, and Diego Perini. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearTimeout(timer);=0A=
    document.loaded =3D true;=0A=
    document.fire('dom:loaded');=0A=
  }=0A=
=0A=
  function checkReadyState() {=0A=
    if (document.readyState =3D=3D=3D 'complete') {=0A=
      document.stopObserving('readystatechange', checkReadyState);=0A=
      fireContentLoadedEvent();=0A=
    }=0A=
  }=0A=
=0A=
  function pollDoScroll() {=0A=
    try {document.documentElement.doScroll('left');}=0A=
    catch(e) {=0A=
      timer =3D pollDoScroll.defer();=0A=
      return;=0A=
    }=0A=
    fireContentLoadedEvent();=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    document.addEventListener('DOMContentLoaded', =
fireContentLoadedEvent, false);=0A=
  } else {=0A=
    document.observe('readystatechange', checkReadyState);=0A=
    if (window =3D=3D top)=0A=
      timer =3D pollDoScroll.defer();=0A=
  }=0A=
=0A=
  Event.observe(window, 'load', fireContentLoadedEvent);=0A=
})();=0A=
=0A=
Element.addMethods();=0A=
=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D {display: Element.toggle};=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
var Position =3D {=0A=
  includeScrollOffsets: false,=0A=
=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// Contributors:=0A=
//  Justin Palmer (http://encytemedia.com/)=0A=
//  Mark Pilgrim (http://diveintomark.org/)=0A=
//  Martin Bialasinki=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// converts rgb() and #xxx to #xxxxxx format,=0A=
// returns self (or first argument) if not convertable=0A=
String.prototype.parseColor =3D function() {=0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {=0A=
    var cols =3D this.slice(4,this.length-1).split(',');=0A=
    var i=3D0;do {color +=3D parseInt(cols[i]).toColorPart()} while =
(++i<3);=0A=
  } else {=0A=
    if (this.slice(0,1) =3D=3D '#') {=0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();=0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();=0A=
    }=0A=
  }=0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?=0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);=0A=
  element.setStyle({fontSize: (percent/100) + 'em'});=0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + .5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;=0A=
    },=0A=
    pulse: function(pos, pulses) {=0A=
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;=0A=
    },=0A=
    spring: function(pos) {=0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));=0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
=0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character),=0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') ||=0A=
        Object.isFunction(element)) &&=0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
=0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, {delay: index * =
options.speed + masterDelay}));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: {position:'end', scope:(element.id || 'global'), limit: 1}=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ?=0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;=0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
=0A=
    var position =3D Object.isString(effect.options.queue) ?=0A=
      effect.options.queue : effect.options.queue.position;=0A=
=0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect=0A=
        this.effects.findAll(function(e){return =
e.state=3D=3D'idle'}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
=0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
=0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) {return =
e=3D=3Deffect});=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)=0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
=0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
=0A=
    this.render =3D (function() {=0A=
      function dispatch(effect, eventName) {=0A=
        if (effect.options[eventName + 'Internal'])=0A=
          effect.options[eventName + 'Internal'](effect);=0A=
        if (effect.options[eventName])=0A=
          effect.options[eventName](effect);=0A=
      }=0A=
=0A=
      return function(pos) {=0A=
        if (this.state =3D=3D=3D "idle") {=0A=
          this.state =3D "running";=0A=
          dispatch(this, 'beforeSetup');=0A=
          if (this.setup) this.setup();=0A=
          dispatch(this, 'afterSetup');=0A=
        }=0A=
        if (this.state =3D=3D=3D "running") {=0A=
          pos =3D (this.options.transition(pos) * this.fromToDelta) + =
this.options.from;=0A=
          this.position =3D pos;=0A=
          dispatch(this, 'beforeUpdate');=0A=
          if (this.update) this.update(pos);=0A=
          dispatch(this, 'afterUpdate');=0A=
        }=0A=
      };=0A=
    })();=0A=
=0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish();=0A=
        this.event('afterFinish');=0A=
        return;=0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(),=0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) :=0A=
      function(value) {object[method] =3D value};=0A=
    this.start(Object.extend({from: from, to: to}, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({duration: 0}, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element,=0A=
    Object.extend({x: toLeft, y: toTop}, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
=0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
=0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
=0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
=0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
=0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType});=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({startcolor: '#ffff99'}, arguments[1] =
|| { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') =
{this.cancel();return;}=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16)}.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i]}.bind=
(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart());}.bin=
d(this))});=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
  scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
  elementOffsets =3D $(element).cumulativeOffset();=0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1],=0A=
    options,=0A=
    function(p){scrollTo(scrollOffsets.left, p.round());}=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) {=0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity});=0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show();=0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    opacity: element.getInlineOpacity(),=0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200,=0A=
      {sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true}),=0A=
     new Effect.Opacity(element, {sync: true, to: 0.0} ) ],=0A=
     Object.extend({duration: 1.0,=0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element);=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle);}=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({scaleContent: false,=0A=
      scaleX: false,=0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, {=0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) {=0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      });=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity()};=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true}),=0A=
      new Effect.Opacity(element, {sync: true, to: 0.0}) ],=0A=
    Object.extend(=0A=
      {duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        }=0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left')};=0A=
    return new Effect.Move(element,=0A=
      {x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }});}});}});}});}});}});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px'});=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});}=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px'});=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish=0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, {=0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping();=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity()};=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, {sync: true, to: 1.0, from: =
0.0, transition: options.opacityTransition}),=0A=
          new Effect.Move(effect.element, {x: moveX, y: moveY, sync: =
true, transition: options.moveTransition}),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: {originalHeight: dims.height, originalWidth: =
dims.width},=0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show();=0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le);=0A=
             }=0A=
           }, options)=0A=
      );=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity()};=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, {sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition}),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, {sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, {x: moveX, y: moveY, sync: true, =
transition: options.moveTransition})=0A=
    ], Object.extend({=0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping();=0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle);}=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { },=0A=
    oldOpacity =3D element.getInlineOpacity(),=0A=
    transition =3D options.transition || Effect.Transitions.linear,=0A=
    reverser   =3D function(pos){=0A=
      return 1 - =
transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);=0A=
    };=0A=
=0A=
  return new Effect.Opacity(element,=0A=
    Object.extend(Object.extend({duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) =
{effect.element.setStyle({opacity: oldOpacity});}=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height};=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, {=0A=
      scaleContent: false,=0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      }});=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
=0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        };=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
=0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 );=0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return {=0A=
        style: property.camelize(),=0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0),=0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      );=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D=0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) +=0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: {style: data}=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){return new effect(e, =
Object.extend({sync:true}, options))});=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' +=0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
=0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
=0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]);=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, =
property) {=0A=
      results[property] =3D css[property];=0A=
      return results;=0A=
    });=0A=
    if (!styles.opacity) styles.opacity =3D element.getOpacity();=0A=
    return styles;=0A=
  };=0A=
}=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({style: style}, arguments[2] =
|| { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) {=0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    };=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each(=0A=
  function(f) {Effect.Methods[f] =3D Element[f];}=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);// script.aculo.us builder.js v1.8.0, =
Tue Nov 06 15:01:40 +0300 2007=0A=
=0A=
// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
var Builder =3D {=0A=
  NODEMAP: {=0A=
    AREA: 'map',=0A=
    CAPTION: 'table',=0A=
    COL: 'table',=0A=
    COLGROUP: 'table',=0A=
    LEGEND: 'fieldset',=0A=
    OPTGROUP: 'select',=0A=
    OPTION: 'select',=0A=
    PARAM: 'object',=0A=
    TBODY: 'table',=0A=
    TD: 'table',=0A=
    TFOOT: 'table',=0A=
    TH: 'table',=0A=
    THEAD: 'table',=0A=
    TR: 'table'=0A=
  },=0A=
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently =
broken,=0A=
  //       due to a Firefox bug=0A=
  node: function(elementName) {=0A=
    elementName =3D elementName.toUpperCase();=0A=
    =0A=
    // try innerHTML approach=0A=
    var parentTag =3D this.NODEMAP[elementName] || 'div';=0A=
    var parentElement =3D document.createElement(parentTag);=0A=
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707=0A=
      parentElement.innerHTML =3D "<" + elementName + "></" + =
elementName + ">";=0A=
    } catch(e) {}=0A=
    var element =3D parentElement.firstChild || null;=0A=
      =0A=
    // see if browser added wrapping tags=0A=
    if(element && (element.tagName.toUpperCase() !=3D elementName))=0A=
      element =3D element.getElementsByTagName(elementName)[0];=0A=
    =0A=
    // fallback to createElement approach=0A=
    if(!element) element =3D document.createElement(elementName);=0A=
    =0A=
    // abort if nothing could be created=0A=
    if(!element) return;=0A=
=0A=
    // attributes (or text)=0A=
    if(arguments[1])=0A=
      if(this._isStringOrNumber(arguments[1]) ||=0A=
        (arguments[1] instanceof Array) ||=0A=
        arguments[1].tagName) {=0A=
          this._children(element, arguments[1]);=0A=
        } else {=0A=
          var attrs =3D this._attributes(arguments[1]);=0A=
          if(attrs.length) {=0A=
            try { // prevent IE "feature": =
http://dev.rubyonrails.org/ticket/2707=0A=
              parentElement.innerHTML =3D "<" +elementName + " " +=0A=
                attrs + "></" + elementName + ">";=0A=
            } catch(e) {}=0A=
            element =3D parentElement.firstChild || null;=0A=
            // workaround firefox 1.0.X bug=0A=
            if(!element) {=0A=
              element =3D document.createElement(elementName);=0A=
              for(attr in arguments[1]) =0A=
                element[attr =3D=3D 'class' ? 'className' : attr] =3D =
arguments[1][attr];=0A=
            }=0A=
            if(element.tagName.toUpperCase() !=3D elementName)=0A=
              element =3D =
parentElement.getElementsByTagName(elementName)[0];=0A=
          }=0A=
        } =0A=
=0A=
    // text, or array of children=0A=
    if(arguments[2])=0A=
      this._children(element, arguments[2]);=0A=
=0A=
     return element;=0A=
  },=0A=
  _text: function(text) {=0A=
     return document.createTextNode(text);=0A=
  },=0A=
=0A=
  ATTR_MAP: {=0A=
    'className': 'class',=0A=
    'htmlFor': 'for'=0A=
  },=0A=
=0A=
  _attributes: function(attributes) {=0A=
    var attrs =3D [];=0A=
    for(attribute in attributes)=0A=
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] =
: attribute) +=0A=
          '=3D"' + =
attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');=0A=
    return attrs.join(" ");=0A=
  },=0A=
  _children: function(element, children) {=0A=
    if(children.tagName) {=0A=
      element.appendChild(children);=0A=
      return;=0A=
    }=0A=
    if(typeof children=3D=3D'object') { // array can hold nodes and text=0A=
      children.flatten().each( function(e) {=0A=
        if(typeof e=3D=3D'object')=0A=
          element.appendChild(e);=0A=
        else=0A=
          if(Builder._isStringOrNumber(e))=0A=
            element.appendChild(Builder._text(e));=0A=
      });=0A=
    } else=0A=
      if(Builder._isStringOrNumber(children))=0A=
        element.appendChild(Builder._text(children));=0A=
  },=0A=
  _isStringOrNumber: function(param) {=0A=
    return(typeof param=3D=3D'string' || typeof param=3D=3D'number');=0A=
  },=0A=
  build: function(html) {=0A=
    var element =3D this.node('div');=0A=
    $(element).update(html.strip());=0A=
    return element.down();=0A=
  },=0A=
  dump: function(scope) { =0A=
    if(typeof scope !=3D 'object' && typeof scope !=3D 'function') scope =
=3D window; //global scope =0A=
  =0A=
    var tags =3D ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT =
BDO BIG BLOCKQUOTE BODY " +=0A=
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR =
DIV DL DT EM FIELDSET " +=0A=
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME =
IMG INPUT INS ISINDEX "+=0A=
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT =
OL OPTGROUP OPTION P "+=0A=
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE =
SUB SUP TABLE TBODY TD "+=0A=
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);=0A=
  =0A=
    tags.each( function(tag){ =0A=
      scope[tag] =3D function() { =0A=
        return Builder.node.apply(Builder, [tag].concat($A(arguments))); =
 =0A=
      } =0A=
    });=0A=
  }=0A=
};// Tooltip Object=0A=
var Tooltip =3D Class.create();=0A=
Tooltip.prototype =3D {=0A=
  initialize: function(el, options) {=0A=
    this.el =3D $(el);=0A=
    this.initialized =3D false;=0A=
    this.setOptions(options);=0A=
    =0A=
    // Event handlers=0A=
    this.showEvent =3D this.show.bindAsEventListener(this);=0A=
    this.hideEvent =3D this.hide.bindAsEventListener(this);=0A=
    this.updateEvent =3D this.update.bindAsEventListener(this);=0A=
    Event.observe(this.el, "mouseover", this.showEvent );=0A=
    Event.observe(this.el, "mouseout", this.hideEvent );=0A=
    =0A=
    // Removing title from DOM element to avoid showing it=0A=
    this.content =3D this.el.title;=0A=
    this.el.title =3D "";=0A=
  },=0A=
  setOptions: function(options) {=0A=
    this.options =3D {=0A=
      backgroundColor: '#999', // Default background color=0A=
      borderColor: '#666', // Default border color=0A=
      textColor: '', // Default text color (use CSS value)=0A=
      textShadowColor: '', // Default text shadow color (use CSS value)=0A=
      maxWidth: 250,	// Default tooltip width=0A=
      align: "left", // Default align=0A=
      delay: 250, // Default delay before tooltip appears in ms=0A=
      mouseFollow: false, // Tooltips follows the mouse moving=0A=
      opacity: .75, // Default tooltips opacity=0A=
      appearDuration: .25, // Default appear duration in sec=0A=
      hideDuration: .25 // Default disappear duration in sec=0A=
    };=0A=
    Object.extend(this.options, options || {});=0A=
  },=0A=
  show: function(e) {=0A=
    this.xCord =3D Event.pointerX(e);=0A=
    this.yCord =3D Event.pointerY(e);=0A=
    if(!this.initialized)=0A=
      this.timeout =3D window.setTimeout(this.appear.bind(this), =
this.options.delay);=0A=
  },=0A=
  hide: function(e) {=0A=
    if(this.initialized) {=0A=
      this.appearingFX.cancel();=0A=
      if(this.options.mouseFollow)=0A=
        Event.stopObserving(this.el, "mousemove", this.updateEvent);=0A=
      new Effect.Fade(this.tooltip, {duration: =
this.options.hideDuration, afterFinish: function() =
{Element.remove(this.tooltip)}.bind(this)});=0A=
    }=0A=
    this._clearTimeout(this.timeout);=0A=
    =0A=
    this.initialized =3D false;=0A=
  },=0A=
  update: function(e){=0A=
    this.xCord =3D Event.pointerX(e);=0A=
    this.yCord =3D Event.pointerY(e);=0A=
    this.setup();=0A=
  },=0A=
  appear: function() {=0A=
    // Building tooltip container=0A=
    this.tooltip =3D Builder.node("div", {className: "tooltip", style: =
"display: none;"}, [=0A=
      Builder.node("div", {className:"xtop"}, [=0A=
        Builder.node("div", {className:"xb1", style:"background-color:" =
+ this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb2", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb3", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb4", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"})=0A=
      ]),=0A=
      Builder.node("div", {className: "xboxcontent", style: =
"background-color:" + this.options.backgroundColor + =0A=
        "; border-color:" + this.options.borderColor + =0A=
        ((this.options.textColor !=3D '') ? "; color:" + =
this.options.textColor : "") + =0A=
        ((this.options.textShadowColor !=3D '') ? "; text-shadow:2px 2px =
0" + this.options.textShadowColor + ";" : "")}, this.content), =0A=
      Builder.node("div", {className:"xbottom"}, [=0A=
        Builder.node("div", {className:"xb4", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb3", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb2", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb1", style:"background-color:" =
+ this.options.borderColor + ";"})=0A=
      ]),=0A=
    ]);=0A=
    document.body.insertBefore(this.tooltip, =
document.body.childNodes[0]);=0A=
    =0A=
    Element.extend(this.tooltip); // IE needs element to be manually =
extended=0A=
    this.options.width =3D this.tooltip.getWidth();=0A=
    this.tooltip.style.width =3D this.options.width + 'px'; // IE7 needs =
width to be defined=0A=
    =0A=
    this.setup();=0A=
    =0A=
    if(this.options.mouseFollow)=0A=
      Event.observe(this.el, "mousemove", this.updateEvent);=0A=
    =0A=
    this.initialized =3D true;=0A=
    this.appearingFX =3D new Effect.Appear(this.tooltip, {duration: =
this.options.appearDuration, to: this.options.opacity});=0A=
  },=0A=
  setup: function(){=0A=
    // If content width is more then allowed max width, set width to max=0A=
    if(this.options.width > this.options.maxWidth) {=0A=
      this.options.width =3D this.options.maxWidth;=0A=
      this.tooltip.style.width =3D this.options.width + 'px';=0A=
    }=0A=
    =0A=
    // Tooltip doesn't fit the current document dimensions=0A=
    if(this.xCord + this.options.width >=3D =
Element.getWidth(document.body)) {=0A=
      this.options.align =3D "right";=0A=
      this.xCord =3D this.xCord - this.options.width + 20;=0A=
    }=0A=
    =0A=
    this.tooltip.style.left =3D this.xCord - 7 + "px";=0A=
    this.tooltip.style.top =3D this.yCord + 12 + "px";=0A=
  },=0A=
  stop: function() {=0A=
    this.hide();=0A=
    Event.stopObserving(this.el, "mouseover", this.showEvent );=0A=
    Event.stopObserving(this.el, "mouseout", this.hideEvent );          =0A=
    Event.stopObserving(this.el, "mousemove", this.updateEvent);=0A=
  },        =0A=
  _clearTimeout: function(timer) {=0A=
    clearTimeout(timer);=0A=
    clearInterval(timer);=0A=
    return null;=0A=
  }=0A=
};//modified by Quake (added tooltip integration and remove some unused =
code)=0A=
=0A=
/**=0A=
 * modified by badqiu (badqiu(a)gmail.com)=0A=
 * blog: http://badqiu.javaeye.com=0A=
 * Project Home: http://code.google.com/p/rapid-validation/=0A=
 */=0A=
=0A=
/*=0A=
 * Really easy field validation with Prototype=0A=
 * =
http://tetlaw.id.au/view/blog/really-easy-field-validation-with-prototype=0A=
 * Andrew Tetlaw=0A=
 * Version 1.5.3 (2006-07-15)=0A=
 * =0A=
 * Copyright (c) 2006 Andrew Tetlaw=0A=
 * http://www.opensource.org/licenses/mit-license.php=0A=
 */=0A=
=0A=
var ValidationDefaultOptions =3D function(){};=0A=
ValidationDefaultOptions.prototype =3D {=0A=
  onSubmit : true, =
//=E6=98=AF=E5=90=A6=E7=9B=91=E5=90=ACform=E7=9A=84submit=E4=BA=8B=E4=BB=B6=0A=
  stopOnFirst : false, =
//=E8=A1=A8=E5=8D=95=E9=AA=8C=E8=AF=81=E6=97=B6=E5=81=9C=E7=95=99=E5=9C=A8=
=E7=AC=AC=E4=B8=80=E4=B8=AA=E9=AA=8C=E8=AF=81=E7=9A=84=E5=9C=B0=E6=96=B9,=
=E4=B8=8D=E7=BB=A7=E7=BB=AD=E9=AA=8C=E8=AF=81=E4=B8=8B=E5=8E=BB=0A=
  immediate : true, =
//=E6=98=AF=E5=90=A6=E5=AE=9E=E6=97=B6=E6=A3=80=E6=9F=A5=E6=95=B0=E6=8D=AE=
=E7=9A=84=E5=90=88=E6=B3=95=E6=80=A7=0A=
  focusOnError : true, =
//=E6=98=AF=E5=90=A6=E5=87=BA=E9=94=99=E6=97=B6=E5=B0=86=E5=85=89=E6=A0=87=
=E6=8C=87=E9=92=88=E7=A7=BB=E5=88=B0=E5=87=BA=E9=94=99=E7=9A=84=E8=BE=93=E5=
=85=A5=E6=A1=86=E4=B8=8A=0A=
  useTitles : false, =
//=E6=98=AF=E5=90=A6=E4=BD=BF=E7=94=A8input=E7=9A=84title=E5=B1=9E=E6=80=A7=
=E4=BD=9C=E4=B8=BA=E5=87=BA=E9=94=99=E6=97=B6=E7=9A=84=E6=8F=90=E7=A4=BA=E4=
=BF=A1=E6=81=AF=0A=
  onFormValidate : function(result, form) =
{},//Form=E9=AA=8C=E8=AF=81=E6=97=B6=E7=9A=84=E5=9B=9E=E8=B0=83=E5=87=BD=E6=
=95=B0=0A=
  onElementValidate : function(result, elm) {} =
//=E6=9F=90=E4=B8=AAinput=E9=AA=8C=E8=AF=81=E6=97=B6=E7=9A=84=E5=9B=9E=E8=
=B0=83=E5=87=BD=E6=95=B0=0A=
};=0A=
=0A=
var ValidatorDefaultOptions =3D function(){};=0A=
ValidatorDefaultOptions.prototype =3D {=0A=
  ignoreEmptyValue : true, =
//=E6=98=AF=E5=90=A6=E5=BF=BD=E7=95=A5=E7=A9=BA=E5=80=BC=0A=
  depends : [] //=E7=9B=B8=E5=85=B3=E4=BE=9D=E8=B5=96=E9=A1=B9=0A=
};=0A=
 =0A=
Validator =3D Class.create();=0A=
=0A=
ValidationUtils =3D {=0A=
  getReferenceForm : function(elm) {=0A=
    while(elm && elm.tagName !=3D 'BODY') {=0A=
      if(elm.tagName =3D=3D 'FORM') return elm;=0A=
      elm =3D elm.parentNode;=0A=
    }=0A=
    return null;=0A=
  },=0A=
  getInputValue : function(elm) {=0A=
    var elm =3D $(elm);=0A=
    if(elm.type.toLowerCase() =3D=3D 'file') {=0A=
      return elm.value;=0A=
    }else {=0A=
      return $F(elm);=0A=
    }=0A=
  },=0A=
  getElmID : function(elm) {=0A=
    return elm.id ? elm.id : elm.name;=0A=
  },=0A=
  format : function(str,args) {=0A=
    args =3D args || [];=0A=
    ValidationUtils.assert(args.constructor =3D=3D =
Array,"ValidationUtils.format() arguement 'args' must is Array");=0A=
    var result =3D str;=0A=
    for (var i =3D 0; i < args.length; i++){=0A=
      result =3D result.replace(/%s/, args[i]);	=0A=
    }=0A=
    return result;=0A=
  },=0A=
  // =
=E9=80=9A=E8=BF=87classname=E4=BC=A0=E9=80=92=E7=9A=84=E5=8F=82=E6=95=B0=E5=
=BF=85=E9=A1=BB=E9=80=9A=E8=BF=87'-'=E5=88=86=E9=9A=94=E5=90=84=E4=B8=AA=E5=
=8F=82=E6=95=B0=0A=
  // =
=E8=BF=94=E5=9B=9E=E5=80=BC=E5=8C=85=E5=90=AB=E4=B8=80=E4=B8=AA=E5=8F=82=E6=
=95=B0singleArgument,=E4=BE=8B:validate-pattern-/[a-c]/gi,singleArgument=E5=
=80=BC=E4=B8=BA/[a-c]/gi=0A=
  getArgumentsByClassName : function(prefix,className) {=0A=
    if(!className || !prefix)=0A=
      return [];=0A=
    var pattern =3D new RegExp(prefix+'-(\\S+)');=0A=
    var matchs =3D className.match(pattern);=0A=
    if(!matchs)=0A=
      return [];=0A=
    var results =3D [];=0A=
    results.singleArgument =3D matchs[1];=0A=
    var args =3D  matchs[1].split('-');=0A=
    for(var i =3D 0; i < args.length; i++) {=0A=
      if(args[i] =3D=3D '') {=0A=
        if(i+1 < args.length) args[i+1] =3D '-'+args[i+1];=0A=
      }else{=0A=
        results.push(args[i]);=0A=
      }=0A=
    }=0A=
    return results;=0A=
  },=0A=
  assert : function(condition,message) {=0A=
    var errorMessage =3D message || ("assert failed =
error,condition=3D"+condition);=0A=
    if (!condition) {=0A=
      alert(errorMessage);=0A=
      throw new Error(errorMessage);=0A=
    }else {=0A=
      return condition;=0A=
    }=0A=
  },=0A=
  isDate : function(v,dateFormat) {=0A=
    var MONTH =3D "MM";=0A=
    var DAY =3D "dd";=0A=
    var YEAR =3D "yyyy";=0A=
    var regex =3D =
'^'+dateFormat.replace(YEAR,'\\d{4}').replace(MONTH,'\\d{2}').replace(DAY=
,'\\d{2}')+'$';=0A=
    if(!new RegExp(regex).test(v)) return false;=0A=
=0A=
    var year =3D v.substr(dateFormat.indexOf(YEAR),4);=0A=
    var month =3D v.substr(dateFormat.indexOf(MONTH),2);=0A=
    var day =3D v.substr(dateFormat.indexOf(DAY),2);=0A=
		=0A=
    var d =3D new =
Date(ValidationUtils.format('%s/%s/%s',[year,month,day]));=0A=
    return ( parseInt(month, 10) =3D=3D (1+d.getMonth()) ) && =0A=
      (parseInt(day, 10) =3D=3D d.getDate()) && =0A=
      (parseInt(year, 10) =3D=3D d.getFullYear() );		=0A=
  },=0A=
  getLanguage : function() {=0A=
    var lang =3D null;=0A=
    if (typeof navigator.userLanguage =3D=3D 'undefined')=0A=
      lang =3D navigator.language.toLowerCase();=0A=
    else=0A=
      lang =3D navigator.userLanguage.toLowerCase();=0A=
    return lang;=0A=
  },=0A=
  getMessageSource : function() {=0A=
    var lang =3D ValidationUtils.getLanguage();=0A=
    var messageSource =3D Validator.messageSource['zh-cn'];=0A=
    if(Validator.messageSource[lang]) {=0A=
      messageSource =3D Validator.messageSource[lang];=0A=
    }=0A=
    return messageSource;=0A=
  }=0A=
};=0A=
=0A=
Validator.messages =3D {=0A=
  'validation-failed' : '=E9=AA=8C=E8=AF=81=E5=A4=B1=E8=B4=A5.',=0A=
  'required' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E5=80=BC.',=0A=
  'validate-number' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E6=95=B0=E5=AD=97=
.',=0A=
  'validate-digits' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E6=95=B0=E5=AD=97.',=0A=
  'validate-alpha' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E8=8B=B1=E6=96=87=E5=AD=97=E6=AF=8D.',=0A=
  'validate-alphanum' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E8=8B=B1=E6=96=87=E5=AD=97=E6=AF=8D=E6=88=96=
=E6=98=AF=E6=95=B0=E5=AD=97,=E5=85=B6=E5=AE=83=E5=AD=97=E7=AC=A6=E6=98=AF=
=E4=B8=8D=E5=85=81=E8=AE=B8=E7=9A=84.',=0A=
  'validate-email' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E9=82=AE=E4=BB=B6=
=E5=9C=B0=E5=9D=80,=E5=8F=AA=E8=83=BD=E4=BD=BF=E7=94=A8a-z A-Z 0-9 _ . =
-\',=E5=A6=82 username@example.com=E3=80=82 ',=0A=
  'validate-url' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84URL=E5=9C=B0=E5=9D=
=80.',=0A=
  'validate-currency-dollar' : 'Please enter a valid $ amount. For =
example $100.00 .',=0A=
  'validate-one-required' : =
'=E5=9C=A8=E4=B8=8A=E9=9D=A2=E9=80=89=E9=A1=B9=E8=87=B3=E5=B0=91=E9=80=89=
=E6=8B=A9=E4=B8=80=E4=B8=AA.',=0A=
  'validate-integer' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84=E6=95=B4=E6=95=B0=
',=0A=
  'validate-pattern' : =
'=E5=A1=AB=E5=86=99=E7=9A=84=E5=80=BC=E4=B8=8D=E5=8C=B9=E9=85=8D',=0A=
  'validate-ip' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84IP=E5=9C=B0=E5=9D=80=
',=0A=
  'min-value' : '=E6=9C=80=E5=B0=8F=E5=80=BC=E4=B8=BA%s',=0A=
  'max-value' : '=E6=9C=80=E5=A4=A7=E5=80=BC=E4=B8=BA%s',=0A=
  'min-length' : =
'=E6=9C=80=E5=B0=8F=E9=95=BF=E5=BA=A6=E4=B8=BA%s,=E5=BD=93=E5=89=8D=E9=95=
=BF=E5=BA=A6=E4=B8=BA%s.',=0A=
  'max-length' : =
'=E6=9C=80=E5=A4=A7=E9=95=BF=E5=BA=A6=E4=B8=BA%s,=E5=BD=93=E5=89=8D=E9=95=
=BF=E5=BA=A6=E4=B8=BA%s.',=0A=
  'int-range' : '=E5=A1=AB=E5=86=99=E5=80=BC=E5=BA=94=E8=AF=A5=E4=B8=BA =
%s =E8=87=B3 %s =E7=9A=84=E6=95=B4=E6=95=B0',=0A=
  'float-range' : =
'=E5=A1=AB=E5=86=99=E5=80=BC=E5=BA=94=E8=AF=A5=E4=B8=BA %s =E8=87=B3 %s =
=E7=9A=84=E6=95=B0=E5=AD=97',=0A=
  'length-range' : =
'=E5=A1=AB=E5=86=99=E5=80=BC=E7=9A=84=E9=95=BF=E5=BA=A6=E5=BA=94=E8=AF=A5=
=E5=9C=A8 %s =E8=87=B3 %s =
=E4=B9=8B=E9=97=B4,=E5=BD=93=E5=89=8D=E9=95=BF=E5=BA=A6=E4=B8=BA%s',=0A=
  'equals' : =
'=E4=B8=A4=E6=AC=A1=E5=A1=AB=E5=86=99=E4=B8=8D=E4=B8=80=E8=87=B4,=E8=AF=B7=
=E9=87=8D=E6=96=B0=E5=A1=AB=E5=86=99',=0A=
  'less-than' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=B0=8F=E4=BA=8E=E5=89=8D=E9=9D=A2=E7=9A=84=
=E5=80=BC',=0A=
  'great-than' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=A4=A7=E4=BA=8E=E5=89=8D=E9=9D=A2=E7=9A=84=
=E5=80=BC',=0A=
  'validate-date' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E6=97=A5=E6=9C=9F=
,=E6=A0=BC=E5=BC=8F=E4=B8=BA %s. =E4=BE=8B=E5=A6=82:%s.',=0A=
  'validate-file' : function(v,elm,args,metadata) {=0A=
    return =
ValidationUtils.format("=E6=96=87=E4=BB=B6=E7=B1=BB=E5=9E=8B=E5=BA=94=E8=AF=
=A5=E4=B8=BA[%s]=E5=85=B6=E4=B8=AD=E4=B9=8B=E4=B8=80",[args.join(',')]);=0A=
  },=0A=
  'validate-id-number' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=90=88=E6=B3=95=E7=9A=84=E8=BA=AB=E4=BB=BD=
=E8=AF=81=E5=8F=B7=E7=A0=81',=0A=
  'validate-chinese' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E4=B8=AD=E6=96=87',=0A=
  'validate-phone' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84=E7=94=B5=E8=AF=9D=
=E5=8F=B7=E7=A0=81,=E5=A6=82:021-87654321,=E5=BD=93=E5=89=8D=E9=95=BF=E5=BA=
=A6=E4=B8=BA%s.',=0A=
  'validate-mobile-phone' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84=E6=89=8B=E6=9C=BA=
=E5=8F=B7=E7=A0=81,=E5=BD=93=E5=89=8D=E9=95=BF=E5=BA=A6=E4=B8=BA%s.',=0A=
  'validate-zip' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E9=82=AE=E6=94=BF=
=E7=BC=96=E7=A0=81',=0A=
  'validate-qq' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84QQ=E5=8F=B7=E7=A0=81=
.',=0A=
  'validate-richeditor' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E5=80=BC.',=0A=
  'validate-combobox' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=80=BC=E6=88=96=E9=80=89=E5=8F=96=E5=89=8D=
=E9=9D=A2=E7=9A=84=E9=80=89=E9=A1=B9.',=0A=
  'max-tag' : '=E8=AF=B7=E5=A1=AB=E5=86=991-%s=E4=B8=AATag.'=0A=
};=0A=
=0A=
Validator.bad_words=3D[/fuck/i,/shit/i,/QQ=E7=BE=A4/i,/MSN=E7=BE=A4/i,/=E6=
=B1=82(=E5=8A=A9|=E6=95=91)/,/(=E8=B7=AA|=E8=A3=B8)=E6=B1=82/,/=E6=80=A5=E6=
=80=A5|=E6=88=91=E5=BE=88=E6=80=A5|=E7=B4=A7=E6=80=A5=E5=AF=BB=E6=B1=82/,=
/=E5=9C=A8=E7=BA=BF=E7=AD=89/,/=E6=95=91(=E5=91=BD|=E6=88=91|=E6=80=A5|=E6=
=95=91)/,/=E6=80=A5(!|=EF=BC=81)/,/(=E9=AB=98=E6=89=8B|=E9=AB=98=E4=BA=BA=
|=E5=A4=A7=E8=99=BE|=E5=A4=A7=E4=BE=A0|=E8=BE=BE=E4=BA=BA|=E5=89=8D=E8=BE=
=88|=E5=BF=AB=E6=9D=A5|=E6=B2=A1=E6=9C=89=E4=BA=BA)(=E6=8C=87=E7=82=B9|=E8=
=A7=A3=E7=AD=94|=E5=B8=AE=E5=BF=99|=E5=B8=AE=E5=B8=AE|=E6=8C=87=E6=95=99|=
=E8=B5=90=E6=95=99|=E6=8F=90=E7=82=B9|=E4=B8=8D=E5=90=9D=E8=B5=90=E6=95=99=
|=E5=88=B0=E5=93=AA)/,/(=E6=88=91=E6=98=AF|=E5=B8=AE=E5=B8=AE)(=E6=96=B0=E6=
=89=8B|=E5=B0=8F=E5=BC=9F|=E8=8F=9C=E9=B8=9F)/,/=E5=B8=AE=E5=B8=AE=E5=BF=99=
/, /=E4=B8=87=E5=88=86=E7=81=AB=E6=80=A5/, =
/=E6=88=91=E9=A1=B6|=E9=A1=B6=E4=B8=8A=E5=8E=BB|=E5=A5=BD=E8=B4=B4=E8=A6=81=
=E9=A1=B6|=E5=B8=AE=E9=A1=B6|=E7=9C=8B=E7=9C=8B=E5=85=88|=E9=A1=B6=E4=B8=80=
=E4=B8=8B/,/=E6=9C=89*=E6=B2=A1=E6=9C=89=E4=BA=BA(=E5=9B=9E=E7=AD=94|=E5=B8=
=AE=E5=BF=99|=E5=85=B3=E6=B3=A8|=E7=9F=A5=E9=81=93=E5=95=8A|=E5=9B=9E=E5=A4=
=8D)/,/=E6=95=99=E4=B8=BB|=E8=A3=85B|=E8=A3=8513/,/=E5=85=B3=E6=B3=A8(ing=
|=E4=B8=AD)/i,/=E6=94=B6=E8=97=8F=E5=85=88/,/=E5=85=88=E6=94=B6=E8=97=8F/=
,/=E6=94=B6=E8=97=8F=E4=BA=86/,/=E5=9B=BE=E4=B9=A6=E5=85=BC=E8=81=8C=E4=BD=
=9C=E8=80=85/,/=E8=B0=A2=E8=B0=A2=E6=A5=BC=E4=B8=BB/,/=E4=BC=A0=E6=99=BA=E6=
=92=AD=E5=AE=A2/,/FineReport/i];=0A=
=0A=
Validator.prototype =3D {=0A=
  initialize : function(className, test, options) {=0A=
    this.options =3D Object.extend(new ValidatorDefaultOptions(), =
options || {});=0A=
    this._test =3D test ? test : function(v,elm){return true;};=0A=
    this._error =3D Validator.messages[className] ? =
Validator.messages[className] : Validator.messages['validation-failed'];=0A=
    this.className =3D className;=0A=
    this._dependsTest =3D this._dependsTest.bind(this);=0A=
    this._getDependError =3D this._getDependError.bind(this);=0A=
  },=0A=
  _dependsTest : function(v,elm) {=0A=
    if(this.options.depends && this.options.depends.length > 0) {=0A=
      var dependsResult =3D =
$A(this.options.depends).all(function(depend){=0A=
        return Validation.get(depend).test(v,elm);=0A=
      });=0A=
      return dependsResult;=0A=
    }=0A=
    return true;=0A=
  },=0A=
  test : function(v, elm) {=0A=
    if(!this._dependsTest(v,elm))=0A=
      return false;=0A=
    if(!elm) elm =3D {};=0A=
    return (this.options.ignoreEmptyValue && ((v =3D=3D null) || =
(v.length =3D=3D 0))) || =
this._test(v,elm,ValidationUtils.getArgumentsByClassName(this.className,e=
lm.className),this);=0A=
  },=0A=
  _getDependError : function(v,elm,useTitle) {=0A=
    var dependError =3D null;=0A=
    $A(this.options.depends).any(function(depend){=0A=
      var validation =3D Validation.get(depend);=0A=
      if(!validation.test(v,elm))  {=0A=
        dependError =3D validation.error(v,elm,useTitle);=0A=
        return true;=0A=
      }=0A=
      return false;=0A=
    });=0A=
    return dependError;=0A=
  }, =0A=
  error : function(v,elm,useTitle) {=0A=
    var dependError =3D this._getDependError(v,elm,useTitle);=0A=
    if(dependError !=3D null) return dependError;=0A=
=0A=
    var args  =3D =
ValidationUtils.getArgumentsByClassName(this.className,elm.className);=0A=
    var error =3D this._error;=0A=
    if(typeof error =3D=3D 'string') {=0A=
      if(v) args.push(v.length);=0A=
      error =3D ValidationUtils.format(this._error,args);=0A=
    }else if(typeof error =3D=3D 'function') {=0A=
      error =3D error(v,elm,args,this);=0A=
    }else {=0A=
      alert('property "_error" must type of string or function');=0A=
    }=0A=
    if(!useTitle) useTitle =3D elm.className.indexOf('useTitle') >=3D 0;=0A=
    return useTitle ? ((elm && elm.title) ? elm.title : error) : error;=0A=
  }=0A=
};=0A=
=0A=
var Validation =3D Class.create();=0A=
=0A=
Validation.prototype =3D {=0A=
  initialize : function(form, options){=0A=
    this.options =3D Object.extend(new ValidationDefaultOptions(), =
options || {});=0A=
    this.form =3D $(form);=0A=
    var formId =3D  ValidationUtils.getElmID($(form));=0A=
    Validation.validations[formId] =3D this;=0A=
    if(this.options.onSubmit) =
Event.observe(this.form,'submit',this.onSubmit.bind(this),false);=0A=
    if(this.options.immediate) {=0A=
      var useTitles =3D this.options.useTitles;=0A=
      var callback =3D this.options.onElementValidate;=0A=
      Form.getElements(this.form).each(function(input) { // Thanks Mike!=0A=
        Event.observe(input, 'blur', function(ev) =
{Validation.validateElement(Event.element(ev),{useTitle : useTitles, =
onElementValidate : callback});});=0A=
      });=0A=
    }=0A=
  },=0A=
  onSubmit :  function(ev){=0A=
    if(this.form.spinner && this.form.spinner.visible()) {=0A=
      Event.stop(ev);=0A=
    }else if(!this.validate()) {=0A=
      Event.stop(ev);=0A=
    }else {=0A=
      =
Event.observe(this.form,'submit',function(e){Event.stop(e);}.bind(this.fo=
rm),false);=0A=
      if(this.form.spinner) {=0A=
        this.form.spinner.show();=0A=
      }else{=0A=
        this.form.spinner =3D $(document.createElement("img"));=0A=
        this.form.spinner.className =3D 'spinner_img';=0A=
        this.form.spinner.src =3D =
'http://www.iteye.com/images/spinner.gif';=0A=
        Element.insert(this.form.select('input.submit')[0], {"after" : =
this.form.spinner});=0A=
      }=0A=
    }=0A=
  },=0A=
  validate : function() {=0A=
    var result =3D false;=0A=
    var useTitles =3D this.options.useTitles;=0A=
    var callback =3D this.options.onElementValidate;=0A=
    if(this.options.stopOnFirst) {=0A=
      result =3D Form.getElements(this.form).all(function(elm) {return =
Validation.validateElement(elm,{useTitle : useTitles, onElementValidate =
: callback});});=0A=
    } else {=0A=
      result =3D Form.getElements(this.form).collect(function(elm) =
{return Validation.validateElement(elm,{useTitle : useTitles, =
onElementValidate : callback});}).all();=0A=
    }=0A=
    if(!result && this.options.focusOnError) {=0A=
      var first =3D =
Form.getElements(this.form).findAll(function(elm){return =
$(elm).hasClassName('validation-failed');}).first();=0A=
      try{=0A=
        if(first.select) first.select();=0A=
        first.focus();=0A=
      }catch(e){}=0A=
    }=0A=
    this.options.onFormValidate(result, this.form);=0A=
    return result;=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Validation, {=0A=
  validateElement : function(elm, options){=0A=
    options =3D Object.extend({=0A=
      useTitle : false,=0A=
      onElementValidate : function(result, elm) {}=0A=
    }, options || {});=0A=
    elm =3D $(elm);=0A=
    var cn =3D elm.classNames();=0A=
    return cn.all(function(value) {=0A=
      var test =3D Validation.test(value,elm,options.useTitle);=0A=
      options.onElementValidate(test, elm);=0A=
      return test;=0A=
    });=0A=
  },=0A=
  showErrorMsg : function(name,elm,errorMsg) {           =0A=
    if(!elm.tooltip) elm.tooltip =3D new Tooltip(elm, {backgroundColor: =
"#FC9", borderColor: "#C96", textColor: "#000", textShadowColor: =
"#FFF"});=0A=
    elm.tooltip.content =3D errorMsg;=0A=
    elm.removeClassName('validation-passed');=0A=
    elm.addClassName('validation-failed');=0A=
  },=0A=
  showErrorMsgByValidator : function(name,elm,useTitle) {=0A=
    =
Validation.showErrorMsg(name,elm,Validation.get(name).error(ValidationUti=
ls.getInputValue(elm),elm,useTitle));=0A=
  },=0A=
  hideErrorMsg : function(name,elm) {		=0A=
    if(elm.tooltip) {=0A=
      elm.tooltip.stop();=0A=
      elm.tooltip =3D false;            =0A=
    }=0A=
    elm.removeClassName('validation-failed');=0A=
    elm.addClassName('validation-passed');=0A=
  },=0A=
  test : function(name, elm, useTitle) {=0A=
    var v =3D Validation.get(name);=0A=
    if(!v.test(ValidationUtils.getInputValue(elm),elm)) {=0A=
      Validation.showErrorMsgByValidator(name,elm,useTitle);=0A=
      return false;=0A=
    } else {=0A=
      Validation.hideErrorMsg(name,elm);=0A=
      return true;=0A=
    }=0A=
  },=0A=
  getAdvice : function(name, elm) {=0A=
    return Try.these(=0A=
    function(){return $('advice-' + name + '-' + =
ValidationUtils.getElmID(elm));},=0A=
    function(){return $('advice-' + ValidationUtils.getElmID(elm));}=0A=
  );=0A=
  },=0A=
  add : function(className, test, options) {=0A=
    var nv =3D {};=0A=
    var testFun =3D test;=0A=
    if(test instanceof RegExp)=0A=
      testFun =3D function(v,elm,args,metadata){return test.test(v);};=0A=
    nv[className] =3D new Validator(className, testFun, options);=0A=
    Object.extend(Validation.methods, nv);=0A=
  },=0A=
  addAllThese : function(validators) {=0A=
    $A(validators).each(function(value) {=0A=
      Validation.add(value[0], value[1], (value.length > 2 ? value[2] : =
{}));=0A=
    });=0A=
  },=0A=
  get : function(name) {=0A=
    var resultMethodName;=0A=
    for(var methodName in Validation.methods) {=0A=
      if(name =3D=3D methodName) {=0A=
        resultMethodName =3D methodName;=0A=
        break;=0A=
      }=0A=
      if(name.indexOf(methodName) >=3D 0) {=0A=
        resultMethodName =3D methodName;=0A=
      }=0A=
    }=0A=
    return Validation.methods[resultMethodName] ? =
Validation.methods[resultMethodName] : new Validator();=0A=
  },=0A=
  $ : function(formId) {=0A=
    return Validation.validations[formId];=0A=
  },=0A=
  methods : {},=0A=
  validations : {}=0A=
});=0A=
=0A=
Validation.addAllThese([=0A=
  ['required', function(v) {=0A=
      return !((v =3D=3D null) || (v.length =3D=3D 0) || =
/^[\s|\u3000]+$/.test(v));=0A=
    },{ignoreEmptyValue:false}],=0A=
  ['validate-number', function(v) {=0A=
      return (!isNaN(v) && !/^\s+$/.test(v));=0A=
    }],=0A=
  ['validate-digits', function(v) {=0A=
      return !/[^\d]/.test(v);=0A=
    }],=0A=
  ['validate-alphanum', function(v) {=0A=
      return !/\W/.test(v);=0A=
    }],=0A=
  ['validate-one-required', function (v,elm) {=0A=
      var p =3D elm.parentNode;=0A=
      var options =3D p.getElementsByTagName('INPUT');=0A=
      return $A(options).any(function(elm) {=0A=
        return $F(elm);=0A=
      });=0A=
    },{ignoreEmptyValue : false}],=0A=
			=0A=
  ['validate-digits',/^[\d]+$/],		=0A=
  ['validate-alphanum',/^[a-zA-Z0-9]+$/],		=0A=
  ['validate-alpha',/^[a-zA-Z]+$/],=0A=
=0A=
  ['validate-email',/^[\w.+-]+@(?:[-a-z0-9]+\.)+[a-z]{2,4}$/i],=0A=
  =
['validate-url',/^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][=
A-Z0-9_-]*)+)(:(\d+))?\/?/i],=0A=
  // [$]1[##][,###]+[.##]=0A=
  // [$]1###+[.##]=0A=
  // [$]0.##=0A=
  // [$].##=0A=
  =
['validate-currency-dollar',/^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0=
-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/=
]=0A=
]);=0A=
=0A=
//custom validate start=0A=
=0A=
Validation.addAllThese([=0A=
  /**=0A=
   * Usage : equals-$otherInputId=0A=
   * Example : equals-username or equals-email etc..=0A=
   */=0A=
  ['equals', function(v,elm,args,metadata) {=0A=
      return $F(args[0]) =3D=3D v;=0A=
    },{ignoreEmptyValue:false}],=0A=
  /**=0A=
   * Usage : less-than-$otherInputId=0A=
   */=0A=
  ['less-than', function(v,elm,args,metadata) {=0A=
      if(Validation.get('validate-number').test(v) && =
Validation.get('validate-number').test($F(args[0])))=0A=
        return parseFloat(v) < parseFloat($F(args[0]));=0A=
      return v < $F(args[0]);=0A=
    }],=0A=
  /**=0A=
   * Usage : great-than-$otherInputId=0A=
   */=0A=
  ['great-than', function(v,elm,args,metadata) {=0A=
      if(Validation.get('validate-number').test(v) && =
Validation.get('validate-number').test($F(args[0])))=0A=
        return parseFloat(v) > parseFloat($F(args[0]));=0A=
      return v > $F(args[0]);=0A=
    }],=0A=
  /*=0A=
   * Usage: min-length-$number=0A=
   * Example: min-length-10=0A=
   */=0A=
  ['min-length',function(v,elm,args,metadata) {=0A=
      return v.length >=3D parseInt(args[0]);=0A=
    }],=0A=
  /*=0A=
   * Usage: max-length-$number=0A=
   * Example: max-length-10=0A=
   */=0A=
  ['max-length',function(v,elm,args,metadata) {=0A=
      return v.length <=3D parseInt(args[0]);=0A=
    }],=0A=
  /*=0A=
   * Usage: validate-file-$type1-$type2-$typeX=0A=
   * Example: validate-file-png-jpg-jpeg=0A=
   */=0A=
  ['validate-file',function(v,elm,args,metadata) {=0A=
      return $A(args).any(function(extentionName) {=0A=
        return new RegExp('\\.'+extentionName+'$','i').test(v);=0A=
      });=0A=
    }],=0A=
  /*=0A=
   * Usage: float-range-$minValue-$maxValue=0A=
   * Example: -2.1 to 3 =3D float-range--2.1-3=0A=
   */=0A=
  ['float-range',function(v,elm,args,metadata) {=0A=
      return (parseFloat(v) >=3D parseFloat(args[0]) && parseFloat(v) =
<=3D parseFloat(args[1]));=0A=
    },{depends : ['validate-number']}],=0A=
  /*=0A=
   * Usage: int-range-$minValue-$maxValue=0A=
   * Example: -10 to 20 =3D int-range--10-20=0A=
   */=0A=
  ['int-range',function(v,elm,args,metadata) {=0A=
      return (parseInt(v) >=3D parseInt(args[0]) && parseInt(v) <=3D =
parseInt(args[1]));=0A=
    },{depends : ['validate-integer']}],=0A=
  /*=0A=
   * Usage: length-range-$minLength-$maxLength=0A=
   * Example: 10 to 20 =3D length-range-10-20=0A=
   */=0A=
  ['length-range',function(v,elm,args,metadata) {=0A=
      return (v.length >=3D parseInt(args[0]) && v.length <=3D =
parseInt(args[1]));=0A=
    }],=0A=
  /*=0A=
   * Usage: max-value-$number=0A=
   * Example: max-value-10=0A=
   */=0A=
  ['max-value',function(v,elm,args,metadata) {=0A=
      return parseFloat(v) <=3D parseFloat(args[0]);=0A=
    },{depends : ['validate-number']}],=0A=
  /*=0A=
   * Usage: min-value-$number=0A=
   * Example: min-value-10=0A=
   */=0A=
  ['min-value',function(v,elm,args,metadata) {=0A=
      return parseFloat(v) >=3D parseFloat(args[0]);=0A=
    },{depends : ['validate-number']}],=0A=
  /*=0A=
   * Usage: validate-pattern-$RegExp=0A=
   * Example: <input id=3D'sex' class=3D'validate-pattern-/^[fm]$/i'>=0A=
   */=0A=
  ['validate-pattern',function(v,elm,args,metadata) {=0A=
      return eval('('+args.singleArgument+'.test(v))');=0A=
    }],=0A=
  /*=0A=
   * Usage: validate-ajax-$url=0A=
   * Example: <input id=3D'email' =
class=3D'validate-ajax-http://localhost:8080/validate-email.jsp'>=0A=
   */=0A=
  ['validate-ajax',function(v,elm,args,metadata) {=0A=
      var form =3D ValidationUtils.getReferenceForm(elm);=0A=
      var params =3D (form ? Form.serialize(form) : =
Form.Element.serialize(elm));=0A=
      params +=3D =
ValidationUtils.format("&what=3D%s&value=3D%s",[elm.name,encodeURICompone=
nt(v)]);=0A=
      var request =3D new Ajax.Request(args.singleArgument,{=0A=
        parameters : params,=0A=
        asynchronous : false,=0A=
        method : "post"=0A=
      });=0A=
		=0A=
      var responseText =3D request.transport.responseText;=0A=
      if("" =3D=3D responseText.strip()) return true;=0A=
      metadata._error =3D responseText;=0A=
      return false;=0A=
    }],=0A=
  /*=0A=
   * Usage: validate-date-$dateFormat or validate-date($dateFormat =
default is yyyy-MM-dd)=0A=
   * Example: validate-date-yyyy/MM/dd=0A=
   */=0A=
  ['validate-date', function(v,elm,args,metadata) {=0A=
      var dateFormat =3D args.singleArgument || 'yyyy-MM-dd';=0A=
      metadata._error =3D =
ValidationUtils.format(Validator.messages[metadata.className],[dateFormat=
,dateFormat.replace('yyyy','2006').replace('MM','03').replace('dd','12')]=
);=0A=
      return ValidationUtils.isDate(v,dateFormat);=0A=
    }],	=0A=
  ['validate-integer',/^[-+]?[1-9]\d*$|^0$/],=0A=
  =
['validate-ip',/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0=
-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/],=0A=
  =
//=E4=B8=AD=E5=9B=BD=E7=9B=B8=E5=85=B3=E9=AA=8C=E8=AF=81=E5=BC=80=E5=A7=8B=0A=
  ['validate-id-number',function(v,elm,args,metadata) {=0A=
      if(!(/^\d{17}(\d|x)$/i.test(v) || /^\d{15}$/i.test(v))) return =
false;=0A=
      var provinceCode =3D parseInt(v.substr(0,2));=0A=
      if((provinceCode < 11) || (provinceCode > 91)) return false;=0A=
      var forTestDate =3D v.length =3D=3D 18 ? v : =
v.substr(0,6)+"19"+v.substr(6,15);=0A=
      var birthday =3D forTestDate.substr(6,8);=0A=
      if(!ValidationUtils.isDate(birthday,'yyyyMMdd')) return false;=0A=
      if(v.length =3D=3D 18) {=0A=
        v =3D v.replace(/x$/i,"a");=0A=
        var verifyCode =3D 0;=0A=
        for(var i =3D 17;i >=3D 0;i--)   =0A=
          verifyCode +=3D (Math.pow(2,i) % 11) * parseInt(v.charAt(17 - =
i),11);=0A=
        if(verifyCode % 11 !=3D 1) return false;=0A=
      }=0A=
      return true;=0A=
    }],=0A=
  ['validate-chinese',/^[\u4e00-\u9fa5]+$/],=0A=
  ['validate-phone',/^((0[1-9]{3})?(0[12][0-9])?[-])?\d{6,8}$/],=0A=
  ['validate-mobile-phone',/(^0?[1][35][0-9]{9}$)/],=0A=
  ['validate-zip',/^[1-9]\d{5}$/],=0A=
  ['validate-qq',/^[1-9]\d{4,8}$/],=0A=
	=0A=
  //javaeye added=0A=
  ['validate-richeditor', function(v, elm) {=0A=
      if(editor.mode =3D=3D "rich") {=0A=
        v =3D =
tinyMCE.activeEditor.getContent().stripTags().replace(/&nbsp;/g,' ');	=0A=
      }=0A=
      return !((v =3D=3D null) || (v.length =3D=3D 0) || =
/^[\s|\u3000]+$/.test(v));			=0A=
    },{ignoreEmptyValue:false}],=0A=
	=0A=
  ['bad-words', function(v) {=0A=
      for (var i=3D0; i < Validator.bad_words.length; i++) {=0A=
        var m =3D v.match(Validator.bad_words[i]);=0A=
        if (m) {=0A=
          =
alert("ITeye=E5=8F=91=E8=B4=B4=E6=8F=90=E7=A4=BA\n\nITeye=E7=BD=91=E7=AB=99=
=E4=B8=8D=E5=85=81=E8=AE=B8=E6=82=A8=E4=BD=BF=E7=94=A8 \"" + m[0] + "\" =
=E8=BF=99=E6=A0=B7=E7=9A=84=E8=AF=8D=E6=B1=87=E5=8F=91=E8=B4=B4=EF=BC=81\=
n\n=E6=82=A8=E5=BE=88=E5=8F=AF=E8=83=BD=E8=BF=9D=E5=8F=8D=E4=BA=86=E7=BD=91=
=E7=AB=99=E8=A7=84=E5=88=99=EF=BC=8C=E8=AF=B7=E4=BB=94=E7=BB=86=E9=98=85=E8=
=AF=BB=E5=B9=B6=E9=81=B5=E5=AE=88=E7=BD=91=E7=AB=99=E8=A7=84=E5=88=99=EF=BC=
=8C=E5=90=A6=E5=88=99=E5=B0=86=E8=A2=AB=E6=89=A3=E5=88=86=E5=88=A0=E8=B4=B4=
=E3=80=82\n\n");=0A=
          return false;=0A=
        }}=0A=
      return true;		=0A=
    }],=0A=
  ['validate-combobox', function(v, elm, args) {=0A=
      var v =3D $F(args[0]);=0A=
      return Validation.get('required').test(elm.value) || =
Validation.get('required').test(v);=0A=
    },{ignoreEmptyValue:false}],=0A=
=0A=
  /*=0A=
   * Usage: max-tag-$number=0A=
   * Example: max-tag-3=0A=
   */=0A=
  ['max-tag', function(v, elm, args){=0A=
    return v.replace(/^\s+|\s+$/g, '').split(/,\s*|=EF=BC=8C\s*/).length =
<=3D parseInt(args[0]);=0A=
  }]=0A=
]);=0A=
String.prototype.trim =3D function() {return this.replace(/^\s+|\s+$/g, =
'');};=0A=
=0A=
function multiple_upload_attachment(ele, max_size) {=0A=
  Event.observe(ele, 'change', function() {=0A=
    addAttachmentDiv(ele, max_size);=0A=
  });=0A=
  if (multiple_upload_attachment_counter >=3D max_size) ele.disabled =3D =
true;=0A=
}=0A=
=0A=
var attachment_template =3D new =
Template('<table><tr><th>=E6=96=87=E4=BB=B6:</th><td><span>#{filename}</s=
pan><span class=3D"more"><a href=3D"#" =
class=3D"delete">=E5=88=A0=E9=99=A4</a></span><div =
class=3D"clear"></div></td></tr><tr><th>=E6=8F=8F=E8=BF=B0:</th><td><text=
area name=3D"attachments[][remark]" cols=3D"" =
rows=3D""></textarea></td></tr></table>');=0A=
=0A=
function addAttachmentDiv(ele, max_size) {=0A=
  if (!$A(['jpg','jpeg','bmp','png','gif','rar','zip', 'tar', 'gz', =
'jar', 'war', 'bz2', '7z']).any(function(extName){return new =
RegExp('\\.'+extName+'$','i').test(ele.value);})){=0A=
    =
alert("=E5=A6=82=E6=9E=9C=E6=82=A8=E4=B8=8A=E4=BC=A0=E5=9B=BE=E7=89=87=EF=
=BC=8C=E8=AF=B7=E4=B8=8A=E4=BC=A0JPG=E3=80=81BMP=E3=80=81PNG=E6=88=96=E8=80=
=85GIF=E6=A0=BC=E5=BC=8F=E7=9A=84=E5=9B=BE=E7=89=87\n=E5=A6=82=E6=9E=9C=E6=
=82=A8=E4=B8=8A=E4=BC=A0=E9=99=84=E4=BB=B6=EF=BC=8C=E8=AF=B7=E5=85=88=E5=8E=
=8B=E7=BC=A9=E5=86=8D=E4=B8=8A=E4=BC=A0");=0A=
      return false;=0A=
  }=0A=
=0A=
  multiple_upload_attachment_counter++;=0A=
  var div =3D attachment_template.evaluate({filename: ele.value}); =0A=
  var new_input =3D new Element("input", {type: "file", name: ele.name, =
id: ele.id, disabled: multiple_upload_attachment_counter >=3D max_size});=0A=
=0A=
  Event.observe(new_input, 'change', function() {=0A=
    addAttachmentDiv(new_input, max_size);=0A=
  });=0A=
  $('groups_upload_button').insert({before : div});=0A=
  ele.insert({after: new_input});=0A=
  ele.id =3D ele.id + multiple_upload_attachment_counter;=0A=
  ele.name =3D "attachments[][uploaded_data]";=0A=
  div =3D $('groups_upload_button').previous();=0A=
  div.down('.delete').observe('click', function(event) {=0A=
    removeAttachmentDiv(this);=0A=
  });=0A=
  div.appendChild(ele.hide());=0A=
}=0A=
=0A=
function removeAttachmentDiv(link) {=0A=
  multiple_upload_attachment_counter--;=0A=
  link.up('table').remove();=0A=
  $('attachment_upload').disabled =3D false;=0A=
}=0A=
=0A=
function multiple_upload_picture(ele, max_size, tags) {=0A=
  Event.observe(ele, 'change', function() {=0A=
    addPictureDiv(ele, max_size, tags);=0A=
  });=0A=
  if (multiple_upload_picture_counter >=3D max_size) ele.disabled =3D =
true;=0A=
}=0A=
=0A=
function addPictureDiv(ele, max_size, tags) {=0A=
  if (!$A(['jpg','jpeg','bmp','png','gif']).any(function(extName){return =
new RegExp('\\.'+extName+'$','i').test(ele.value);})){=0A=
    =
alert("=E6=82=A8=E4=B8=8A=E4=BC=A0=E7=9A=84=E5=9B=BE=E7=89=87=E6=A0=BC=E5=
=BC=8F=E4=B8=8D=E6=94=AF=E6=8C=81=EF=BC=8C=E8=AF=B7=E6=82=A8=E4=B8=8A=E4=BC=
=A0JPG=E3=80=81BMP=E3=80=81PNG=E6=88=96=E8=80=85GIF=E6=A0=BC=E5=BC=8F=E7=9A=
=84=E5=9B=BE=E7=89=87");=0A=
    return false;=0A=
  }=0A=
  =0A=
  multiple_upload_picture_counter++;=0A=
  //fix for opera=0A=
  var file_name =3D ele.value;=0A=
  try {file_name =3D ele.value.match(/(.*)[\/\\]([^\/\\]+)\.\w+$/)[2];} =
catch(e) {} =0A=
  var tag_select =3D "";=0A=
  if(tags.length > 0) {=0A=
    var tag_select =3D "<select =
onchange=3D'Element.previous($(this)).value =3D this.value;'><option =
value=3D''>=E9=80=89=E6=8B=A9=E5=B7=B2=E6=9C=89=E6=A0=87=E7=AD=BE</option=
>";=0A=
    for (var i =3D 0; i < tags.length; i++)=0A=
      tag_select +=3D "<option value=3D'" + tags[i] + "'>" + tags[i] + =
"</option>";=0A=
    tag_select +=3D "</select>";=0A=
  }=0A=
  var div =3D new Element("div").update("<ul><li>=E6=96=87=E4=BB=B6: " + =
ele.value + " <a href=3D'#' onclick=3D'removePictureDiv(this, \"" + =
ele.id + "\");return =
false;'>=E5=88=A0=E9=99=A4</a></li><li>=E5=90=8D=E7=A7=B0: <input =
type=3D'text' name=3D'pictures[][name]' value=3D'" + file_name + "' =
size=3D'50' class=3D'text'/></li><li>=E6=8F=8F=E8=BF=B0: <textarea =
name=3D'pictures[][description]' =
style=3D'width:400px;height:80px;'></textarea></li></ul>");=0A=
  var new_input =3D new Element("input", {type: "file", name: ele.name, =
id: ele.id, disabled: multiple_upload_picture_counter >=3D max_size});=0A=
  =0A=
  Event.observe(new_input, 'change', function() {=0A=
    addPictureDiv(new_input, max_size, tags);=0A=
  });=0A=
  ele.insert({after : div});=0A=
  div.insert({after : new_input});=0A=
  ele.id =3D ele.id + multiple_upload_picture_counter;=0A=
  ele.name =3D "pictures[][uploaded_data]";=0A=
  div.appendChild(ele.hide().remove());=0A=
}=0A=
=0A=
function removePictureDiv(link, eleId) {=0A=
  multiple_upload_picture_counter--;=0A=
  link.parentNode.parentNode.parentNode.remove();=0A=
  $(eleId).disabled =3D false;=0A=
}=0A=
=0A=
function move_messages(dest) {=0A=
  $('dest').value =3D dest;=0A=
  $('messages_form').submit();=0A=
}=0A=
=0A=
function digg(type, id, bury) {=0A=
    var url =3D '/' + type + (bury ? '/bury' : '/digg');=0A=
    var small_button =3D !!$('d' + id);=0A=
    if(small_button) $('d'+id).innerHTML =3D "<h3><img =
src=3D'/images/spinner.gif'/><br/><span>...</span></h3>";=0A=
=0A=
    if($('digg_bottom')){=0A=
      $$('#digg_bottom div').each(function(div){div.innerHTML=3D"<img =
src=3D'/images/spinner.gif'/>";});=0A=
      new =
Ajax.Request(url,{asynchronous:true,evalScripts:true,parameters:{"id":id,=
 "bottom":true, small_button:small_button}});=0A=
    }else{=0A=
      new =
Ajax.Request(url,{asynchronous:true,evalScripts:true,parameters:{"id":id,=
 small_button:small_button}});=0A=
    }=0A=
}=0A=
=0A=
function bury_blog(blog_id) {=0A=
    $('b' + blog_id).innerHTML =3D "<h3><img =
src=3D'/images/spinner.gif'/><br/><span>...</span></h3>";=0A=
    if($('digg_bottom') !=3D undefined) {=0A=
        $$('#digg_bottom div').each(function(div){div.innerHTML=3D"<img =
src=3D'/images/spinner.gif'/>";});=0A=
        new =
Ajax.Request('/blogs/bury',{asynchronous:true,evalScripts:true,parameters=
:{"id":blog_id, "bottom":true}});=0A=
    }else{=0A=
        new =
Ajax.Request('/blogs/bury',{asynchronous:true,evalScripts:true,parameters=
:{"id":blog_id}});=0A=
    }=0A=
}=0A=
=0A=
function fix_image_size(images, maxW) {=0A=
  if(images.length > 0) {=0A=
    Event.observe(window,'load',function() {=0A=
      images.each(function(img) {=0A=
        var w =3D img.width;=0A=
        var h =3D img.height;=0A=
        if (w > maxW) {=0A=
          var f =3D 1-((w - maxW) / w);=0A=
          img.title =3D =
"=E7=82=B9=E5=87=BB=E6=9F=A5=E7=9C=8B=E5=8E=9F=E5=A7=8B=E5=A4=A7=E5=B0=8F=
=E5=9B=BE=E7=89=87";=0A=
          img.addClassName("magplus");=0A=
          img.onclick =3D function() {window.open(this.src);};=0A=
          img.width =3D w * f;=0A=
          img.height =3D h * f;=0A=
        }=0A=
      });=0A=
    });=0A=
  }=0A=
}=0A=
=0A=
function highlight_suggested_tags(tags) {=0A=
    if ($('suggested_tags_panel') !=3D=3D null) {=0A=
        $('suggested_tags_panel').select('a').each( function(el) {=0A=
            var exist_tag =3D tags.find(function(tag){=0A=
                return tag.match(new RegExp('^' + el.text + '$', 'i'));=0A=
            });=0A=
            if (exist_tag) {=0A=
                el.addClassName('added');=0A=
            } else {=0A=
                el.removeClassName('added');=0A=
            }=0A=
        });=0A=
    }=0A=
}=0A=
=0A=
function extract_tag_list(value) {=0A=
    var tags =3D value.trim().split(/,\s*|=EF=BC=8C\s*/).without('');=0A=
    highlight_suggested_tags(tags);=0A=
    tag_list =3D tags.map(function(tag) { =0A=
        return "<span>" + tag + "</span>";=0A=
    }).join('');=0A=
    if (!tag_list.empty()) {=0A=
        tag_list =3D '=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE=EF=BC=9A' + =
tag_list;=0A=
    }=0A=
    if ($("current_tags_panel") !=3D=3D null) {=0A=
        $("current_tags_panel").update(tag_list);=0A=
    }=0A=
}=0A=
=0A=
function observe_tag_list(id) {=0A=
    extract_tag_list($(id).value);=0A=
    new Form.Element.Observer(=0A=
        id,=0A=
        0.2,=0A=
        function(el, value) {=0A=
            extract_tag_list(value);=0A=
        }=0A=
    )=0A=
}=0A=
=0A=
function trigger_suggested_tag() {=0A=
  var tag_list_input =3D this.parentNode.previous("input");=0A=
  var current_value =3D tag_list_input.value.trim();=0A=
  if (this.hasClassName('added')) {=0A=
    var tag_regex =3D new RegExp('^' + this.text + '$', 'i')=0A=
    tag_list_input.value =3D =
current_value.split(/,\s*|=EF=BC=8C\s*/).findAll(function(tag){=0A=
      tag =3D tag.trim();=0A=
      if (tag !=3D=3D '' && !tag_regex.match(tag)) {=0A=
        return true;=0A=
      }=0A=
    }).join(', ');=0A=
    this.removeClassName('added');=0A=
  } else {=0A=
    if(current_value !=3D=3D "" && current_value[current_value.length-1] =
!=3D=3D ","){=0A=
      tag_list_input.value +=3D ", ";=0A=
    }=0A=
    tag_list_input.value +=3D this.innerHTML;=0A=
    this.addClassName('added');=0A=
  }=0A=
  Validation.validateElement($(tag_list_input));=0A=
}=0A=
=0A=
function check_category_list(checkboxes, category_list){=0A=
  checkboxes.each(function(element){=0A=
    element.checked =3D category_list.split(',').any(function(name){=0A=
      return name.trim().toLowerCase() =3D=3D this;=0A=
    }, element.value.toLowerCase());=0A=
  });=0A=
}=0A=
=0A=
document.observe("dom:loaded",function(){=0A=
    $$("div.quick_menu").each(function(ele) {=0A=
        Event.observe(ele.previous(), 'mouseover', function(e) {=0A=
            $$("div.quick_menu").invoke('hide');=0A=
            ele.style.left =3D ele.previous().positionedOffset()[0] + =
"px";=0A=
            ele.show();=0A=
        });=0A=
        Event.observe(ele.previous(), 'mouseout', function(e) {=0A=
            if(!Position.within(ele,Event.pointerX(e),Event.pointerY(e) =
+ 5))=0A=
                ele.hide();=0A=
        });=0A=
        Event.observe(ele, 'mouseout', function(e) {=0A=
            if(!Position.within(ele,Event.pointerX(e),Event.pointerY(e)))=0A=
                ele.hide();=0A=
        });=0A=
    });=0A=
    $$("div.nav_side > ul > li:not(.select)").each(function(ele) {=0A=
      Event.observe(ele, 'mouseover', function(e) {=0A=
        Event.findElement(e, 'LI').addClassName('select');=0A=
      });=0A=
      Event.observe(ele, 'mouseout', function(e) {=0A=
        Event.findElement(e, 'LI').removeClassName('select');=0A=
      });=0A=
    });=0A=
=0A=
    $$('#blog_category_checkbox =
input[type=3Dcheckbox]').each(function(element){=0A=
      element.observe('change', function(ev){=0A=
        var current_value =3D $('blog_category_list').value.trim();=0A=
        if(this.checked) {=0A=
          if(current_value =3D=3D '' || =
current_value[current_value.length -1] =3D=3D ',')=0A=
            $('blog_category_list').value +=3D this.value;=0A=
          else=0A=
            $('blog_category_list').value +=3D (','+this.value);=0A=
        } else {=0A=
          $('blog_category_list').value =3D =
current_value.split(',').reject(function(name){=0A=
            return name.trim() =3D=3D this;=0A=
          }, this.value).join(',');=0A=
        }=0A=
      });=0A=
    });=0A=
=0A=
});=0A=
=0A=
//IE6 background image cache fix=0A=
try {document.execCommand('BackgroundImageCache', false, true);} =
catch(e) {}=0A=
=0A=
=0A=
=0A=
//resume=0A=
=0A=
function add_work_experience(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $(button).up().insert({before: =
content.replace(/new_work_experiences/g, new_id)});=0A=
}=0A=
=0A=
function add_project_experience(link, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $(link).up().insert({before: =
content.replace(/new_project_experiences/g, new_id)});=0A=
}=0A=
=0A=
function add_education(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $$('.editing .educations')[0].insert({bottom: =
content.replace(/new_educations/g, new_id)});=0A=
}=0A=
=0A=
function add_training(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $$('.editing .trainings')[0].insert({bottom: =
content.replace(/new_trainings/g, new_id)});=0A=
}=0A=
=0A=
function add_certificate(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $$('.editing .certificates')[0].insert({bottom: =
content.replace(/new_certificates/g, new_id)});=0A=
}=0A=
=0A=
function add_skill(button, content){=0A=
  $$('.editing .skills')[0].insert({bottom: content});=0A=
}=0A=
=0A=
function add_language(button, content){=0A=
  $$('.editing .languages')[0].insert({bottom: content});=0A=
}=0A=
=0A=
document.observe("dom:loaded",function(){=0A=
  $$('#my_resume .control .expand').each(function(el){=0A=
    el.hide();=0A=
  });=0A=
  document.observe('click', function(event){=0A=
=0A=
    if(el =3D event.findElement('#my_resume .control .expand')){=0A=
      el.up('h1').next('.view_con').show();=0A=
      el.previous('.contract').show();=0A=
      el.hide();=0A=
      event.stop();=0A=
    } else if(el =3D event.findElement('#my_resume .control .contract')){=0A=
      el.up('h1').next('.view_con').hide();=0A=
      el.next('.expand').show();=0A=
      el.hide();=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('#my_resume .control .edit')){=0A=
      if($('profile_invalid_flag') && =
!(/myresume\/edit$/.test(el['href']))){=0A=
        =
alert("=E4=B8=AA=E4=BA=BA=E8=B5=84=E6=96=99=E4=B8=8D=E5=AE=8C=E6=95=B4,=E8=
=AF=B7=E5=85=88=E5=AE=8C=E5=96=84=E4=B8=AA=E4=BA=BA=E8=B5=84=E6=96=99");=0A=
      }else{=0A=
        new Ajax.Request(el['href'], {=0A=
          method: 'get',=0A=
          onSuccess: function(res){=0A=
            el.up('.view').replace(res.responseText);=0A=
          }=0A=
        });=0A=
      }=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('.work_exp > .del_work a.del')){=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E5=B7=A5=
=E4=BD=9C=E7=BB=8F=E9=AA=8C=E5=90=97=EF=BC=9F")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('.work_exp').remove();=0A=
        } else {=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            onSuccess: function(res){=0A=
              el.up('.work_exp').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if(el =3D event.findElement('.project_exp > .del_project =
a.del')) {=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E9=A1=B9=
=E7=9B=AE=E7=BB=8F=E9=AA=8C=E5=90=97=EF=BC=9F")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('.project_exp').remove();=0A=
        } else {=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            onSuccess: function(res){=0A=
              el.up('.project_exp').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if(el =3D event.findElement('.edu_exp a.del')){=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E5=90=97=EF=BC=9F=
")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('.edu_exp').remove();=0A=
        } else {=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            onSuccess: function(res){=0A=
              el.up('.edu_exp').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('.skills a.del')){=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E6=8A=80=
=E8=83=BD=E5=90=97=EF=BC=9F")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('li').remove();=0A=
        } else {=0A=
          var form =3D el.up('form');=0A=
=0A=
          el.up('li').getElementsBySelector('.level =
input[type=3Dradio]').each(function(radio){=0A=
            radio['name'] =3D 'destroied';=0A=
          });=0A=
=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            parameters: form.serialize(),=0A=
            onSuccess: function(){=0A=
              el.up('li').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('.languages a.del')) {=0A=
      if =
(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E8=AF=AD=
=E7=A7=8D=E5=90=97?")) { =0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('li').remove();=0A=
        }else{=0A=
          var form =3D el.up('form');=0A=
=0A=
          el.up('li').getElementsBySelector('.level =
select').each(function(select_elem){=0A=
            select_elem['name'] =3D 'destroied';=0A=
          });=0A=
=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            parameters: form.serialize(),=0A=
            onSuccess: function(){=0A=
              el.up('li').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    }=0A=
=0A=
  });=0A=
=0A=
  var resume_submit_precess =3D function(event){=0A=
    if(form =3D event.findElement('#my_resume .editing form.remote')){=0A=
      form.request({=0A=
        onSuccess: function(res){=0A=
          var prev =3D form.up('.editing').previous();=0A=
          prev.insert({after: res.responseText});=0A=
          prev.next().down('.expand').hide();=0A=
          form.up('.editing').remove();=0A=
        }=0A=
      });=0A=
      event.stop();=0A=
    }=0A=
  };=0A=
  if(Prototype.Browser.IE){=0A=
    document.observe('focusin', function(event){=0A=
      var form =3D event.findElement("#my_resume form");=0A=
      if(form && !form.submit_bubbles_on_ie){=0A=
        form.submit_bubbles_on_ie =3D true;=0A=
        form.observe('submit', resume_submit_precess);=0A=
      }=0A=
    });=0A=
  }else{=0A=
    document.observe('submit', resume_submit_precess);=0A=
  }=0A=
=0A=
=0A=
=0A=
  var resume_change_process =3D function(event){=0A=
    if(select =3D event.findElement('#my_resume .skills .title =
.skill_option_one')){=0A=
      var two_elem =3D select.next();=0A=
      var skill_title =3D '';=0A=
      if('=E6=89=8B=E5=8A=A8=E6=B7=BB=E5=8A=A0' =3D=3D select['value']){=0A=
        two_elem.replace('<input class=3D"skill_option_two" =
name=3D"skill_option_two" style=3D"width:80px;" type=3D"text">');=0A=
      }else{=0A=
        if(two_elem.nodeName.toUpperCase() =3D=3D "SELECT"){=0A=
          two_elem.length =3D 0;=0A=
        }else{=0A=
          two_elem.replace(new Element('select', =
{'class':'skill_option_two', 'name': 'skill_option_two'}));=0A=
        }=0A=
        window.skill_options_two.get(select['value']).each(function(v){ =
select.next().appendChild(new Element('option', { 'value': v =
}).update(v)); });=0A=
        skill_title =3D window.skill_options_two.get(select['value'])[0];=0A=
      }=0A=
      =
select.up('.title').next('.level').getElementsBySelector('input').each(fu=
nction(radio){=0A=
        radio.checked =3D false;=0A=
        radio['name'] =3D 'resume[skills][' + skill_title + ']';=0A=
      });=0A=
    }else if(select =3D event.findElement('#my_resume .skills .title =
.skill_option_two')){=0A=
      =
select.up('.title').next('.level').getElementsBySelector('input').each(fu=
nction(radio){=0A=
        radio.checked =3D false;=0A=
        radio['name'] =3D 'resume[skills][' + select['value'] + ']';=0A=
      });=0A=
    }else if(select =3D event.findElement('#my_resume .languages .title =
select')){=0A=
      =
select.up('.title').next('.level').getElementsBySelector('select').each(f=
unction(select_elem){=0A=
        select_elem['name'] =3D 'resume[languages]['+ select['value'] =
+'][]';=0A=
      });=0A=
    }else if(select =3D (event.findElement('#my_resume .work_exp =
select.company_industry') || =
event.findElement('#company_industry_search'))){=0A=
      if(select['value'] =3D=3D '=E5=85=B6=E5=AE=83'){=0A=
         var elem_str =3D "<input type=3D'text' class=3D'input_1 =
required' style=3D'margin-left: 10px;' name=3D'" + select['name'] + "' =
/>"=0A=
         if(select['id'] =3D=3D 'company_industry_search'){elem_str =3D =
"<input type=3D'text' class=3D'text' style=3D'margin-left: 10px;' =
name=3D'" + select['name'] + "' />"}=0A=
         select.insert({'after': elem_str});=0A=
         select['name'] =3D '';=0A=
      }else{=0A=
        var ci_text_elem =3D select.next('input');=0A=
        if(ci_text_elem){=0A=
          select['name'] =3D ci_text_elem['name'];=0A=
          select.next('input').remove();=0A=
        }=0A=
      }=0A=
    }else if(select =3D event.findElement('#skills_search')){=0A=
      if(select['value'] =3D=3D '=E5=85=B6=E5=AE=83'){=0A=
        select.insert({'after': "<input type=3D'text' class=3D'text' =
style=3D'margin-left:10px;' name=3D'"+ select['name'] +"' />"})=0A=
        select['name'] =3D '';=0A=
      }else{=0A=
        var ci_text_elem =3D select.next('input');=0A=
        if(ci_text_elem){=0A=
          select['name'] =3D ci_text_elem['name'];=0A=
          select.next('input').remove();=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
  if(Prototype.Browser.IE){=0A=
    document.observe('focusin', function(event){=0A=
      var select =3D event.findElement("#my_resume select");=0A=
      if(select && !select.change_bubbles_on_ie){=0A=
        select.change_bubbles_on_ie =3D true;=0A=
        select.observe('change', resume_change_process);=0A=
      }=0A=
    });=0A=
  }else{=0A=
    document.observe('change', resume_change_process);=0A=
  }=0A=
});=0A=
=0A=
function add_vote_option(btn, html_str){=0A=
  var new_id =3D new Date().getTime();=0A=
  $(btn).up().previous().insert({bottom: =
html_str.replace(/new_vote_option_id/g, new_id)});=0A=
}=0A=
function del_vote_option(vote_option){=0A=
  vote_option =3D $(vote_option);=0A=
  var tr1 =3D vote_option.up(1);=0A=
  var tr2 =3D tr1.next();=0A=
  var vote_option_url =3D vote_option.getAttribute('url');=0A=
  if(vote_option_url){=0A=
    =
if(confirm('=E6=85=8E=E7=94=A8,=E5=A6=82=E6=8A=95=E7=A5=A8=E9=80=89=E9=A1=
=B9=E4=B8=8B=E6=9C=89=E5=BE=88=E5=A4=9A=E6=8A=95=E7=A5=A8,=E4=BC=9A=E5=88=
=A0=E9=99=A4=E5=85=B6=E6=89=80=E6=9C=89=E6=8A=95=E7=A5=A8,=E8=80=8C=E5=A2=
=9E=E5=8A=A0=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=8E=8B=E5=8A=9B')){=0A=
    new Ajax.Request(vote_option_url, {=0A=
        method: 'delete',=0A=
        onSuccess: function(transport){ tr1.remove(); tr2.remove();}=0A=
        });=0A=
    }=0A=
  }else{=0A=
    tr1.remove();=0A=
    tr2.remove();=0A=
  }=0A=
}=0A=
/* JSON-P implementation for Prototype.js somewhat by Dan Dean =
(http://www.dandean.com)=0A=
 * =0A=
 * *HEAVILY* based on Tobie Langel's version: =
http://gist.github.com/145466.=0A=
 * Might as well just call this an iteration.=0A=
 * =0A=
 * This version introduces:=0A=
 * - Support for predefined callbacks (Necessary for OAuth signed =
requests, by @rboyce)=0A=
 * - Partial integration with Ajax.Responders (Thanks to @sr3d for the =
kick in this direction)=0A=
 * - Compatibility with Prototype 1.7 (Thanks to @soung3 for the bug =
report)=0A=
 * - Will not break if page lacks a <head> element=0A=
 *=0A=
 * See examples in README for usage=0A=
 *=0A=
 * VERSION 1.1.2=0A=
 *=0A=
 * new Ajax.JSONRequest(url, options);=0A=
 * - url (String): JSON-P endpoint url.=0A=
 * - options (Object): Configuration options for the request.=0A=
 */=0A=
Ajax.JSONRequest =3D Class.create(Ajax.Base, (function() {=0A=
  var id =3D 0, head =3D document.getElementsByTagName('head')[0] || =
document.body;=0A=
  return {=0A=
    initialize: function($super, url, options) {=0A=
      $super(options);=0A=
      this.options.url =3D url;=0A=
      this.options.callbackParamName =3D this.options.callbackParamName =
|| 'callback';=0A=
      this.options.timeout =3D this.options.timeout || 10; // Default =
timeout: 10 seconds=0A=
      this.options.invokeImmediately =3D =
(!Object.isUndefined(this.options.invokeImmediately)) ? =
this.options.invokeImmediately : true ;=0A=
      =0A=
      if (!Object.isUndefined(this.options.parameters) && =
Object.isString(this.options.parameters)) {=0A=
        this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
      }=0A=
      =0A=
      if (this.options.invokeImmediately) {=0A=
        this.request();=0A=
      }=0A=
    },=0A=
    =0A=
    /**=0A=
     *  Ajax.JSONRequest#_cleanup() -> undefined=0A=
     *  Cleans up after the request=0A=
     **/=0A=
    _cleanup: function() {=0A=
      if (this.timeout) {=0A=
        clearTimeout(this.timeout);=0A=
        this.timeout =3D null;=0A=
      }=0A=
      if (this.transport && Object.isElement(this.transport)) {=0A=
        this.transport.remove();=0A=
        this.transport =3D null;=0A=
      }=0A=
    },=0A=
  =0A=
    /**=0A=
     *  Ajax.JSONRequest#request() -> undefined=0A=
     *  Invokes the JSON-P request lifecycle=0A=
     **/=0A=
    request: function() {=0A=
      =0A=
      // Define local vars=0A=
      var response =3D new Ajax.JSONResponse(this);=0A=
      var key =3D this.options.callbackParamName,=0A=
        name =3D '_prototypeJSONPCallback_' + (id++),=0A=
        complete =3D function() {=0A=
          if (Object.isFunction(this.options.onComplete)) {=0A=
            this.options.onComplete.call(this, response);=0A=
          }=0A=
          Ajax.Responders.dispatch('onComplete', this, response);=0A=
        }.bind(this);=0A=
      =0A=
      // If the callback parameter is already defined, use that=0A=
      if (this.options.parameters[key] !=3D=3D undefined) {=0A=
        name =3D this.options.parameters[key];=0A=
      }=0A=
      // Otherwise, add callback as a parameter=0A=
      else {=0A=
        this.options.parameters[key] =3D name;=0A=
      }=0A=
      =0A=
      // Build request URL=0A=
      this.options.parameters[key] =3D name;=0A=
      var url =3D this.options.url + ((this.options.url.include('?') ? =
'&' : '?') + Object.toQueryString(this.options.parameters));=0A=
      =0A=
      // Define callback function=0A=
      window[name] =3D function(json) {=0A=
        this._cleanup(); // Garbage collection=0A=
        window[name] =3D undefined;=0A=
=0A=
        response.status =3D 200;=0A=
        response.statusText =3D "OK";=0A=
        response.setResponseContent(json);=0A=
=0A=
        if (Object.isFunction(this.options.onSuccess)) {=0A=
          this.options.onSuccess.call(this, response);=0A=
        }=0A=
        Ajax.Responders.dispatch('onSuccess', this, response);=0A=
=0A=
        complete();=0A=
=0A=
      }.bind(this);=0A=
      =0A=
      this.transport =3D new Element('script', {type: 'text/javascript', =
src: url});=0A=
      =0A=
      if (Object.isFunction(this.options.onCreate)) {=0A=
        this.options.onCreate.call(this, response);=0A=
      }=0A=
      Ajax.Responders.dispatch('onCreate', this);=0A=
      =0A=
      head.appendChild(this.transport);=0A=
=0A=
      this.timeout =3D setTimeout(function() {=0A=
        this._cleanup();=0A=
        window[name] =3D Prototype.emptyFunction;=0A=
        if (Object.isFunction(this.options.onFailure)) {=0A=
          response.status =3D 504;=0A=
          response.statusText =3D "Gateway Timeout";=0A=
          this.options.onFailure.call(this, response);=0A=
        }=0A=
        complete();=0A=
      }.bind(this), this.options.timeout * 1000);=0A=
    },=0A=
    toString: function() {return "[object Ajax.JSONRequest]";}=0A=
  };=0A=
})());=0A=
=0A=
Ajax.JSONResponse =3D Class.create({=0A=
  initialize: function(request) {=0A=
    this.request =3D request;=0A=
  },=0A=
  request: undefined,=0A=
  status: 0,=0A=
  statusText: '',=0A=
  responseJSON: undefined,=0A=
  responseText: undefined,=0A=
  setResponseContent: function(json) {=0A=
    this.responseJSON =3D json;=0A=
    this.responseText =3D Object.toJSON(json);=0A=
  },=0A=
  getTransport: function() {=0A=
    if (this.request) return this.request.transport;=0A=
  },=0A=
  toString: function() {return "[object Ajax.JSONResponse]";}=0A=
});document.observe("dom:loaded", function() {=0A=
  (function(){=0A=
    function is_ie6(){=0A=
      return ((window.XMLHttpRequest =3D=3D undefined) && (ActiveXObject =
!=3D undefined));=0A=
    }=0A=
=0A=
    var notifications;=0A=
    var unread_count =3D 0;=0A=
    var notifications_count =3D $('notifications_count');=0A=
    var notifications_menu =3D $('notifications_menu');=0A=
    var notifications_summary, notifications_detail;=0A=
=0A=
    var Render =3D {=0A=
      summary_names : function(names) {=0A=
        if (names.length > 3) {=0A=
          return new =
Template('#{names}=E5=92=8C=E5=8F=A6=E5=A4=96#{other}=E4=BA=BA').evaluate=
({=0A=
            'names' : names.clone().splice(0,3).join('=EF=BC=8C'), =
'other' : names.length - 3=0A=
          });=0A=
        } else {=0A=
          return names.join('=EF=BC=8C');=0A=
        }=0A=
      },=0A=
=0A=
      template_blog_comment : function(notification) {=0A=
        this.render_comments_common_template(notification, 'blog', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E7=9A=84=E5=8D=9A=E5=AE=A2=E6=96=87=
=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_blog_comment_other : function(notification) {=0A=
        this.render_comments_common_template(notification, 'blog', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E5=9B=9E=E5=A4=8D=E8=BF=87=E7=9A=84=
=E5=8D=9A=E5=AE=A2=E6=96=87=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_topic_post : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E7=9A=84=E8=AE=BA=E5=9D=9B=E4=B8=BB=
=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_topic_post_other : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E5=9B=9E=E5=A4=8D=E8=BF=87=E7=9A=84=
=E8=AE=BA=E5=9D=9B=E4=B8=BB=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_group_topic_post : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E7=9A=84=E7=BE=A4=E7=BB=84=E4=B8=BB=
=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_group_topic_post_other : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E5=9B=9E=E5=A4=8D=E8=BF=87=E7=9A=84=
=E7=BE=A4=E7=BB=84=E4=B8=BB=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_news_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'news', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E8=B5=84=E8=AE=AF=E6=96=87=
=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_news_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'news', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E8=B5=84=E8=AE=AF=E6=96=87=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_essence_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'essence', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E7=B2=BE=E5=8D=8E=E6=96=87=
=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_essence_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'essence', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E7=B2=BE=E5=8D=8E=E6=96=87=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_problem_solution: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=9B=9E=E7=AD=94=E4=BA=86=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98', =
'solutions');=0A=
      },=0A=
=0A=
      template_problem_solution_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=9B=9E=E7=AD=94=E4=BA=86=E6=82=A8=E5=9B=9E=E7=AD=94=E8=BF=87=E7=9A=84=
=E9=97=AE=E9=A2=98', 'solutions');=0A=
      },=0A=
=0A=
      template_problem_solution_follow: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=9B=9E=E7=AD=94=E4=BA=86=E6=82=A8=E5=85=B3=E6=B3=A8=E7=9A=84=E9=97=AE=
=E9=A2=98', 'solutions');=0A=
      },=0A=
=0A=
      template_problem_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98', =
'comments');=0A=
      },=0A=
=0A=
      template_problem_comment_follow: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E5=85=B3=E6=B3=A8=E7=9A=84=E9=97=AE=
=E9=A2=98', 'comments');=0A=
      },=0A=
=0A=
      template_problem_follow: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=85=B3=E6=B3=A8=E4=BA=86=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98', =
'follows');=0A=
      },=0A=
=0A=
      template_solution_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'solution', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E5=9B=9E=E7=AD=94', =
'comments');=0A=
      },=0A=
=0A=
      template_event_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'event', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E6=B4=BB=E5=8A=A8', =
'comments');=0A=
      },=0A=
=0A=
      template_event_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'event', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E6=B4=BB=E5=8A=A8', 'comments');=0A=
      },=0A=
=0A=
      template_event_comment_member: function(notification) {=0A=
        this.render_comments_common_template(notification, 'event', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E5=8F=82=E4=B8=8E=E7=9A=84=E6=B4=BB=
=E5=8A=A8', 'comments');=0A=
      },=0A=
=0A=
      template_page_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'page', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E7=9F=A5=E8=AF=86=E5=BA=93=
', 'comments');=0A=
      },=0A=
=0A=
      template_page_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'page', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E7=9F=A5=E8=AF=86=E5=BA=93', 'comments');=0A=
      },=0A=
=0A=
      render_comments_common_template : function(notification, subject, =
title, comments) {=0A=
        comments =3D comments || 'comments';=0A=
        var names =3D notification[comments].map(function(comment) =
{return comment.user.name;}).uniq();=0A=
        var summary =3D this.summary_names(names) + title;=0A=
=0A=
        var link =3D new Template(' <span class=3D"subject_link"><a =
href=3D"#{url}" target=3D"_blank">#{title}</a></span>').evaluate({=0A=
          'summary' : summary, 'url' : notification[subject].url, =
'title' : notification[subject].title=0A=
        });=0A=
        var detail_items =3D new Element('div', {'class' : =
'detail_items'});=0A=
        notification[comments].each(function(comment, index) {=0A=
          if (index > 2) {=0A=
            var template =3D new Template('<div =
class=3D"notification_detail_item clearfix" =
style=3D"display:none;"><span class=3D"left"><a href=3D"#{user_url}" =
target=3D"_blank">#{user_name}</a>=EF=BC=9A#{body} </span><span =
class=3D"time">#{time}</span></div>')=0A=
          } else {=0A=
            var template =3D new Template('<div =
class=3D"notification_detail_item clearfix"><span class=3D"left"><a =
href=3D"#{user_url}" =
target=3D"_blank">#{user_name}</a>=EF=BC=9A#{body}</span> <span =
class=3D"time">#{time}</span></div>')=0A=
          }=0A=
          detail_items.insert(template.evaluate({=0A=
            user_url : comment.user.url, user_name : comment.user.name, =
body : comment.body, time : comment.created_at=0A=
          }));=0A=
          if (comment.url) {=0A=
            var comment_link =3D ' <a target=3D"_blank" href=3D"' + =
comment.url + '">=E6=9F=A5=E7=9C=8B</a>';=0A=
            detail_items.select(":last-child =
.left")[0].insert(comment_link);=0A=
          }=0A=
          if (index =3D=3D=3D 2 && notification[comments].length > 3) {=0A=
            var actions =3D new Element('div', {'class' : =
'notification_detail_item clearfix'});=0A=
            var show_all =3D new Element('a', {'class': =
'show_all'}).update('=E6=9F=A5=E7=9C=8B=E5=8F=A6=E5=A4=96'+ =
(notification[comments].length - 3) + '=E6=9D=A1' );=0A=
            show_all.observe('click', function(ev) {=0A=
              this.up().siblings().each(Element.show);=0A=
              this.up().hide();=0A=
            });=0A=
            actions.insert(show_all);=0A=
            detail_items.insert(actions);=0A=
          }=0A=
        });=0A=
=0A=
        this.render_common_template(notification, {summary : summary, =
detail_title : summary + link, detail_items : detail_items});=0A=
      },=0A=
=0A=
      template_subscription: function(notification) {=0A=
        var names =3D notification.subscribers.map(function(subscriber) =
{return subscriber.name;}).uniq();=0A=
        var summary =3D new =
Template('#{names}=E5=85=B3=E6=B3=A8=E4=BA=86=E6=82=A8').evaluate({=0A=
          names : this.summary_names(names)=0A=
        });=0A=
=0A=
        var detail_items =3D new Element('div', {'class' : =
'detail_items'});=0A=
        notification.subscribers.each(function(subscriber){=0A=
          detail_items.insert(new Template('<div =
class=3D"notification_detail_item clearfix"><div class=3D"logo"><a =
href=3D"#{user_url}" target=3D"_blank"><img src=3D"#{logo_path}" =
/></a></div><a href=3D"#{user_url}" =
target=3D"_blank">#{user_name}</a></div>').evaluate({=0A=
            user_url : subscriber.url, user_name : subscriber.name, =
logo_path : subscriber.logo_path=0A=
          }));=0A=
        });=0A=
        this.render_common_template(notification, {summary : summary, =
detail_title : summary, detail_items : detail_items});=0A=
      },=0A=
=0A=
      template_common: function(notification) {=0A=
        this.render_common_template(notification, {summary : =
notification.title,=0A=
          detail_title : notification.title, detail_content : =
notification.detail,=0A=
          detail_notice : notification.notice});=0A=
      },=0A=
=0A=
      render_common_template: function(notification, params){=0A=
        var summary =3D new Element('div', {id: 'notification_summary_' =
+ notification.id, 'class' : "notification_summary clearfix"});=0A=
        var summary_title =3D new Element('div', {'class' : =
'left'}).update(params.summary);=0A=
        var time =3D '<span class=3D"time">' + notification.updated_at + =
'</span>';=0A=
        if (!notification.read) {=0A=
          summary.addClassName("unread");=0A=
        }=0A=
        summary.update(summary_title).insert(time);=0A=
        notifications_summary.insert(summary);=0A=
=0A=
        var detail =3D new Element('div', {id : 'notification_' + =
notification.id, 'class' : 'notification_detail clearfix'});=0A=
        detail.update('<div class=3D"notification_detail_title =
clearfix"></div><div class=3D"notification_detail_content =
clearfix"></div>').hide();=0A=
        var detail_title =3D new Element('div', {'class' : =
'left'}).update(params.detail_title);=0A=
        =
detail.down('.notification_detail_title').insert(detail_title).insert(tim=
e);=0A=
        var content =3D detail.down('.notification_detail_content');=0A=
        if (params.detail_content) {=0A=
          content.insert(new Element('div', {'class' : =
'system_message'}).insert(params.detail_content));=0A=
        }=0A=
        if (params.detail_items) {content.insert(params.detail_items);}=0A=
        if (params.detail_notice) {=0A=
          var notice =3D new Element('div', {'class' : =
'notification_detail_notice clearfix'}).update(params.detail_notice);=0A=
          detail.insert({bottom : notice});=0A=
        }=0A=
        notifications_detail.insert(detail);=0A=
=0A=
        summary.observe('click', function(ev) {=0A=
          if (notifications_summary.down('.current')) {=0A=
            =
notifications_summary.down('.current').removeClassName('current');=0A=
          }=0A=
          this.addClassName('current');=0A=
          summary_to_detail();=0A=
        });=0A=
      }=0A=
    }=0A=
=0A=
    function refresh_paginate_button() {=0A=
      var current =3D notifications_detail.down('.current')=0A=
      if (current.next('.notification_detail')) {=0A=
        $('next_button').removeClassName('disable');=0A=
      } else {=0A=
        $('next_button').addClassName('disable');=0A=
      }=0A=
      if (current.previous('.notification_detail')) {=0A=
        $('prev_button').removeClassName('disable');=0A=
      } else {=0A=
        $('prev_button').addClassName('disable');=0A=
      }=0A=
    }=0A=
=0A=
    var change_page_effect_running =3D false;=0A=
    function change_page_effect(from, to, reverse) {=0A=
      var topOffset =3D from.positionedOffset()[1] + 'px';=0A=
      var from_status, to_status;=0A=
      change_page_effect_running =3D true;=0A=
      function clean_style(effect){=0A=
        if (effect.element.id =3D=3D=3D from.id) {=0A=
          from_status =3D true;=0A=
        } else {=0A=
          to_status =3D true;=0A=
        }=0A=
        if (from_status && to_status) {=0A=
          from.writeAttribute('style', 'display:none');=0A=
          to.writeAttribute('style', '');=0A=
          change_page_effect_running =3D false;=0A=
          if (!is_ie6() && notifications_detail.visible()) {=0A=
            var link =3D =
notifications_detail.down('.current').select('a').first();=0A=
            if (link) {link.focus();}=0A=
          }=0A=
        }=0A=
      }=0A=
      var width =3D notifications_menu.getWidth();=0A=
      var widthPx =3D width + 'px';=0A=
      if (reverse) {=0A=
        to.setStyle({position: 'absolute', left: '-' + widthPx, width: =
widthPx, top: topOffset}).show();=0A=
        Effect.multiple([from, to], Effect.Move, {speed: 0, x: width, =
duration: 0.15, afterFinish: clean_style});=0A=
      } else {=0A=
        to.setStyle({position: 'absolute', left: widthPx, width: =
widthPx, top: topOffset}).show();=0A=
        Effect.multiple([from, to], Effect.Move, {speed: 0, x: -width, =
duration: 0.15, afterFinish: clean_style});=0A=
      }=0A=
    }=0A=
=0A=
    function read_detail(detail) {=0A=
      $('notification_summary_' + =
detail.id.split('_').last()).removeClassName('unread');=0A=
    }=0A=
=0A=
    function change_detail_page(current, to, reverse) {=0A=
      current.removeClassName('current');=0A=
      to.addClassName('current');=0A=
      var id =3D to.id.split('_').last();=0A=
      notifications_summary.down('.current').removeClassName('current');=0A=
      notifications_summary.down('#notification_summary_' + =
id).addClassName('current');=0A=
      change_page_effect(current, to, reverse);=0A=
      read_detail(to);=0A=
      refresh_paginate_button();=0A=
    }=0A=
=0A=
    function next_detail() {=0A=
      var current =3D notifications_detail.down('.current');=0A=
      var next_page =3D current.next('.notification_detail');=0A=
      if (next_page) {=0A=
        change_detail_page(current, next_page);=0A=
      }=0A=
    }=0A=
=0A=
    function prev_detail() {=0A=
      var current =3D notifications_detail.down('.current');=0A=
      var prev_page =3D current.previous('.notification_detail');=0A=
      if (prev_page) {=0A=
        change_detail_page(current, prev_page, true);=0A=
      }=0A=
    }=0A=
=0A=
    function init_detail_paginate() {=0A=
      var paginate =3D new Element('span', {'class' : 'paginate'});=0A=
      var prev =3D new Element('a', {id : =
'prev_button'}).update('=E2=80=B9 =E4=B8=8A=E4=B8=80=E6=9D=A1');=0A=
      var next =3D new Element('a', {id : =
'next_button'}).update('=E4=B8=8B=E4=B8=80=E6=9D=A1 =E2=80=BA');=0A=
      next.observe('click', function(ev) {=0A=
        if (!this.hasClassName('disable')){=0A=
          next_detail();=0A=
        }=0A=
      });=0A=
      prev.observe('click', function(ev) {=0A=
        if (!this.hasClassName('disable')){=0A=
          prev_detail();=0A=
        }=0A=
      });=0A=
      paginate.insert(prev).insert('<span =
class=3D"separated">|</span>').insert(next);=0A=
      return paginate;=0A=
    }=0A=
=0A=
    function summary_to_detail() {=0A=
      var summary =3D notifications_summary.down('.current');=0A=
      var detail =3D notifications_detail.down('#notification_' + =
summary.id.split('_').last());=0A=
      var prev =3D notifications_detail.down('.current');=0A=
      if (prev) {=0A=
        prev.removeClassName('current').hide();=0A=
      }=0A=
      detail.addClassName('current').show();=0A=
      read_detail(detail);=0A=
      refresh_paginate_button();=0A=
      change_page_effect(notifications_summary, notifications_detail);=0A=
    }=0A=
=0A=
    function hotkey_left() {=0A=
      if (notifications_detail.visible()) {=0A=
        if =
(notifications_detail.down('.current').previous('.notification_detail')) =
{=0A=
          prev_detail();=0A=
        } else {=0A=
          change_page_effect(notifications_detail, =
notifications_summary, true);=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_right() {=0A=
      if (notifications_detail.visible()) {=0A=
        next_detail();=0A=
      } else {=0A=
        if (!notifications_summary.down('.current')) {=0A=
          =
notifications_summary.down('.notification_summary').addClassName('current=
');=0A=
        }=0A=
        summary_to_detail();=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_up() {=0A=
      if (notifications_summary.visible()) {=0A=
        var current_summary =3D notifications_summary.down('.current');=0A=
        if (current_summary) {=0A=
          if (current_summary.previous('.notification_summary')) {=0A=
            current_summary.removeClassName('current');=0A=
            =
current_summary.previous('.notification_summary').addClassName('current')=
;=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_down() {=0A=
      if (notifications_summary.visible()) {=0A=
        var current_summary =3D notifications_summary.down('.current');=0A=
        if (current_summary) {=0A=
          if (current_summary.next('.notification_summary')) {=0A=
            current_summary.removeClassName('current');=0A=
            =
current_summary.next('.notification_summary').addClassName('current');=0A=
          }=0A=
        } else {=0A=
          =
notifications_summary.down('.notification_summary').addClassName('current=
');=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_enter(event) {=0A=
      if (notifications_summary.visible() && =
notifications_summary.down('.current')) {=0A=
        summary_to_detail();=0A=
        event.stop();=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_backspace() {=0A=
      if (notifications_detail.visible()) {=0A=
        change_page_effect(notifications_detail, notifications_summary, =
true);=0A=
      }=0A=
    }=0A=
=0A=
    function init_notification_menu() {=0A=
      notifications_menu =3D new Element('div', {'id': =
'notifications_menu'});=0A=
      notifications_summary =3D new Element('div', {'id': =
'notifications_summary'});=0A=
      notifications_summary.update('<div class=3D"menu_title =
clearfix"><span class=3D"title">=E6=8F=90=E9=86=92</span><span =
class=3D"all"><a =
href=3D"http://my.iteye.com/notifications">=E6=9F=A5=E7=9C=8B=E6=89=80=E6=
=9C=89 =C2=BB</a></span></div>');=0A=
      notifications_menu.insert(notifications_summary);=0A=
=0A=
      notifications_detail =3D new Element('div', {'id': =
'notifications_detail'});=0A=
      var detail_menu_title =3D new Element('div', {'class' : =
'menu_title clearfix'});=0A=
      var return_button =3D new Element('span', {'class' : 'return =
left'}).update('=C2=AB =
=E8=BF=94=E5=9B=9E=E9=80=9A=E7=9F=A5=E5=88=97=E8=A1=A8');=0A=
      =
detail_menu_title.insert(return_button).insert(init_detail_paginate());=0A=
=0A=
      return_button.observe('click', function(ev) {=0A=
        change_page_effect(notifications_detail, notifications_summary, =
true);=0A=
      });=0A=
      notifications_detail.insert(detail_menu_title).hide();=0A=
      notifications_menu.insert(notifications_detail);=0A=
      $('user_nav').insert({after: notifications_menu});=0A=
=0A=
      $(document).observe('keydown', function(event) {=0A=
        if (notifications_menu.visible() && notifications.length > 0 && =
!change_page_effect_running){=0A=
          var keyCode =3D event.keyCode;=0A=
          if (keyCode =3D=3D Event.KEY_LEFT || keyCode =3D=3D 72 ) {=0A=
            hotkey_left();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_RIGHT || keyCode =3D=3D =
76) {=0A=
            hotkey_right();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_UP || keyCode =3D=3D 75) {=0A=
            hotkey_up();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_DOWN || keyCode =3D=3D 74) =
{=0A=
            hotkey_down();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_RETURN) {=0A=
            hotkey_enter(event);=0A=
          } else if (keyCode =3D=3D Event.KEY_BACKSPACE) {=0A=
            hotkey_backspace();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_ESC) {=0A=
            hide_notification_menu();=0A=
          }=0A=
        }=0A=
      });=0A=
=0A=
      $(document.body).observe('click', function(event) {=0A=
        if (notifications_menu.visible()) {=0A=
          var clicked =3D event.element();=0A=
          if (!(clicked =3D=3D=3D notifications_menu || =
clicked.up("#notifications_menu"))) {=0A=
            hide_notification_menu();=0A=
          }=0A=
        }=0A=
      });=0A=
=0A=
    }=0A=
=0A=
    function update_notifications_menu() {=0A=
      $$('#notifications_menu =
.notification_summary').each(Element.remove);=0A=
      $$('#notifications_menu =
.notification_detail').each(Element.remove);=0A=
=0A=
      if (notifications.length > 0) {=0A=
        notifications.each(function(notification) {=0A=
          if (notification) {=0A=
            if (Render['template_' + notification.type]) {=0A=
              Render['template_' + notification.type](notification);=0A=
            } else {=0A=
              Render['template_common'](notification);=0A=
            }=0A=
          };=0A=
        });=0A=
      } else {=0A=
        notifications_summary.insert('<div =
class=3D"notification_summary">=E5=BD=93=E5=89=8D=E6=B2=A1=E6=9C=89=E6=8F=
=90=E9=86=92=E4=BF=A1=E6=81=AF</div>');=0A=
      }=0A=
    }=0A=
=0A=
    function refresh_unread_count(count) {=0A=
      unread_count =3D count;=0A=
      notifications_count.update(unread_count);=0A=
      if (count > 0) {=0A=
        =
notifications_count.addClassName('new_notice').writeAttribute('title', =
'=E6=9C=89' + count + '=E6=9D=A1=E6=9C=AA=E8=AF=BB=E6=B6=88=E6=81=AF');=0A=
      } else {=0A=
        =
notifications_count.removeClassName('new_notice').writeAttribute('title',=
 '=E6=B2=A1=E6=9C=89=E6=9C=AA=E8=AF=BB=E6=B6=88=E6=81=AF');=0A=
      }=0A=
    }=0A=
=0A=
    function update_unread_count(pe) {=0A=
      new =
Ajax.JSONRequest('http://n.iteye.com/notifications/unread_count.json', {=0A=
        method: "get",=0A=
        onComplete: function(response) {=0A=
          var json_respone =3D response.responseJSON;=0A=
          refresh_unread_count(json_respone.unread_count);=0A=
        }=0A=
      });=0A=
    }=0A=
=0A=
    function update_notifications() {=0A=
      var loading =3D new Element('div', {id : =
'notifications_loading'}).update('=E8=BD=BD=E5=85=A5=E4=B8=AD...');=0A=
      notifications_menu.insert({top: loading});=0A=
      new Ajax.Request('/notifications.json', {=0A=
        method: "get",=0A=
        onComplete: function(response) {=0A=
          var json_respone =3D response.responseJSON;=0A=
          notifications =3D json_respone;=0A=
          update_notifications_menu();=0A=
          loading.remove();=0A=
          mark_as_read();=0A=
        }=0A=
      });=0A=
    }=0A=
=0A=
    function mark_as_read() {=0A=
      var unread_ids =3D notifications.map(function(notification){=0A=
        if (!notification.read) {=0A=
          return notification.id;=0A=
        }=0A=
      }).without(undefined);=0A=
      if (unread_ids.length > 0) {=0A=
        new Ajax.Request('/notifications/read.json?ids=3D' + =
unread_ids.join(','), {=0A=
          method: "put",=0A=
          onComplete: function(response) {=0A=
            notifications.each(function(notification){notification.read =
=3D true});=0A=
            refresh_unread_count(response.responseJSON.unread_count);=0A=
          }=0A=
        });=0A=
      }=0A=
    }=0A=
=0A=
    function show_notification_menu() {=0A=
      if (notifications_menu =3D=3D=3D null) {=0A=
        init_notification_menu();=0A=
      } else {=0A=
        notifications_summary.show();=0A=
      }=0A=
      if (unread_count > 0 || notifications =3D=3D=3D undefined) {=0A=
        update_notifications();=0A=
      }=0A=
      notifications_menu.show();=0A=
      notifications_count.addClassName('clicked');=0A=
    }=0A=
=0A=
    function hide_notification_menu() {=0A=
      notifications_summary.hide();=0A=
      notifications_detail.hide();=0A=
      notifications_menu.hide();=0A=
      notifications_count.removeClassName('clicked');=0A=
    }=0A=
=0A=
    function trigger_menu() {=0A=
      if (notifications_count.hasClassName('clicked')) {=0A=
        hide_notification_menu();=0A=
      } else {=0A=
        show_notification_menu();=0A=
      }=0A=
    }=0A=
=0A=
    if (notifications_count) {=0A=
      notifications_count.observe('click', function(event) {=0A=
        trigger_menu();=0A=
        event.stop();=0A=
      });=0A=
      $(document).observe('keydown', function(event){=0A=
        // alt + n=0A=
        if (event.keyCode =3D=3D 78 && event.altKey) {=0A=
          trigger_menu();=0A=
        }=0A=
      });=0A=
      update_unread_count();=0A=
      new PeriodicalExecuter(update_unread_count, 60);=0A=
    }=0A=
  })();=0A=
})=0A=
document.observe("dom:loaded", function() {(function() {=0A=
    var spinner_elem =3D new Element('img', {=0A=
      src: '/images/spinner.gif',=0A=
      'class': 'spinner'=0A=
    });=0A=
=0A=
    var AskPageAction =3D Class.create({=0A=
      initialize: function() {=0A=
        this.data =3D new Hash();=0A=
      },=0A=
      toggle_action: function(event, event_element) {=0A=
        this._event_element =3D event_element;=0A=
        if (this._check()) {=0A=
          this._clean();=0A=
          if (this._is_show) this._factory().show();=0A=
        }=0A=
        event.stop();=0A=
      },=0A=
      get_event_element_parent_id: function() {=0A=
        return this._event_element.readAttribute('data_parent_id');=0A=
      },=0A=
      set_status: function(status_str) {=0A=
        if (status_str =3D=3D 'showing') this.data.set('status', =
'showing');=0A=
        else this.data.set('status', undefined);=0A=
      },=0A=
      get_status: function() {=0A=
        return this.data.get('status');=0A=
      },=0A=
      set_dropdown_status: function(status_str) {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        this.data.set(parent_id + '_status', status_str);=0A=
        this.set_status(status_str)=0A=
      },=0A=
      set_dropdown_current: function(action_obj) {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        this.data.set(parent_id + '_current', action_obj);=0A=
      },=0A=
      get_dropdown_status: function() {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        return this.data.get(parent_id + '_status');=0A=
      },=0A=
      get_dropdown_current: function() {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        return this.data.get(parent_id + '_current');=0A=
      },=0A=
      set_popup_status: function(status_str) {=0A=
        this.data.set('popup_status', status_str);=0A=
        this.set_status(status_str)=0A=
      },=0A=
      set_popup_current: function(action_obj) {=0A=
        this.data.set('popup_current', action_obj);=0A=
      },=0A=
      get_popup_status: function() {=0A=
        return this.data.get('popup_status');=0A=
      },=0A=
      get_popup_current: function() {=0A=
        return this.data.get('popup_current');=0A=
      },=0A=
      hide_current_popup: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        var popup_current;=0A=
        if (popup_current =3D this.get_popup_current()) =
popup_current.hide();=0A=
      },=0A=
      hide_current_dropdown: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        var dropdown_current;=0A=
        if (dropdown_current =3D this.get_dropdown_current()) =
dropdown_current.hide();=0A=
      },=0A=
      submit_comment: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        if (this._event_element.previous('.spinner')) return;=0A=
        var parent_id =3D this.get_event_element_parent_id;=0A=
        var form_elem =3D event_element.up('form');=0A=
        var comment_validate;=0A=
        if (!this.data.get(parent_id + '_comment_validate')) {=0A=
          comment_validate =3D new Validation(form_elem);=0A=
          this.data.set(parent_id + '_comment_validate');=0A=
        }=0A=
        if (!comment_validate.validate()) return;=0A=
=0A=
        var url =3D form_elem['action'];=0A=
        var right_spinner_elem =3D spinner_elem.clone();=0A=
        right_spinner_elem.style.float =3D 'right';=0A=
        this._event_element.insert({=0A=
          before: right_spinner_elem=0A=
        });=0A=
        new Ajax.Request(url, {=0A=
          method: 'post',=0A=
          parameters: form_elem.serialize(),=0A=
          onFailure:function(response){=0A=
            form_elem.insert({top:response.responseText})=0A=
            this._event_element.previous('.spinner').remove();=0A=
            Element.scrollTo(form_elem);=0A=
          }.bind(this),=0A=
          onSuccess: function(transport) {=0A=
            this._event_element.up(0).previous().value =3D '';=0A=
            this._event_element.up(1).insert({=0A=
              before: transport.responseText=0A=
            });=0A=
            =
this.get_dropdown_current().event_element().writeAttribute('data_comments=
_count', =
Number(this.get_dropdown_current().event_element().readAttribute('data_co=
mments_count')) + 1);=0A=
            this._event_element.previous('.spinner').remove();=0A=
          }.bind(this)=0A=
        });=0A=
      },=0A=
      destroy_comment: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        if (this._event_element.previous('.spinner')) return;=0A=
=0A=
        var url =3D this._event_element.readAttribute('data_url');=0A=
        var right_spinner_elem =3D spinner_elem.clone();=0A=
        right_spinner_elem.style.float =3D 'right';=0A=
        this._event_element.insert({=0A=
          before: right_spinner_elem=0A=
        });=0A=
        new Ajax.Request(url, {=0A=
          method: 'delete',=0A=
          onSuccess: function(transport) {=0A=
            this._event_element.up(1).remove();=0A=
            =
this.get_dropdown_current().event_element().writeAttribute('data_comments=
_count', =
Number(this.get_dropdown_current().event_element().readAttribute('data_co=
mments_count')) - 1);=0A=
            this._event_element.previous('.spinner').remove();=0A=
          }.bind(this)=0A=
        });=0A=
      },=0A=
      show_problem_popup_notice: function(params) {=0A=
        this._action_type =3D 'popup';=0A=
        this._clean();=0A=
        var notice_action =3D new NoticeAction(this);=0A=
        notice_action.show(params);=0A=
      },=0A=
      =
//=E6=A3=80=E6=B5=8B=E5=BD=93=E5=89=8D=E6=98=AF=E5=90=A6=E6=9C=89=E5=B1=82=
=E5=9C=A8=E6=98=BE=E7=A4=BA=E4=B8=AD,=E4=BB=A5=E7=A1=AE=E5=AE=9A=E6=98=AF=
=E5=90=A6=E8=BF=90=E8=A1=8Cclean=E5=92=8Cshow=E4=BB=BB=E5=8A=A1=0A=
      =
//=E8=BF=94=E5=9B=9Efalse=E8=A1=A8=E7=A4=BA=E6=9C=89=E4=BB=BB=E5=8A=A1=E8=
=BF=9B=E8=A1=8C=E4=B8=AD,=E4=B8=8D=E6=B8=85=E7=90=86=E5=92=8C=E6=98=BE=E7=
=A4=BA=0A=
      =
//this._is_show=E8=A1=A8=E7=A4=BA=E6=98=AF=E5=90=A6=E6=98=BE=E7=A4=BA=E6=96=
=B0=E7=9A=84=E5=B1=82=0A=
      _check: function() {=0A=
        this._is_show =3D false;=0A=
        var action_type =3D =
this._event_element.readAttribute('data_action_type');=0A=
        this._action_type =3D action_type;=0A=
        if (this.get_status() =3D=3D 'showing') return false;=0A=
        switch (action_type) {=0A=
        case 'dropdown':=0A=
          var dropdown_status =3D this.get_dropdown_status();=0A=
          var dropdown_current =3D this.get_dropdown_current();=0A=
          if (dropdown_status =3D=3D undefined) { =
//=E5=BD=93=E5=89=8D=E6=B2=A1=E6=9C=89=E4=B8=8B=E6=8B=89=E5=B1=82=0A=
            this._is_show =3D true;=0A=
          } else if (dropdown_status =3D=3D 'showed' && =
dropdown_current.event_element() !=3D this._event_element) { =
//=E5=BD=93=E5=89=8D=E6=9C=89=E4=B8=8B=E6=8B=89=E5=B1=82,=E4=BD=86=E9=9C=80=
=E8=A6=81=E6=98=BE=E7=A4=BA=E6=96=B0=E7=9A=84=E4=B8=8B=E6=8B=89=E5=B1=82=0A=
            this._is_show =3D true;=0A=
          } else if (dropdown_status =3D=3D 'showing') { =
//=E6=9C=89=E4=BB=BB=E5=8A=A1=E8=BF=9B=E8=A1=8C=E4=B8=AD=0A=
            return false;=0A=
          }=0A=
          break;=0A=
        case 'popup':=0A=
          var popup_status =3D this.get_popup_status();=0A=
          var popup_current =3D this.get_popup_current();=0A=
          if (popup_status =3D=3D undefined) {=0A=
            this._is_show =3D true;=0A=
          } else if (popup_status =3D=3D 'showed' && =
popup_current.event_element() !=3D this._event_element) {=0A=
            this._is_show =3D true;=0A=
          } else if (popup_status =3D=3D 'showing') {=0A=
            return false;=0A=
          }=0A=
          break;=0A=
        default:=0A=
          return false;=0A=
        }=0A=
        return true;=0A=
      },=0A=
      _clean: function() {=0A=
        switch (this._action_type) {=0A=
        case 'dropdown':=0A=
          var dropdown_current =3D this.get_dropdown_current();=0A=
          if (dropdown_current) {=0A=
            dropdown_current.hide();=0A=
          }=0A=
          break;=0A=
        case 'popup':=0A=
          var popup_current =3D this.get_popup_current();=0A=
          if (popup_current) {=0A=
            popup_current.hide();=0A=
          }=0A=
          break;=0A=
        }=0A=
      },=0A=
      _factory: function() {=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        var action_obj;=0A=
        switch (action_sub_type) {=0A=
        case 'comment':=0A=
          action_obj =3D new CommentAction(this, this._event_element);=0A=
          break;=0A=
        case 'increment_score':=0A=
        case 'edit_tags':=0A=
        case 'replenish':=0A=
          action_obj =3D new CommonDropdownAction(this, =
this._event_element);=0A=
          break;=0A=
        case 'close':=0A=
        case 'destroy':=0A=
        case 'postpone':=0A=
        case 'solution_accept':=0A=
        case 'solution_destroy':=0A=
          action_obj =3D new ConfirmAction(this, this._event_element);=0A=
          break;=0A=
        }=0A=
        return action_obj;=0A=
      }=0A=
=0A=
    });=0A=
=0A=
    var PageAction =3D Class.create({=0A=
      initialize: function(ask_page_action, event_element) {=0A=
        this._ask_page_action =3D ask_page_action;=0A=
        this._event_element =3D event_element;=0A=
      },=0A=
      event_element: function() {=0A=
        return this._event_element;=0A=
      }=0A=
    });=0A=
=0A=
    var CommentAction =3D Class.create(PageAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_dropdown_status('showing');=0A=
        this._ask_page_action.set_dropdown_current(this);=0A=
        this._event_element.appendChild(spinner_elem);=0A=
        var url =3D this._event_element.readAttribute('data_url');=0A=
        new Ajax.Request(url, {=0A=
          method: 'get',=0A=
          onSuccess: function(transport) {=0A=
            this._event_element.up().addClassName('action_selected');=0A=
            this._event_element.up(2).addClassName('action_bg');=0A=
            var img_elem =3D this._event_element.down();=0A=
            this._event_element.update(img_elem);=0A=
            =
this._event_element.appendChild(document.createTextNode('=E6=94=B6=E8=B5=B7=
=E8=AF=84=E8=AE=BA'));=0A=
=0A=
            this._event_element.up(2).insert({=0A=
              after: transport.responseText=0A=
            });=0A=
            this._ask_page_action.set_dropdown_status('showed');=0A=
          }.bind(this)=0A=
        });=0A=
      },=0A=
      hide: function() {=0A=
        var img_elem =3D this._event_element.down();=0A=
        this._event_element.up().removeClassName('action_selected');=0A=
        this._event_element.up(2).removeClassName('action_bg');=0A=
        this._event_element.update(img_elem);=0A=
        var comments_count =3D =
this._event_element.readAttribute('data_comments_count');=0A=
        comments_count =3D Number(comments_count);=0A=
        var comments_count_text;=0A=
        if (comments_count > 0) comments_count_text =3D =
document.createTextNode(comments_count + '=E6=9D=A1=E8=AF=84=E8=AE=BA');=0A=
        else comments_count_text =3D =
document.createTextNode('=E6=B7=BB=E5=8A=A0=E8=AF=84=E8=AE=BA');=0A=
        this._event_element.appendChild(comments_count_text);=0A=
        this._event_element.up(2).next().remove();=0A=
        this._ask_page_action.set_dropdown_status(undefined);=0A=
        this._ask_page_action.set_dropdown_current(undefined);=0A=
      }=0A=
=0A=
    });=0A=
=0A=
    var CommonDropdownAction =3D Class.create(PageAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_dropdown_status('showing');=0A=
        this._ask_page_action.set_dropdown_current(this);=0A=
        this._event_element.up().addClassName('action_selected');=0A=
        this._event_element.up(2).addClassName('action_bg');=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        this._event_element.up(2).insert({=0A=
          after: window.html_codes.get(action_sub_type)=0A=
        });=0A=
        this._ask_page_action.set_dropdown_status('showed');=0A=
      },=0A=
      hide: function() {=0A=
        var img_elem =3D this._event_element.down();=0A=
        this._event_element.up().removeClassName('action_selected');=0A=
        this._event_element.up(2).removeClassName('action_bg');=0A=
        this._event_element.up(2).next().remove();=0A=
        this._ask_page_action.set_dropdown_status(undefined);=0A=
        this._ask_page_action.set_dropdown_current(undefined);=0A=
      }=0A=
    });=0A=
=0A=
    var PopupAction =3D Class.create(PageAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_popup_status('showing');=0A=
        this._ask_page_action.set_popup_current(this);=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        $(document.body).insert({=0A=
          bottom: window.html_codes.get(action_sub_type)=0A=
        });=0A=
        this._set_problem_popupbox_style();=0A=
        this._ask_page_action.set_popup_status('showed');=0A=
      },=0A=
      hide: function() {=0A=
        $('problem_popupbox').remove();=0A=
        this._ask_page_action.set_popup_status(undefined);=0A=
        this._ask_page_action.set_popup_current(undefined);=0A=
      },=0A=
      _set_problem_popupbox_style: function() {=0A=
        if (!$('problem_popupbox')) return;=0A=
        var viewport =3D document.viewport.getDimensions();=0A=
        $('problem_popupbox').setStyle({=0A=
          'position': 'fixed',=0A=
          'left': (viewport.width - =
$('problem_popupbox').getDimensions().width) / 2 + 'px',=0A=
          'top': (viewport.height - =
$('problem_popupbox').getDimensions().height) / 2 + 'px'=0A=
        });=0A=
        if (navigator.userAgent.indexOf("MSIE 6") > 0) { // IE6=0A=
          $('problem_popupbox').setStyle({=0A=
            'position': 'absolute',=0A=
            'top': document.documentElement.scrollTop + (viewport.height =
- $('problem_popupbox').getDimensions().height) / 2 + "px"=0A=
          });=0A=
        }=0A=
      }=0A=
    });=0A=
=0A=
    var ConfirmAction =3D Class.create(PopupAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_popup_status('showing');=0A=
        this._ask_page_action.set_popup_current(this);=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        var html_code =3D window.html_codes.get(action_sub_type);=0A=
        if (this._event_element.readAttribute('replace_url')) {=0A=
          html_code =3D html_code.replace('action_url', =
this._event_element.readAttribute('data_url'));=0A=
        }=0A=
        $(document.body).insert({=0A=
          bottom: html_code=0A=
        });=0A=
        this._set_problem_popupbox_style();=0A=
        this._ask_page_action.set_popup_status('showed');=0A=
      }=0A=
    });=0A=
=0A=
    var NoticeAction =3D Class.create(PopupAction, {=0A=
      initialize: function($super, ask_page_action) {=0A=
        $super(ask_page_action, null);=0A=
      },=0A=
      show: function(params) {=0A=
        this._ask_page_action.set_popup_status('showing');=0A=
        this._ask_page_action.set_popup_current(this);=0A=
        var html_code =3D window.html_codes.get('problem_popup_notice');=0A=
        var notice_template =3D new Template(html_code);=0A=
        var delay_number =3D params['delay_number'] || 0=0A=
        var delay_func =3D params['delay_func']=0A=
        if (delay_number > 0) {=0A=
          if(delay_func){=0A=
            delay_func.delay(delay_number);=0A=
          }else{=0A=
            this.delay_hide.bind(this).delay(delay_number);=0A=
            params['class_name'] =3D params['class_name'] + ' delay';=0A=
          }=0A=
        }=0A=
        $(document.body).insert({=0A=
          bottom: notice_template.evaluate(params)=0A=
        });=0A=
        this._set_problem_popupbox_style();=0A=
        this._ask_page_action.set_popup_status('showed');=0A=
      },=0A=
      delay_hide: function() {=0A=
        var problem_popupbox =3D $('problem_popupbox');=0A=
        if (problem_popupbox && =
problem_popupbox.className.include('delay')) {=0A=
          this.hide();=0A=
        }=0A=
      }=0A=
=0A=
    });=0A=
=0A=
    var ask_page_action =3D new AskPageAction();=0A=
    window.ask_page_action =3D ask_page_action;=0A=
=0A=
    if ($$('div.ask_action_handler').length > 0) {=0A=
      $(document.body).observe('click', function(event) {=0A=
        var event_elem;=0A=
        if (event_elem =3D event.findElement('a.ask_click_action')) {=0A=
          ask_page_action.toggle_action(event, event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input#close_popup_action')) {=0A=
          ask_page_action.hide_current_popup(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input.close_dropdown_action')) {=0A=
          ask_page_action.hide_current_dropdown(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input.submit_comment')) {=0A=
          ask_page_action.submit_comment(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('a.destroy_comment')) {=0A=
          ask_page_action.destroy_comment(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input.after_show_spinner')) {=0A=
          event_elem.disabled =3D true;=0A=
          event_elem.insert({=0A=
            after: spinner_elem=0A=
          });=0A=
          event_elem.form.submit();=0A=
        } else if (event_elem =3D =
event.findElement('input.before_show_spinner')) {=0A=
          event_elem.disabled =3D true;=0A=
          var before_spinner_elem =3D spinner_elem.clone();=0A=
          before_spinner_elem.className =3D 'spinner_img';=0A=
          event_elem.insert({=0A=
            before: before_spinner_elem=0A=
          });=0A=
          event_elem.form.submit();=0A=
        }=0A=
      });=0A=
=0A=
      $(document).observe('keyup', function(event){=0A=
        var keyCode =3D event ? (event.which ? event.which : =
event.keyCode) : window.event.keyCode;=0A=
        var event_elem;=0A=
        if( (keyCode =3D=3D 27) && (event_elem =3D =
$('close_popup_action')) ){ // escape key only, no enter key =0A=
          ask_page_action.hide_current_popup(event_elem);=0A=
        }=0A=
      });=0A=
    }=0A=
  })();=0A=
});=0A=
=0A=
function sortSolutionsByTime(){=0A=
    title =3D $$("#solutions #num")[0];=0A=
    dls =3D $$("#solutions dl.for_sort");=0A=
    dls.sortBy(function(e){=0A=
        return parseInt(e.attributes["time"]["value"])=0A=
    })=0A=
    .each(function(elem){=0A=
        title.insert({after: elem})=0A=
    });=0A=
    $("sort_time_link").style.color =3D "black";=0A=
    $("sort_vote_link").style.color =3D "#069";=0A=
    return false;=0A=
}=0A=
=0A=
function sortSolutionsByVote(){=0A=
    title =3D $$("#solutions #num")[0];=0A=
    dls =3D $$("#solutions dl.for_sort");=0A=
    dls.sortBy(function(e){=0A=
        return parseInt(e.attributes["votes"]["value"])=0A=
    })=0A=
    .each(function(elem){=0A=
        title.insert({=0A=
            after: elem=0A=
        })=0A=
    });=0A=
    $("sort_vote_link").style.color =3D "black";=0A=
    $("sort_time_link").style.color =3D "#069";=0A=
    return false;=0A=
}=0A=
=0A=
function highlightNewAddContent(css_rules) {=0A=
  renameElements(css_rules, 'new-code');=0A=
  dp.SyntaxHighlighter.HighlightAll('new-code', true, true);=0A=
  renameElements(css_rules, 'code');=0A=
}=0A=
=0A=
function renameElements(css_rules, new_name) {=0A=
  $$(css_rules).each(function(element) {=0A=
    element.writeAttribute('name', new_name);=0A=
    console.log(element);=0A=
  });=0A=
}=0A=

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1325907333

/**
 * Modified by quake, add new clipboard swf to support none IE browser =
and generic language highlight
 * Code Syntax Highlighter.
 * Version 1.5.1
 * Copyright (C) 2004-2007 Alex Gorbatchev.
 * http://www.dreamprojections.com/syntaxhighlighter/
 *=20
 * This library is free software; you can redistribute it and/or modify =
it under the terms of the GNU Lesser General=20
 * Public License as published by the Free Software Foundation; either =
version 2.1 of the License, or (at your option)=20
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but =
WITHOUT ANY WARRANTY; without even the implied=20
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See =
the GNU Lesser General Public License for more=20
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public =
License along with this library; if not, write to=20
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330, =
Boston, MA 02111-1307 USA=20
 */

//
// create namespaces
//
var dp =3D {
    sh :
    {
        Toolbar : {},
        Utils	: {},
        RegexLib: {},
        Brushes	: {},
        Version : '1.5.1'
    }
};

// make an alias
dp.SyntaxHighlighter =3D dp.sh;

//
// Toolbar functions
//

dp.sh.Toolbar.CopyToClipboard =3D function(sender)
{
    var n =3D sender;

    while(n !=3D null && n.className.indexOf('dp-highlighter') =3D=3D =
-1)
        n =3D n.parentNode;

    var highlighter =3D n.highlighter;

    var code =3D =
highlighter.originalCode.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replac=
e(/&amp;/g,'&');
    window.clipboardData.setData('text', code);
    =
alert('=E4=BB=A3=E7=A0=81=E5=B7=B2=E8=A2=AB=E5=A4=8D=E5=88=B6=E5=88=B0=E5=
=89=AA=E8=B4=B4=E6=9D=BF');
}

// creates a <div /> with all toolbar links
dp.sh.Toolbar.Create =3D function(highlighter)
{
    var div =3D document.createElement('DIV');
    div.className =3D 'tools';
    div.innerHTML =3D =
highlighter.language.capitalize()+'=E4=BB=A3=E7=A0=81';
    if(window.clipboardData) {
        div.innerHTML +=3D ' <a href=3D"#" =
onclick=3D"dp.sh.Toolbar.CopyToClipboard(this);return false;" =
title=3D"=E5=A4=8D=E5=88=B6=E4=BB=A3=E7=A0=81"><img =
src=3D"/images/icon_copy.gif" =
alt=3D"=E5=A4=8D=E5=88=B6=E4=BB=A3=E7=A0=81"/></a>';
    }else{
        var code =3D =
highlighter.originalCode.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replac=
e(/&amp;/g,'&');
        div.innerHTML +=3D ' <embed wmode=3D"transparent" =
src=3D"/javascripts/syntaxhighlighter/clipboard_new.swf" width=3D"14" =
height=3D"15" flashvars=3D"clipboard=3D'+encodeURIComponent(code)+'" =
quality=3D"high" allowScriptAccess=3D"always" =
type=3D"application/x-shockwave-flash" =
pluginspage=3D"http://www.macromedia.com/go/getflashplayer"/>';
    }
    return div;
}

//
// Common reusable regular expressions
//
dp.sh.RegexLib =3D {
    MultiLineCComments : new RegExp('/\\*[\\s\\S]*?\\*/', 'gm'),
    SingleLineCComments : new RegExp('//.*$', 'gm'),
    SingleLinePerlComments : new RegExp('#.*$', 'gm'),
    DoubleQuotedString : new =
RegExp('"(?:\\.|(\\\\\\")|[^\\""\\n])*"','g'),
    SingleQuotedString : new RegExp("'(?:\\.|(\\\\\\')|[^\\''\\n])*'", =
'g')
};

//
// Match object
//
dp.sh.Match =3D function(value, index, css)
{
    this.value =3D value;
    this.index =3D index;
    this.length =3D value.length;
    this.css =3D css;
}

//
// Highlighter object
//
dp.sh.Highlighter =3D function()
{
    this.noGutter =3D false;
    this.addControls =3D true;
    this.collapse =3D false;
    this.tabsToSpaces =3D true;
    this.wrapColumn =3D 80;
    this.showColumns =3D true;
}

// static callback for the match sorting
dp.sh.Highlighter.SortCallback =3D function(m1, m2)
{
    // sort matches by index first
    if(m1.index < m2.index)
        return -1;
    else if(m1.index > m2.index)
        return 1;
    else
    {
        // if index is the same, sort by length
        if(m1.length < m2.length)
            return -1;
        else if(m1.length > m2.length)
            return 1;
    }
    return 0;
}

dp.sh.Highlighter.prototype.CreateElement =3D function(name)
{
    var result =3D document.createElement(name);
    result.highlighter =3D this;
    return result;
}

// gets a list of all matches for a given regular expression
dp.sh.Highlighter.prototype.GetMatches =3D function(regex, css)
{
    var index =3D 0;
    var match =3D null;

    while((match =3D regex.exec(this.code)) !=3D null)
        this.matches[this.matches.length] =3D new dp.sh.Match(match[0], =
match.index, css);
}

dp.sh.Highlighter.prototype.AddBit =3D function(str, css)
{
    if(str =3D=3D null || str.length =3D=3D 0)
        return;

    var span =3D this.CreateElement('SPAN');
=09
    //	str =3D str.replace(/&/g, '&amp;');
    str =3D str.replace(/ /g, '&nbsp;');
    str =3D str.replace(/</g, '&lt;');
    //	str =3D str.replace(/&lt;/g, '<');
    //	str =3D str.replace(/>/g, '&gt;');
    str =3D str.replace(/\n/gm, '&nbsp;<br>');

    // when adding a piece of code, check to see if it has line breaks =
in it
    // and if it does, wrap individual line breaks with span tags
    if(css !=3D null)
    {
        if((/br/gi).test(str))
        {
            var lines =3D str.split('&nbsp;<br>');
		=09
            for(var i =3D 0; i < lines.length; i++)
            {
                span =3D this.CreateElement('SPAN');
                span.className =3D css;
                span.innerHTML =3D lines[i];
			=09
                this.div.appendChild(span);
			=09
                // don't add a <BR> for the last line
                if(i + 1 < lines.length)
                    this.div.appendChild(this.CreateElement('BR'));
            }
        }
        else
        {
            span.className =3D css;
            span.innerHTML =3D str;
            this.div.appendChild(span);
        }
    }
    else
    {
        span.innerHTML =3D str;
        this.div.appendChild(span);
    }
}

// checks if one match is inside any other match
dp.sh.Highlighter.prototype.IsInside =3D function(match)
{
    if(match =3D=3D null || match.length =3D=3D 0)
        return false;
=09
    for(var i =3D 0; i < this.matches.length; i++)
    {
        var c =3D this.matches[i];
	=09
        if(c =3D=3D null)
            continue;

        if((match.index > c.index) && (match.index < c.index + =
c.length))
            return true;
    }
=09
    return false;
}

dp.sh.Highlighter.prototype.ProcessRegexList =3D function()
{
    for(var i =3D 0; i < this.regexList.length; i++)
        this.GetMatches(this.regexList[i].regex, this.regexList[i].css);
}

dp.sh.Highlighter.prototype.ProcessSmartTabs =3D function(code)
{
    var lines	=3D code.split('\n');
    var result	=3D '';
    var tabSize	=3D 4;
    var tab		=3D '\t';

    // This function inserts specified amount of spaces in the string
    // where a tab is while removing that given tab.
    function InsertSpaces(line, pos, count)
    {
        var left	=3D line.substr(0, pos);
        var right	=3D line.substr(pos + 1, line.length);	// pos + 1 will =
get rid of the tab
        var spaces	=3D '';
	=09
        for(var i =3D 0; i < count; i++)
            spaces +=3D ' ';
	=09
        return left + spaces + right;
    }

    // This function process one line for 'smart tabs'
    function ProcessLine(line, tabSize)
    {
        if(line.indexOf(tab) =3D=3D -1)
            return line;

        var pos =3D 0;

        while((pos =3D line.indexOf(tab)) !=3D -1)
        {
            // This is pretty much all there is to the 'smart tabs' =
logic.
            // Based on the position within the line and size of a tab,
            // calculate the amount of spaces we need to insert.
            var spaces =3D tabSize - pos % tabSize;
		=09
            line =3D InsertSpaces(line, pos, spaces);
        }
	=09
        return line;
    }

    // Go through all the lines and do the 'smart tabs' magic.
    for(var i =3D 0; i < lines.length; i++)
        result +=3D ProcessLine(lines[i], tabSize) + '\n';
=09
    return result;
}

dp.sh.Highlighter.prototype.SwitchToList =3D function()
{
    // thanks to Lachlan Donald from SitePoint.com for this <br/> tag =
fix.
    var html =3D this.div.innerHTML.replace(/<(br)\/?>/gi, '\n');
    var lines =3D html.split('\n');
=09
    if(this.addControls =3D=3D true)
        this.bar.appendChild(dp.sh.Toolbar.Create(this));

    // add columns ruler
    if(this.showColumns)
    {
        var div =3D this.CreateElement('div');
        var columns =3D this.CreateElement('div');
        var showEvery =3D 10;
        var i =3D 1;
	=09
        while(i <=3D 150)
        {
            if(i % showEvery =3D=3D 0)
            {
                div.innerHTML +=3D i;
                i +=3D (i + '').length;
            }
            else
            {
                div.innerHTML +=3D '&middot;';
                i++;
            }
        }
	=09
        columns.className =3D 'columns';
        columns.appendChild(div);
        this.bar.appendChild(columns);
    }

    for(var i =3D 0, lineIndex =3D this.firstLine; i < lines.length - 1; =
i++, lineIndex++)
    {
        var li =3D this.CreateElement('LI');
        var span =3D this.CreateElement('SPAN');
        span.innerHTML =3D lines[i] + '&nbsp;';
        li.appendChild(span);
        this.ol.appendChild(li);
    }
=09
    this.div.innerHTML	=3D '';
}

dp.sh.Highlighter.prototype.Highlight =3D function(code)
{
    function Trim(str)
    {
        return str.replace(/^\s*(.*?)[\s\n]*$/g, '$1');
    }
=09
    function Chop(str)
    {
        return str.replace(/\n*$/, '').replace(/^\n*/, '');
    }

    function Unindent(str)
    {
        var lines =3D str.split('\n');
        var indents =3D new Array();
        var regex =3D new RegExp('^\\s*', 'g');
        var min =3D 1000;

        // go through every line and check for common number of indents
        for(var i =3D 0; i < lines.length && min > 0; i++)
        {
            if(Trim(lines[i]).length =3D=3D 0)
                continue;
			=09
            var matches =3D regex.exec(lines[i]);

            if(matches !=3D null && matches.length > 0)
                min =3D Math.min(matches[0].length, min);
        }

        // trim minimum common number of white space from the begining =
of every line
        if(min > 0)
            for(var i =3D 0; i < lines.length; i++)
                lines[i] =3D lines[i].substr(min);

        return lines.join('\n');
    }
=09
    // This function returns a portions of the string from pos1 to pos2 =
inclusive
    function Copy(string, pos1, pos2)
    {
        return string.substr(pos1, pos2 - pos1);
    }

    var pos	=3D 0;
=09
    if(code =3D=3D null)
        code =3D '';
=09
    this.originalCode =3D code;
    this.code =3D Chop(Unindent(code));
    this.div =3D this.CreateElement('DIV');
    this.bar =3D this.CreateElement('DIV');
    this.ol =3D this.CreateElement('OL');
    this.matches =3D new Array();

    this.div.className =3D 'dp-highlighter';
    this.div.highlighter =3D this;
=09
    this.bar.className =3D 'bar';
=09
    // set the first line
    this.ol.start =3D this.firstLine;

    if(this.CssClass !=3D null)
        this.ol.className =3D this.CssClass;

    if(this.collapse)
        this.div.className +=3D ' collapsed';
=09
    if(this.noGutter)
        this.div.className +=3D ' nogutter';

    // replace tabs with spaces
    if(this.tabsToSpaces =3D=3D true)
        this.code =3D this.ProcessSmartTabs(this.code);

    this.ProcessRegexList();

    // if no matches found, add entire code as plain text
    if(this.matches.length =3D=3D 0)
    {
        this.AddBit(this.code, null);
        this.SwitchToList();
        this.div.appendChild(this.bar);
        this.div.appendChild(this.ol);
        return;
    }

    // sort the matches
    this.matches =3D this.matches.sort(dp.sh.Highlighter.SortCallback);

    // The following loop checks to see if any of the matches are inside
    // of other matches. This process would get rid of highligted =
strings
    // inside comments, keywords inside strings and so on.
    for(var i =3D 0; i < this.matches.length; i++)
        if(this.IsInside(this.matches[i]))
            this.matches[i] =3D null;

    // Finally, go through the final list of matches and pull the all
    // together adding everything in between that isn't a match.
    for(var i =3D 0; i < this.matches.length; i++)
    {
        var match =3D this.matches[i];

        if(match =3D=3D null || match.length =3D=3D 0)
            continue;

        this.AddBit(Copy(this.code, pos, match.index), null);
        this.AddBit(match.value, match.css);

        pos =3D match.index + match.length;
    }
=09
    this.AddBit(this.code.substr(pos), null);

    this.SwitchToList();
    this.div.appendChild(this.bar);
    this.div.appendChild(this.ol);
}

dp.sh.Highlighter.prototype.GetKeywords =3D function(str)=20
{
    return '\\b' + str.replace(/ /g, '\\b|\\b') + '\\b';
}

// highlightes all elements identified by name and gets source code from =
specified property
dp.sh.HighlightAll =3D function(name, showGutter /* optional */, =
showControls /* optional */, collapseAll /* optional */, firstLine /* =
optional */, showColumns /* optional */)
{
    function FindValue()
    {
        var a =3D arguments;
	=09
        for(var i =3D 0; i < a.length; i++)
        {
            if(a[i] =3D=3D null)
                continue;
			=09
            if(typeof(a[i]) =3D=3D 'string' && a[i] !=3D '')
                return a[i] + '';
	=09
            if(typeof(a[i]) =3D=3D 'object' && a[i].value !=3D '')
                return a[i].value + '';
        }
	=09
        return null;
    }
=09
    function IsOptionSet(value, list)
    {
        for(var i =3D 0; i < list.length; i++)
            if(list[i] =3D=3D value)
                return true;
	=09
        return false;
    }
=09
    function GetOptionValue(name, list, defaultValue)
    {
        var regex =3D new RegExp('^' + name + '\\[(\\w+)\\]$', 'gi');
        var matches =3D null;

        for(var i =3D 0; i < list.length; i++)
            if((matches =3D regex.exec(list[i])) !=3D null)
                return matches[1];
	=09
        return defaultValue;
    }
=09
    function FindTagsByName(list, name, tagName)
    {
        var tags =3D document.getElementsByTagName(tagName);

        for(var i =3D 0; i < tags.length; i++)
            if(tags[i].getAttribute('name') =3D=3D name)
                list.push(tags[i]);
    }

    var elements =3D [];
    var highlighter =3D null;
    var registered =3D {};
    var propertyName =3D 'innerHTML';

    // for some reason IE doesn't find <pre/> by name, however it does =
see them just fine by tag name...
    FindTagsByName(elements, name, 'pre');
    FindTagsByName(elements, name, 'textarea');

    if(elements.length =3D=3D 0)
        return;

    // register all brushes
    for(var brush in dp.sh.Brushes)
    {
        var aliases =3D dp.sh.Brushes[brush].Aliases;

        if(aliases =3D=3D null)
            continue;
	=09
        for(var i =3D 0; i < aliases.length; i++)
            registered[aliases[i]] =3D brush;
    }

    for(var i =3D 0; i < elements.length; i++)
    {
        var element =3D elements[i];
        var options =3D FindValue(
            element.attributes['class'], element.className,
            element.attributes['language'], element.language
            );
        var language =3D '';
	=09
        if(options =3D=3D null)
            continue;
	=09
        options =3D options.split(':');
	=09
        language =3D options[0].toLowerCase();

        if(registered[language] =3D=3D null)
            registered[language] =3D registered['default'];
	=09
        // instantiate a brush
        highlighter =3D new dp.sh.Brushes[registered[language]]();
        highlighter.language =3D language;
	=09
        // hide the original element
        element.style.display =3D 'none';

        highlighter.noGutter =3D (showGutter =3D=3D null) ? =
IsOptionSet('nogutter', options) : !showGutter;
        highlighter.addControls =3D (showControls =3D=3D null) ? =
!IsOptionSet('nocontrols', options) : showControls;
        highlighter.collapse =3D (collapseAll =3D=3D null) ? =
IsOptionSet('collapse', options) : collapseAll;
        highlighter.showColumns =3D (showColumns =3D=3D null) ? =
IsOptionSet('showcolumns', options) : showColumns;

        // write out custom brush style
        var headNode =3D document.getElementsByTagName('head')[0];
        if(highlighter.Style && headNode)
        {
            var styleNode =3D document.createElement('style');
            styleNode.setAttribute('type', 'text/css');

            if(styleNode.styleSheet) // for IE
            {
                styleNode.styleSheet.cssText =3D highlighter.Style;
            }
            else // for everyone else
            {
                var textNode =3D =
document.createTextNode(highlighter.Style);
                styleNode.appendChild(textNode);
            }

            headNode.appendChild(styleNode);
        }
	=09
        // first line idea comes from Andrew Collington, thanks!
        highlighter.firstLine =3D (firstLine =3D=3D null) ? =
parseInt(GetOptionValue('firstline', options, 1)) : firstLine;

        highlighter.Highlight(element[propertyName]);
	=09
        highlighter.source =3D element;

        element.parentNode.insertBefore(highlighter.div, element);
    }
}
dp.sh.Brushes.JScript =3D function()
{
	var keywords =3D	'abstract boolean break byte case catch char class =
const continue debugger ' +
					'default delete do double else enum export extends false final =
finally float ' +
					'for function goto if implements import in instanceof int interface =
long native ' +
					'new null package private protected public return short static =
super switch ' +
					'synchronized this throw throws transient true try typeof var void =
volatile while with';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keywords
		];

	this.CssClass =3D 'dp-c';
}

dp.sh.Brushes.JScript.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.JScript.Aliases	=3D ['js', 'jscript', 'javascript'];
dp.sh.Brushes.Java =3D function()
{
	var keywords =3D	'abstract assert boolean break byte case catch char =
class const ' +
			'continue default do double else enum extends ' +
			'false final finally float for goto if implements import ' +
			'instanceof int interface long native new null ' +
			'package private protected public return ' +
			'short static strictfp super switch synchronized this throw throws =
true ' +
			'transient try void volatile while';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,							css: 'comment' },		=
// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,								css: 'comment' },		=
// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		=
// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		=
// strings
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'number' },		// numbers
		{ regex: new RegExp('(?!\\@interface\\b)\\@[\\$\\w]+\\b', 'g'),			css: =
'annotation' },	// annotation @anno
		{ regex: new RegExp('\\@interface\\b', 'g'),							css: 'keyword' },		=
// @interface keyword
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),					css: =
'keyword' }		// java keyword
		];

	this.CssClass =3D 'dp-j';
	this.Style =3D	'.dp-j .annotation { color: #646464; }' +
					'.dp-j .number { color: #C00000; }';
}

dp.sh.Brushes.Java.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Java.Aliases	=3D ['java'];
/* Ruby 1.8.4 syntax contributed by Erik Peterson */
dp.sh.Brushes.Ruby =3D function()
{
  var keywords =3D	'alias and BEGIN begin break case class def =
define_method defined do each else elsif ' +
					'END end ensure false for if in module new next nil not or raise =
redo rescue retry return ' +
					'self super then throw true undef unless until when while yield';

  var builtins =3D	'Array Bignum Binding Class Continuation Dir =
Exception FalseClass File::Stat File Fixnum Fload ' +
					'Hash Integer IO MatchData Method Module NilClass Numeric Object =
Proc Range Regexp String Struct::TMS Symbol ' +
					'ThreadGroup Thread Time TrueClass'

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLinePerlComments,			css: 'comment' },	// =
one line comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,				css: 'string' },	// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,				css: 'string' },	// =
single quoted strings
		{ regex: new RegExp(':[a-z][A-Za-z0-9_]*', 'g'),		css: 'symbol' },	// =
symbols
		{ regex: new RegExp('(\\$|@@|@)\\w+', 'g'),				css: 'variable' },	// =
$global, @instance, and @@class variables
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),	css: 'keyword' =
},	// keywords
		{ regex: new RegExp(this.GetKeywords(builtins), 'gm'),	css: 'builtin' =
}	// builtins
		];

	this.CssClass =3D 'dp-rb';
	this.Style =3D	'.dp-rb .symbol { color: #a70; }' +
					'.dp-rb .variable { color: #a70; font-weight: bold; }';
}

dp.sh.Brushes.Ruby.prototype =3D new dp.sh.Highlighter();
dp.sh.Brushes.Ruby.Aliases =3D ['ruby', 'rails', 'ror'];
dp.sh.Brushes.Xml =3D function()
{
	this.CssClass =3D 'dp-xml';
	this.Style =3D	'.dp-xml .cdata { color: #ff1493; }' +
					'.dp-xml .tag, .dp-xml .tag-name { color: #069; font-weight: bold; =
}' +
					'.dp-xml .attribute { color: red; }' +
					'.dp-xml .attribute-value { color: blue; }';
}

dp.sh.Brushes.Xml.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Xml.Aliases	=3D ['xml', 'xhtml', 'xslt', 'html', 'xhtml'];

dp.sh.Brushes.Xml.prototype.ProcessRegexList =3D function()
{
	function push(array, value)
	{
		array[array.length] =3D value;
	}
=09
	/* If only there was a way to get index of a group within a match, the =
whole XML
	   could be matched with the expression looking something like that:
=09
	   (<!\[CDATA\[\s*.*\s*\]\]>)
	   | (<!--\s*.*\s*?-->)
	   | (<)*(\w+)*\s*(\w+)\s*=3D\s*(".*?"|'.*?'|\w+)(/*>)*
	   | (</?)(.*?)(/?>)
	*/
	var index	=3D 0;
	var match	=3D null;
	var regex	=3D null;

	// Match CDATA in the following format <![ ... [ ... ]]>
	// (\&lt;|<)\!\[[\w\s]*?\[(.|\s)*?\]\](\&gt;|>)
	this.GetMatches(new =
RegExp('(\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\&gt;|>)', 'gm'), =
'cdata');
=09
	// Match comments
	// (\&lt;|<)!--\s*.*?\s*--(\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)!--\\s*.*?\\s*--(\&gt;|>)', 'gm'), =
'comments');

	// Match attributes and their values
	// (:|\w+)\s*=3D\s*(".*?"|\'.*?\'|\w+)*
	regex =3D new =
RegExp('([:\\w-\.]+)\\s*=3D\\s*(".*?"|\'.*?\'|\\w+)*|(\\w+)', 'gm'); // =
Thanks to Tomi Blinnikka of Yahoo! for fixing namespaces in attributes
	while((match =3D regex.exec(this.code)) !=3D null)
	{
		if(match[1] =3D=3D null)
		{
			continue;
		}
		=09
		push(this.matches, new dp.sh.Match(match[1], match.index, =
'attribute'));
=09
		// if xml is invalid and attribute has no property value, ignore it=09
		if(match[2] !=3D undefined)
		{
			push(this.matches, new dp.sh.Match(match[2], match.index + =
match[0].indexOf(match[2]), 'attribute-value'));
		}
	}

	// Match opening and closing tag brackets
	// (\&lt;|<)/*\?*(?!\!)|/*\?*(\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)/*\\?*(?!\\!)|/*\\?*(\&gt;|>)', =
'gm'), 'tag');

	// Match tag names
	// (\&lt;|<)/*\?*\s*(\w+)
	regex =3D new RegExp('(?:\&lt;|<)/*\\?*\\s*([:\\w-\.]+)', 'gm');
	while((match =3D regex.exec(this.code)) !=3D null)
	{
		push(this.matches, new dp.sh.Match(match[1], match.index + =
match[0].indexOf(match[1]), 'tag-name'));
	}
}
dp.sh.Brushes.CSharp =3D function()
{
	var keywords =3D	'abstract as base bool break byte case catch char =
checked class const ' +
					'continue decimal default delegate do double else enum event =
explicit ' +
					'extern false finally fixed float for foreach get goto if implicit =
in int ' +
					'interface internal is lock long namespace new null object operator =
out ' +
					'override params private protected public readonly ref return sbyte =
sealed set ' +
					'short sizeof stackalloc static string struct switch this throw =
true try ' +
					'typeof uint ulong unchecked unsafe ushort using virtual void =
while';

	this.regexList =3D [
		// There's a slight problem with matching single line comments and =
figuring out
		// a difference between // and ///. Using lookahead and lookbehind =
solves the
		// problem, unfortunately JavaScript doesn't support lookbehind. So =
I'm at a=20
		// loss how to translate that regular expression to JavaScript =
compatible one.
//		{ regex: new =
RegExp('(?<!/)//(?!/).*$|(?<!/)////(?!/).*$|/\\*[^\\*]*(.)*?\\*/', =
'gm'),	css: 'comment' },			// one line comments starting with anything =
BUT '///' and multiline comments
//		{ regex: new RegExp('(?<!/)///(?!/).*$', 'gm'),											css: =
'comments' },		// XML comments starting with ///

		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
strings
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// c# keyword
		];

	this.CssClass =3D 'dp-c';
	this.Style =3D '.dp-c .vars { color: #d00; }';
}

dp.sh.Brushes.CSharp.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.CSharp.Aliases	=3D ['c#', 'c-sharp', 'csharp'];
/**
 * Code Syntax Highlighter for C++(Windows Platform).
 * Version 0.0.2
 * Copyright (C) 2006 Shin, YoungJin.
 * http://www.jiniya.net/lecture/techbox/test.html
 *=20
 * This library is free software; you can redistribute it and/or modify =
it under the terms of the GNU Lesser General=20
 * Public License as published by the Free Software Foundation; either =
version 2.1 of the License, or (at your option)=20
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but =
WITHOUT ANY WARRANTY; without even the implied=20
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See =
the GNU Lesser General Public License for more=20
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public =
License along with this library; if not, write to=20
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330, =
Boston, MA 02111-1307 USA=20
 */

dp.sh.Brushes.Cpp =3D function()
{
	var datatypes =3D=20
	'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD DWORDLONG DWORD_PTR ' +
	'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +=20
	'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP ' +
	'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY ' =
+
	'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT ' +
	'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE =
' +
	'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE =
LPCOLORREF ' +
	'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR =
LPTSTR ' +
	'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR =
PCWSTR ' +
	'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE PHKEY =
PINT ' +
	'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 PLONG64 =
POINTER_32 ' +
	'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR =
PUHALF_PTR ' +
	'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR PULONG32 =
PULONG64 ' +
	'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +=20
	'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 =
ULONG ' +
	'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM =
WPARAM WPARAM ' +
	'char bool short int __int32 __int64 __int8 __int16 long float double =
__wchar_t ' +
	'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +
	'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +
	'__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t =
' +
	'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t _purecall_handler ' =
+
	'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function ' +
	'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
	'va_list wchar_t wctrans_t wctype_t wint_t signed';

	var keywords =3D=20
	'break case catch class const __finally __exception __try ' +
	'const_cast continue private public protected __declspec ' +=20
	'default delete deprecated dllexport dllimport do dynamic_cast ' +=20
	'else enum explicit extern if for friend goto inline ' +=20
	'mutable naked namespace new noinline noreturn nothrow ' +=20
	'register reinterpret_cast return selectany ' +=20
	'sizeof static static_cast struct switch template this ' +=20
	'thread throw true false try typedef typeid typename union ' +=20
	'using uuid virtual void volatile whcar_t while';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
strings
		{ regex: new RegExp('^ *#.*', 'gm'),						css: 'preprocessor' },
		{ regex: new RegExp(this.GetKeywords(datatypes), 'gm'),		css: =
'datatypes' },
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}
		];

	this.CssClass =3D 'dp-cpp';
	this.Style =3D	'.dp-cpp .datatypes { color: #2E8B57; font-weight: bold; =
}';
}

dp.sh.Brushes.Cpp.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Cpp.Aliases	=3D ['cpp', 'c', 'c++'];
/* Python 2.3 syntax contributed by Gheorghe Milas */
dp.sh.Brushes.Python =3D function()
{
    var keywords =3D  'and assert break class continue def del elif else =
' +
                    'except exec finally for from global if import in is =
' +
                    'lambda not or pass print raise return try yield =
while';

    var special =3D  'None True False self cls class_'

    this.regexList =3D [
        { regex: dp.sh.RegexLib.SingleLinePerlComments, css: 'comment' =
},
        { regex: new RegExp("^\\s*@\\w+", 'gm'), css: 'decorator' },
        { regex: new RegExp("(['\"]{3})([^\\1])*?\\1", 'gm'), css: =
'comment' },
        { regex: new RegExp('"(?!")(?:\\.|\\\\\\"|[^\\""\\n\\r])*"', =
'gm'), css: 'string' },
        { regex: new RegExp("'(?!')*(?:\\.|(\\\\\\')|[^\\''\\n\\r])*'", =
'gm'), css: 'string' },
        { regex: new RegExp("\\b\\d+\\.?\\w*", 'g'), css: 'number' },
        { regex: new RegExp(this.GetKeywords(keywords), 'gm'), css: =
'keyword' },
        { regex: new RegExp(this.GetKeywords(special), 'gm'), css: =
'special' }
        ];

    this.CssClass =3D 'dp-py';
	this.Style =3D	'.dp-py .builtins { color: #ff1493; }' +
					'.dp-py .magicmethods { color: #808080; }' +
					'.dp-py .exceptions { color: brown; }' +
					'.dp-py .types { color: brown; font-style: italic; }' +
					'.dp-py .commonlibs { color: #8A2BE2; font-style: italic; }';
}

dp.sh.Brushes.Python.prototype  =3D new dp.sh.Highlighter();
dp.sh.Brushes.Python.Aliases    =3D ['py', 'python'];
dp.sh.Brushes.Sql =3D function()
{
	var funcs	=3D	'abs avg case cast coalesce convert count =
current_timestamp ' +
					'current_user day isnull left lower month nullif replace right ' +
					'session_user space substring sum system_user upper user year';

	var keywords =3D	'absolute action add after alter as asc at =
authorization begin bigint ' +
					'binary bit by cascade char character check checkpoint close =
collate ' +
					'column commit committed connect connection constraint contains =
continue ' +
					'create cube current current_date current_time cursor database date =
' +
					'deallocate dec decimal declare default delete desc distinct double =
drop ' +
					'dynamic else end end-exec escape except exec execute false fetch =
first ' +
					'float for force foreign forward free from full function global =
goto grant ' +
					'group grouping having hour ignore index inner insensitive insert =
instead ' +
					'int integer intersect into is isolation key last level load local =
max min ' +
					'minute modify move name national nchar next no numeric of off on =
only ' +
					'open option order out output partial password precision prepare =
primary ' +
					'prior privileges procedure public read real references relative =
repeatable ' +
					'restrict return returns revoke rollback rollup rows rule schema =
scroll ' +
					'second section select sequence serializable set size smallint =
static ' +
					'statistics table temp temporary then time timestamp to top =
transaction ' +
					'translation trigger true truncate uncommitted union unique update =
values ' +
					'varchar varying view when where with work';

	var operators =3D	'all and any between cross in join like not null or =
outer some';

	this.regexList =3D [
		{ regex: new RegExp('--(.*)$', 'gm'),						css: 'comment' },			// one =
line and multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings
		{ regex: new RegExp(this.GetKeywords(funcs), 'gmi'),		css: 'func' },			=
	// functions
		{ regex: new RegExp(this.GetKeywords(operators), 'gmi'),	css: 'op' },		=
		// operators and such
		{ regex: new RegExp(this.GetKeywords(keywords), 'gmi'),		css: =
'keyword' }			// keyword
		];

	this.CssClass =3D 'dp-sql';
	this.Style =3D	'.dp-sql .func { color: #ff1493; }' +
					'.dp-sql .op { color: #808080; }';
}

dp.sh.Brushes.Sql.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Sql.Aliases	=3D ['sql'];
dp.sh.Brushes.Php =3D function()
{
	var funcs	=3D	'abs acos acosh addcslashes addslashes ' +
					'array_change_key_case array_chunk array_combine array_count_values =
array_diff '+
					'array_diff_assoc array_diff_key array_diff_uassoc array_diff_ukey =
array_fill '+
					'array_filter array_flip array_intersect array_intersect_assoc =
array_intersect_key '+
					'array_intersect_uassoc array_intersect_ukey array_key_exists =
array_keys array_map '+
					'array_merge array_merge_recursive array_multisort array_pad =
array_pop array_product '+
					'array_push array_rand array_reduce array_reverse array_search =
array_shift '+
					'array_slice array_splice array_sum array_udiff array_udiff_assoc =
'+
					'array_udiff_uassoc array_uintersect array_uintersect_assoc '+
					'array_uintersect_uassoc array_unique array_unshift array_values =
array_walk '+
					'array_walk_recursive atan atan2 atanh base64_decode base64_encode =
base_convert '+
					'basename bcadd bccomp bcdiv bcmod bcmul bindec bindtextdomain =
bzclose bzcompress '+
					'bzdecompress bzerrno bzerror bzerrstr bzflush bzopen bzread =
bzwrite ceil chdir '+
					'checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split =
class_exists '+
					'closedir closelog copy cos cosh count count_chars date decbin =
dechex decoct '+
					'deg2rad delete ebcdic2ascii echo empty end ereg ereg_replace eregi =
eregi_replace error_log '+
					'error_reporting escapeshellarg escapeshellcmd eval exec exit exp =
explode extension_loaded '+
					'feof fflush fgetc fgetcsv fgets fgetss file_exists =
file_get_contents file_put_contents '+
					'fileatime filectime filegroup fileinode filemtime fileowner =
fileperms filesize filetype '+
					'floatval flock floor flush fmod fnmatch fopen fpassthru fprintf =
fputcsv fputs fread fscanf '+
					'fseek fsockopen fstat ftell ftok getallheaders getcwd getdate =
getenv gethostbyaddr gethostbyname '+
					'gethostbynamel getimagesize getlastmod getmxrr getmygid getmyinode =
getmypid getmyuid getopt '+
					'getprotobyname getprotobynumber getrandmax getrusage getservbyname =
getservbyport gettext '+
					'gettimeofday gettype glob gmdate gmmktime ini_alter ini_get =
ini_get_all ini_restore ini_set '+
					'interface_exists intval ip2long is_a is_array is_bool is_callable =
is_dir is_double '+
					'is_executable is_file is_finite is_float is_infinite is_int =
is_integer is_link is_long '+
					'is_nan is_null is_numeric is_object is_readable is_real =
is_resource is_scalar is_soap_fault '+
					'is_string is_subclass_of is_uploaded_file is_writable is_writeable =
mkdir mktime nl2br '+
					'parse_ini_file parse_str parse_url passthru pathinfo readlink =
realpath rewind rewinddir rmdir '+
					'round str_ireplace str_pad str_repeat str_replace str_rot13 =
str_shuffle str_split '+
					'str_word_count strcasecmp strchr strcmp strcoll strcspn strftime =
strip_tags stripcslashes '+
					'stripos stripslashes stristr strlen strnatcasecmp strnatcmp =
strncasecmp strncmp strpbrk '+
					'strpos strptime strrchr strrev strripos strrpos strspn strstr =
strtok strtolower strtotime '+
					'strtoupper strtr strval substr substr_compare';

	var keywords =3D	'and or xor __FILE__ __LINE__ array as break case ' +
					'cfunction class const continue declare default die do else ' +
					'elseif empty enddeclare endfor endforeach endif endswitch endwhile =
' +
					'extends for foreach function include include_once global if ' +
					'new old_function return static switch use require require_once ' +
					'var while __FUNCTION__ __CLASS__ ' +
					'__METHOD__ abstract interface public implements extends private =
protected throw';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings
		{ regex: new RegExp('\\$\\w+', 'g'),						css: 'vars' },				// =
variables
		{ regex: new RegExp(this.GetKeywords(funcs), 'gmi'),		css: 'func' },			=
	// functions
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keyword
		];

	this.CssClass =3D 'dp-c';
}

dp.sh.Brushes.Php.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Php.Aliases	=3D ['php'];
dp.sh.Brushes.Default =3D function()
{
	this.regexList =3D [
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		=
// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		=
// strings
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'number' }
		];

	this.CssClass =3D 'dp-default';
	this.Style =3D '.dp-default .number { color: #C00000; }';
}

dp.sh.Brushes.Default.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Default.Aliases	=3D ['default'];

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/hotkey.js?1324994303

Object.Event=3D{=0A=
extend:function(object){=0A=
object._objectEventSetup=3Dfunction(event_name){=0A=
this._observers=3Dthis._observers||{};=0A=
this._observers[event_name]=3Dthis._observers[event_name]||[];=0A=
};=0A=
object.observe=3Dfunction(event_name,observer){=0A=
if(typeof(event_name)=3D=3D'string'&&typeof(observer)!=3D'undefined'){=0A=
this._objectEventSetup(event_name);=0A=
if(!this._observers[event_name].include(observer))=0A=
this._observers[event_name].push(observer);=0A=
}else=0A=
for(var e in event_name)=0A=
this.observe(e,event_name[e]);=0A=
};=0A=
object.stopObserving=3Dfunction(event_name,observer){=0A=
this._objectEventSetup(event_name);=0A=
if(event_name&&observer)=0A=
this._observers[event_name]=3Dthis._observers[event_name].without(observe=
r);=0A=
else if(event_name)=0A=
this._observers[event_name]=3D[];=0A=
else=0A=
this._observers=3D{};=0A=
};=0A=
object.observeOnce=3Dfunction(event_name,outer_observer){=0A=
var inner_observer=3Dfunction(){=0A=
outer_observer.apply(this,arguments);=0A=
this.stopObserving(event_name,inner_observer);=0A=
}.bind(this);=0A=
this._objectEventSetup(event_name);=0A=
this._observers[event_name].push(inner_observer);=0A=
};=0A=
object.notify=3Dfunction(event_name){=0A=
this._objectEventSetup(event_name);=0A=
var collected_return_values=3D[];=0A=
var args=3D$A(arguments).slice(1);=0A=
try{=0A=
for(var i=3D0;i<this._observers[event_name].length;++i)=0A=
collected_return_values.push(this._observers[event_name][i].apply(this._o=
bservers[event_name][i],args)||null);=0A=
}catch(e){=0A=
if(e=3D=3D$break)=0A=
return false;=0A=
else=0A=
throw e;=0A=
}=0A=
return collected_return_values;=0A=
};=0A=
if(object.prototype){=0A=
object.prototype._objectEventSetup=3Dobject._objectEventSetup;=0A=
object.prototype.observe=3Dobject.observe;=0A=
object.prototype.stopObserving=3Dobject.stopObserving;=0A=
object.prototype.observeOnce=3Dobject.observeOnce;=0A=
object.prototype.notify=3Dfunction(event_name){=0A=
if(object.notify){=0A=
var args=3D$A(arguments).slice(1);=0A=
args.unshift(this);=0A=
args.unshift(event_name);=0A=
object.notify.apply(object,args);=0A=
}=0A=
this._objectEventSetup(event_name);=0A=
var args=3D$A(arguments).slice(1);=0A=
var collected_return_values=3D[];=0A=
try{=0A=
if(this.options&&this.options[event_name]&&typeof(this.options[event_name=
])=3D=3D'function')=0A=
collected_return_values.push(this.options[event_name].apply(this,args)||n=
ull);=0A=
for(var i=3D0;i<this._observers[event_name].length;++i)=0A=
collected_return_values.push(this._observers[event_name][i].apply(this._o=
bservers[event_name][i],args)||null);=0A=
}catch(e){=0A=
if(e=3D=3D$break)=0A=
return false;=0A=
else=0A=
throw e;=0A=
}=0A=
return collected_return_values;=0A=
};=0A=
}=0A=
}=0A=
};=0A=
var HotKey=3DClass.create({=0A=
initialize:function(letter,callback,options){=0A=
if(!(letter instanceof =
Number))letter=3Dletter.toUpperCase().charCodeAt(0);=0A=
HotKey.hotkeys.push(this);=0A=
this.options=3DObject.extend({=0A=
element:false,=0A=
shiftKey:false,=0A=
altKey:false,=0A=
ctrlKey:true=0A=
},options||{});=0A=
this.letter=3Dletter;=0A=
this.callback=3Dcallback;=0A=
this.element=3D$(this.options.element||document);=0A=
this.handler=3Dfunction(event){=0A=
if(!event||(this.letter=3D=3Devent.keyCode&&((!this.options.shiftKey||(th=
is.options.shiftKey&&event.shiftKey))&&(!this.options.altKey||(this.optio=
ns.altKey&&event.altKey))&&(!this.options.ctrlKey||(this.options.ctrlKey&=
&event.ctrlKey))))){=0A=
this.callback(event);=0A=
event.cancelBubble=3Dtrue;=0A=
event.returnValue=3Dfalse;=0A=
if(event.stopPropagation){=0A=
event.stopPropagation();=0A=
event.preventDefault();=0A=
}=0A=
return false;=0A=
}=0A=
}.bind(this);=0A=
this.enable();=0A=
},=0A=
trigger:function(){=0A=
this.handler();=0A=
},=0A=
enable:function(){=0A=
this.element.observe('keydown',this.handler);=0A=
},=0A=
disable:function(){=0A=
this.element.stopObserving('keydown',this.handler);=0A=
},=0A=
destroy:function(){=0A=
this.disable();=0A=
HotKey.hotkeys=3DControl.HotKey.hotkeys.without(this);=0A=
}=0A=
});=0A=
Object.extend(HotKey,{=0A=
hotkeys:[]=0A=
});=0A=
Object.Event.extend(HotKey);
------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/code_favorites.js?1358214518

=0A=
=0A=
function code_favorites_init(css_rules){=0A=
    css_rules =3D css_rules || "pre[name=3Dcode]";=0A=
=0A=
    $$(css_rules).each(function(pre){=0A=
        var sh_bar_tools =3D pre.previous().down(".tools");=0A=
        var favorite_link =3D '&nbsp;<a href=3D"javascript:void()" =
title=3D"=E6=94=B6=E8=97=8F=E8=BF=99=E6=AE=B5=E4=BB=A3=E7=A0=81" =
onclick=3D"code_favorites_do_favorite(this);return false;">'=0A=
        favorite_link +=3D '<img class=3D"star" =
src=3D"/images/icon_star.png" =
alt=3D"=E6=94=B6=E8=97=8F=E4=BB=A3=E7=A0=81" />';=0A=
        favorite_link +=3D '<img class=3D"spinner" =
src=3D"/images/spinner.gif" style=3D"display:none" />';=0A=
        favorite_link +=3D '</a>';=0A=
        sh_bar_tools.innerHTML +=3D favorite_link;=0A=
    });=0A=
}=0A=
=0A=
function code_favorites_do_favorite(link_element){=0A=
    $(link_element);// for ie6=0A=
    var pre_element =3D link_element.up(".dp-highlighter").next();=0A=
    var parameters =3D undefined;=0A=
    if(pre_element.hasAttribute("code_favorite_id")){=0A=
      parameters =3D {=0A=
        "code_favorite[id]": =
pre_element.readAttribute("code_favorite_id")=0A=
      }=0A=
    }else{=0A=
      var language =3D pre_element.readAttribute("class");=0A=
      language =3D (!language || language =3D=3D =
"data_info")?pre_element.readAttribute("language"):language;=0A=
      var pre_index =3D  pre_element.readAttribute("pre_index") || =
link_element.up(".dp-highlighter").readAttribute("pre_index");=0A=
      parameters =3D {=0A=
        'code_favorite[source_url]': =
pre_element.readAttribute("source_url"),=0A=
        'code_favorite[page_title]': pre_element.readAttribute("title"),=0A=
        'code_favorite[language]': language,=0A=
        'code_favorite[codeable_id]': =
pre_element.readAttribute("codeable_id"),=0A=
        'code_favorite[codeable_type]': =
pre_element.readAttribute("codeable_type"),=0A=
        'code_favorite[code_index]': pre_index=0A=
      };=0A=
    }=0A=
=0A=
    link_element.down('.star').hide();=0A=
    link_element.down('.spinner').show();=0A=
    new Ajax.Request('/admin/code/new_xhr', {=0A=
        method: 'post',=0A=
        parameters: parameters,=0A=
        onSuccess: function(response){=0A=
            $(document.getElementsByTagName('body')[0]).insert({=0A=
                bottom:response.responseText=0A=
            });=0A=
            link_element.down('.spinner').hide();=0A=
            link_element.down('.star').show();=0A=
        }=0A=
    });=0A=
}=0A=
=0A=

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/weiboshare.js?1324994303

function open_window(url) {=0A=
  function o(){=0A=
    =
if(!window.open(url,'iteye',['toolbar=3D0,status=3D0,resizable=3D1,width=3D=
440,height=3D430,left=3D',(screen.width-440)/2,',top=3D',(screen.height-4=
30)/2].join('')))=0A=
      window.location.href =3D url;=0A=
  }=0A=
=0A=
  if(/Firefox/.test(navigator.userAgent)) {=0A=
    setTimeout(o,0);=0A=
  } else {=0A=
    o();=0A=
  }=0A=
}=0A=
=0A=
var WeiboShare =3D Class.create({=0A=
  initialize: function(opts) {=0A=
    var imgs =3D =
opts['img_scope'].select('img:not(.star):not(.spinner)');=0A=
    var img_url =3D '';=0A=
    if(imgs.size() > 0) img_url =3D imgs[0]['src'];=0A=
=0A=
    this.params =3D {=0A=
      title: opts['title'] || document.title,=0A=
      url: encodeURIComponent(opts['url'] || document.location.href),=0A=
      pic: encodeURIComponent(img_url)=0A=
    }=0A=
    this.share_buttons =3D opts['share_buttons'];=0A=
=0A=
    this.share_buttons.select('a').each(function(link){=0A=
      link.observe('click', (function(event){=0A=
        var url =3D =
WeiboShare.make_share_url(link.readAttribute('data-type'), this.params);=0A=
        open_window(url);=0A=
        event.stop();=0A=
      }).bindAsEventListener(this));=0A=
    }, this);=0A=
  }=0A=
});=0A=
=0A=
WeiboShare.register =3D function(sites) {=0A=
  this.sites =3D (this.sites || new Hash()).merge(sites);=0A=
};=0A=
=0A=
WeiboShare.make_share_url =3D function(key, params) {=0A=
  var site_info =3D this.sites.get(key);=0A=
  params['appkey'] =3D site_info['appkey'];=0A=
=0A=
  var param_array =3D [];=0A=
  for(var p in params) {=0A=
    param_array.push(p + '=3D' + params[p]);=0A=
  }=0A=
=0A=
  return (site_info['url'] + '?' + param_array.join('&'));=0A=
}=0A=
=0A=
WeiboShare.register({=0A=
  sina: {=0A=
    url: 'http://service.weibo.com/share/share.php',=0A=
    appkey: '3842512498'=0A=
  },=0A=
  qq: {=0A=
    url: 'http://v.t.qq.com/share/share.php',=0A=
    appkey: '050a47d9d5d848029e1de3198d2abcda'=0A=
  }=0A=
});=0A=

------=_NextPart_000_0000_01CFE526.C5815860
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnimg.cn/pubfooter/js/tracking.js?version=20130923164150

var __slice=3D[].slice;!function(a,b){var =
c,d,e,f,g;e=3Dthis,c=3De.jQuery,d=3D{},a(e,d,c),e.csdn=3D=3D=3Db&&(e.csdn=
=3Dd);for(f in =
d)e[f]=3De.csdn[f]=3Dd[f];(g=3Dd.tracking)({"":[g.baseParams,g.tos,g.sess=
ionId],"bbs.csdn.net":g.tags("/topics/","div.tag =
span"),"blog.csdn.net":g.tags("/article/details/","div.tag2box =
a"),"ask.csdn.net":g.tags("/questions/","div.tag_data a.tag =
span"),"download.csdn.net":g.tags("/detail/",'div.info =
a[href^=3D"/tag/"]'),"www.csdn.net":[g.tags("/article/","div.tag =
a"),g.cmsPid],"www.csto.com":g.tags("/p/","span.tech =
a"),"www.iteye.com":g.tags("/topic/","#topic_tags =
a")})}(function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p;return =
e=3Da.document,k=3Da.location,l=3D"http"=3D=3D=3Dk.protocol.substr(0,4)?"=
":"http:",h=3D[],n=3De.documentElement,i=3Dn.doScroll,j=3D(i?/^loaded|^c/=
:/^loaded|c/).test(e.readyState),g=3Dfunction(){var =
a;for(j=3D1;a=3Dh.shift();)a()},"function"=3D=3Dtypeof =
e.addEventListener&&e.addEventListener("DOMContentLoaded",function(){e.re=
moveEventListener("DOMContentLoaded",arguments.callee,!1),g()}),i&&e.atta=
chEvent("onreadystatechange",function(){/^c/.test(e.readyState)&&(e.detac=
hEvent("onreadystatechange",arguments.callee),g())}),f=3Di?function(b){if=
(a.self!=3D=3Da.top)return =
j?b():h.push(b);try{n.doScroll("left")}catch(c){return void =
a.setTimeout(function(){f(b)},50)}b()}:function(a){j?a():h.push(a)},o=3Df=
unction(a){return/\.?([a-z0-9\-]+\.[a-z0-9\-]+)(:\d+)?$/.exec(a)[1]},b.tr=
acking=3Dp=3Dfunction(a){f(function(){var =
b,c,e,f,g,h,i,j;for(b=3D{},j=3D[a[k.host],a[""]],f=3D0,h=3Dj.length;h>f;f=
++)if(e=3Dj[f])if("function"=3D=3Dtypeof e)e(b);else =
for(g=3D0,i=3De.length;i>g;g++)c=3De[g],"function"=3D=3Dtypeof =
c&&c(b);d(b)})},p.baseParams=3Dfunction(a){var b,c,d,f,g;return =
a.user_name=3D/iteye.com$/.test(k.host)?(null!=3D(b=3D/>=E6=AC=A2=E8=BF=8E=
([^<]+)<\/a>/.exec(null!=3D(c=3De.getElementById("user_nav"))?c.innerHTML=
:void 0))?b[1]:void 0)||"":(null!=3D(d=3D/(; =
)?(UserName)=3D([^;]+)/.exec(e.cookie))?d[3]:void =
0)||"",a["x-acl-token"]=3D"status_js_dkuyqthzbajmncbsb_token",a.pid||(a.p=
id=3D/iteye.com$/.test(k.host)?"iteye":e.body.getAttribute("data-pid")||(=
null!=3D(f=3D/(\w+)\.\w+\.\w+$/.exec(k.host))?f[1]:void =
0)),a.oid=3D(null!=3D(g=3Dm(".h-entry =
.p-author")[0])?g.innerHTML.replace(/^\s+|\s+$/g,""):void =
0)||"",a.referrer=3De.referrer},p.sessionId=3Dfunction(a){var b,c;return =
b=3Dnull!=3D(c=3D/\bdc_session_id=3D([^;]*)(?:$|;)/.exec(e.cookie))?c[1]:=
void 0,/^https?:\/\/([\w-]+\.)*csdn\.net\//.test(e.referrer)||(b=3Dvoid =
0),void 0!=3D=3Db&&/^\d+$/.test(b)||(b=3D+new =
Date),e.cookie=3D"dc_session_id=3D"+b+"; path=3D/; =
domain=3D."+o(k.host),a.session_id=3D""+b},p.tos=3Dfunction(a){var =
b,c,d,f,g;c=3D+new =
Date/1e3|0,d=3Dnull!=3D(g=3D/\bdc_tos=3D([^;]*)(?:$|;)/.exec(e.cookie))?g=
[1]:void 0;try{f=3Dc-parseInt(d,36)}catch(h){b=3Dh,f=3D-1}return =
e.cookie=3D"dc_tos=3D"+c.toString(36)+"; expires=3D"+new =
Date(1e3*(c+14400)).toGMTString()+"; max-age=3D14400; path=3D/; =
domain=3D."+o(k.host),a.tos=3Df},p.tags=3Dfunction(){var a,b;return =
a=3Darguments[0],b=3D2<=3Darguments.length?__slice.call(arguments,1):[],f=
unction(c){var d,e,f,g,h,i,j,l,n,o,p,q,r;if(!("string"=3D=3Dtypeof =
a&&!~k.pathname.indexOf(a)||a instanceof =
RegExp&&!a.test(k.pathname))){for(e=3D[],j=3D0,o=3Db.length;o>j;j++)for(h=
=3Db[j],r=3D"string"=3D=3Dtypeof h?m(h):("function"=3D=3Dtypeof =
h?h():void =
0)||[],l=3D0,p=3Dr.length;p>l;l++)f=3Dr[l],e.push(f);for(g=3D{},n=3D0,q=3D=
e.length;q>n;n++)d=3De[n],g[d.innerHTML.replace(/^\s+|\s+$/g,"")]=3D1;c.t=
ag=3Dfunction(){var a;a=3D[];for(i in g)a.push(i);return =
a}().join()}}},p.cmsPid=3Dfunction(a){if(-1!=3D=3Dk.pathname.indexOf("/ar=
ticle/"))try{return a.pid=3Dm(".brea_nav > =
a")[1].hostname.match(/(\w+)\.\w+\.\w+$/)[1]}catch(b){}},p.querySelectorA=
ll=3Dm=3Dfunction(b){return("function"=3D=3Dtypeof =
e.querySelectorAll?e.querySelectorAll(b):void =
0)||("function"=3D=3Dtypeof c?c(b):void =
0)||a.Prototype&&("function"=3D=3Dtypeof a.$$?a.$$(b):void =
0)||[]},p.crossdomainGet=3Dd=3Dfunction(a){var =
b,c;a[1e4*Math.random()|0]=3D"",b=3Dnew =
Image,b.onload=3Db.onerror=3Dfunction(){b.onload=3Db.onerror=3Dnull,b.rem=
oveAttribute("src"),b=3Dnull},b.src=3Dl+"//dc.csdn.net/track?"+function()=
{var b;b=3D[];for(c in =
a)b.push(encodeURIComponent(c)+"=3D"+encodeURIComponent(a[c]));return =
b}().join("&")}});
------=_NextPart_000_0000_01CFE526.C5815860--
